[{"/var/www/html/Office/react project/KokoFrontEnd/src/index.tsx":"1","/var/www/html/Office/react project/KokoFrontEnd/src/App.tsx":"2","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authToken.tsx":"3","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantService.tsx":"4","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authService.tsx":"5","/var/www/html/Office/react project/KokoFrontEnd/src/i18n/index.tsx":"6","/var/www/html/Office/react project/KokoFrontEnd/src/modules/store.tsx":"7","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authSelectors.tsx":"8","/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsThemeConverter.tsx":"9","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authCurrentTenant.tsx":"10","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantSubdomain.tsx":"11","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authInvitationToken.tsx":"12","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/message.tsx":"13","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/RoutesComponent.tsx":"14","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/axios/authAxios.tsx":"15","/var/www/html/Office/react project/KokoFrontEnd/src/i18n/es.tsx":"16","/var/www/html/Office/react project/KokoFrontEnd/src/i18n/pt-BR.tsx":"17","/var/www/html/Office/react project/KokoFrontEnd/src/i18n/en.tsx":"18","/var/www/html/Office/react project/KokoFrontEnd/src/modules/reducers.tsx":"19","/var/www/html/Office/react project/KokoFrontEnd/src/modules/initializers.tsx":"20","/var/www/html/Office/react project/KokoFrontEnd/src/config/index.tsx":"21","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/EmailUnverifiedRoute.tsx":"22","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/PrivateRoute.tsx":"23","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/PublicRoute.tsx":"24","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/CustomLoadable.tsx":"25","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/ProgressBar.tsx":"26","/var/www/html/Office/react project/KokoFrontEnd/src/view/routes.tsx":"27","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/EmptyTenantRoute.tsx":"28","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/EmptyPermissionsRoute.tsx":"29","/var/www/html/Office/react project/KokoFrontEnd/src/modules/layout/layoutSelectors.tsx":"30","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authInitializer.tsx":"31","/var/www/html/Office/react project/KokoFrontEnd/src/config/localhost.tsx":"32","/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsReducers.tsx":"33","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/LoadingComponent.tsx":"34","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogReducers.tsx":"35","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/permissionChecker.tsx":"36","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userReducers.tsx":"37","/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planReducers.tsx":"38","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/Layout.tsx":"39","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/Error404Page.tsx":"40","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/Error500Page.tsx":"41","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/Error403Page.tsx":"42","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/VerifyEmailPage.tsx":"43","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/PasswordResetPage.tsx":"44","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/InvitationPage.tsx":"45","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/EmailUnverifiedPage.tsx":"46","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/EmptyPermissionsPage.tsx":"47","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/TenantPage.tsx":"48","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/ForgotPasswordPage.tsx":"49","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/SignupPage.tsx":"50","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/SigninPage.tsx":"51","/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/SettingsFormPage.tsx":"52","/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogPage.tsx":"53","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserViewPage.tsx":"54","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/edit/UserEditPage.tsx":"55","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/importer/UserImporterPage.tsx":"56","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authActions.tsx":"57","/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsActions.tsx":"58","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogActions.tsx":"59","/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planActions.tsx":"60","/var/www/html/Office/react project/KokoFrontEnd/src/security/plans.tsx":"61","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/MainAlert.tsx":"62","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/Menu.tsx":"63","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/Header.tsx":"64","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/styles/ErrorWrapper.tsx":"65","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/TenantSelectForm.tsx":"66","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/yup/yupFormSchemas.tsx":"67","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/Wrapper.tsx":"68","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/OtherActions.tsx":"69","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/Logo.tsx":"70","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/Content.tsx":"71","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/InputFormItem.tsx":"72","/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsSelectors.tsx":"73","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/Breadcrumb.tsx":"74","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/edit/UserEditForm.tsx":"75","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/PageTitle.tsx":"76","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/Importer.tsx":"77","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/styles/ContentWrapper.tsx":"78","/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsService.tsx":"79","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/error/errors.tsx":"80","/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planService.tsx":"81","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/exporter/exporter.tsx":"82","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogExporterFields.tsx":"83","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogService.tsx":"84","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogSelectors.tsx":"85","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/GoOnline.tsx":"86","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/UserMenu.tsx":"87","/var/www/html/Office/react project/KokoFrontEnd/src/modules/layout/layoutActions.tsx":"88","/var/www/html/Office/react project/KokoFrontEnd/src/view/menus.tsx":"89","/var/www/html/Office/react project/KokoFrontEnd/src/view/components/CardWithIcon.tsx":"90","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/SelectFormItem.tsx":"91","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/invitation/tenantInvitationSelectors.tsx":"92","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/invitation/tenantInvitationActions.tsx":"93","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/formErrors.tsx":"94","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userEnumerators.tsx":"95","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/FormWrapper.tsx":"96","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterToolbar.tsx":"97","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterStatus.tsx":"98","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterList.tsx":"99","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterForm.tsx":"100","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/form/userFormActions.tsx":"101","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/Spinner.tsx":"102","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/form/userFormSelectors.tsx":"103","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserViewToolbar.tsx":"104","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserView.tsx":"105","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterFields.tsx":"106","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterSelectors.tsx":"107","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterActions.tsx":"108","/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogToolbar.tsx":"109","/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogTable.tsx":"110","/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogFilter.tsx":"111","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/exporter/exporterRenders.tsx":"112","/var/www/html/Office/react project/KokoFrontEnd/src/security/permissions.tsx":"113","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/view/userViewSelectors.tsx":"114","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/view/userViewActions.tsx":"115","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/exporter/exporterSchema.tsx":"116","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/excel/excel.tsx":"117","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/shared/reactSelectMaterialUi.tsx":"118","/var/www/html/Office/react project/KokoFrontEnd/src/security/roles.tsx":"119","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/table/TableCellCustom.tsx":"120","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userService.tsx":"121","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/table/Pagination.tsx":"122","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterRowStatus.tsx":"123","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserStatusView.tsx":"124","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/view/TextViewItem.tsx":"125","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/view/ImagesViewItem.tsx":"126","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/view/CustomViewItem.tsx":"127","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/FilterWrapper.tsx":"128","/var/www/html/Office/react project/KokoFrontEnd/src/security/storage.tsx":"129","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/filter/FilterAccordion.tsx":"130","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/filter/FilterPreview.tsx":"131","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/filter/filterRenders.tsx":"132","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/TagsFormItem.tsx":"133","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/DatePickerRangeFormItem.tsx":"134","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/yup/yupFilterSchemas.tsx":"135","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/ToolbarWrapper.tsx":"136","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/yup/yupImporterSchemas.tsx":"137","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userSelectors.tsx":"138","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerSelectors.tsx":"139","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerActions.tsx":"140","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/styles/ImporterStatusWrapper.tsx":"141","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/modals/ConfirmModal.tsx":"142","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/ColoredChip.tsx":"143","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/styles/ImporterErrorStatusMessage.tsx":"144","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerStatuses.tsx":"145","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/table/styles/PaginationWrapper.tsx":"146","/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/SettingsFormToolbar.tsx":"147","/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/SettingsForm.tsx":"148","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/uploaders/ImagesUploader.tsx":"149","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importer.tsx":"150","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/TenantNewForm.tsx":"151","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterReducers.tsx":"152","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/view/userViewReducers.tsx":"153","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/form/userFormReducers.tsx":"154","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListReducers.tsx":"155","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/ImagesFormItem.tsx":"156","/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/MaterialUIColorTool.tsx":"157","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/modals/ImageModal.tsx":"158","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/fileUpload/fileUploader.tsx":"159","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/PasswordChangeFormPage.tsx":"160","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/ProfileFormPage.tsx":"161","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/new/UserNewPage.tsx":"162","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserPage.tsx":"163","/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/PlanPage.tsx":"164","/var/www/html/Office/react project/KokoFrontEnd/src/view/forums/ForumPage.tsx":"165","/var/www/html/Office/react project/KokoFrontEnd/src/view/consultations/AvailableConsultantsPage.tsx":"166","/var/www/html/Office/react project/KokoFrontEnd/src/view/EMR/EMRDetails.tsx":"167","/var/www/html/Office/react project/KokoFrontEnd/src/view/consultations/ConsultationPage.tsx":"168","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerSchema.tsx":"169","/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/form/TenantFormPage.tsx":"170","/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListPage.tsx":"171","/var/www/html/Office/react project/KokoFrontEnd/src/view/EMR/EMRPage.tsx":"172","/var/www/html/Office/react project/KokoFrontEnd/src/modules/layout/layoutReducers.tsx":"173","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantReducers.tsx":"174","/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authReducers.tsx":"175","/var/www/html/Office/react project/KokoFrontEnd/src/view/dashboard/DashboardPage.tsx":"176","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerReducers.tsx":"177","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListActions.tsx":"178","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/PasswordChangeForm.tsx":"179","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/ProfileForm.tsx":"180","/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/PlanCardFree.tsx":"181","/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/PlanCardPaid.tsx":"182","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserTable.tsx":"183","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserToolbar.tsx":"184","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserFilter.tsx":"185","/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListToolbar.tsx":"186","/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListTable.tsx":"187","/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListFilter.tsx":"188","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/invitation/tenantInvitationReducers.tsx":"189","/var/www/html/Office/react project/KokoFrontEnd/src/view/EMR/component/ConsultationHistory.tsx":"190","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/form/tenantFormSelectors.tsx":"191","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/form/tenantFormReducers.tsx":"192","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/destroy/tenantDestroyReducers.tsx":"193","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/list/tenantListReducers.tsx":"194","/var/www/html/Office/react project/KokoFrontEnd/src/view/dashboard/DashboardTodaysFocus.tsx":"195","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/form/tenantFormActions.tsx":"196","/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/form/TenantForm.tsx":"197","/var/www/html/Office/react project/KokoFrontEnd/src/view/consultations/Person.tsx":"198","/var/www/html/Office/react project/KokoFrontEnd/src/view/online/groupsOnline.tsx":"199","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/new/UserNewForm.tsx":"200","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/urlfy.tsx":"201","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListExporterFields.tsx":"202","/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListSelectors.tsx":"203","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantSelectors.tsx":"204","/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/styles/planCardStyles.tsx":"205","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/list/tenantListSelectors.tsx":"206","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/list/tenantListActions.tsx":"207","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/destroy/tenantDestroySelectors.tsx":"208","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/destroy/tenantDestroyActions.tsx":"209","/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planSelectors.tsx":"210","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/view/MedicaltestViewPage.tsx":"211","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/importer/MedicaltestImporterPage.tsx":"212","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/form/MedicaltestFormPage.tsx":"213","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListPage.tsx":"214","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/importer/DrugsImporterPage.tsx":"215","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/form/DrugsFormPage.tsx":"216","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/view/DrugsViewPage.tsx":"217","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListPage.tsx":"218","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/view/AllergiesViewPage.tsx":"219","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/importer/AllergiesImporterPage.tsx":"220","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/form/AllergiesFormPage.tsx":"221","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListPage.tsx":"222","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/view/AllergiesViewToolbar.tsx":"223","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/view/AllergiesView.tsx":"224","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListToolbar.tsx":"225","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListTable.tsx":"226","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListFilter.tsx":"227","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListToolbar.tsx":"228","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListTable.tsx":"229","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/form/AllergiesForm.tsx":"230","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListFilter.tsx":"231","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/view/DrugsView.tsx":"232","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/view/DrugsViewToolbar.tsx":"233","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/form/DrugsForm.tsx":"234","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListToolbar.tsx":"235","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/RadioFormItem.tsx":"236","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListFilter.tsx":"237","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListTable.tsx":"238","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/form/MedicaltestForm.tsx":"239","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/view/MedicaltestViewToolbar.tsx":"240","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/view/MedicaltestView.tsx":"241","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesEnumerators.tsx":"242","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesSelectors.tsx":"243","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/form/allergiesFormActions.tsx":"244","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/form/allergiesFormSelectors.tsx":"245","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterActions.tsx":"246","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterFields.tsx":"247","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterSelectors.tsx":"248","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/view/allergiesViewActions.tsx":"249","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/view/allergiesViewSelectors.tsx":"250","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/destroy/allergiesDestroyActions.tsx":"251","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/destroy/allergiesDestroySelectors.tsx":"252","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListActions.tsx":"253","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsEnumerators.tsx":"254","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsSelectors.tsx":"255","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListSelectors.tsx":"256","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/form/drugsFormActions.tsx":"257","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/form/drugsFormSelectors.tsx":"258","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterActions.tsx":"259","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterFields.tsx":"260","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterSelectors.tsx":"261","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/view/drugsViewActions.tsx":"262","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/view/drugsViewSelectors.tsx":"263","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/destroy/drugsDestroyActions.tsx":"264","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/destroy/drugsDestroySelectors.tsx":"265","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListSelectors.tsx":"266","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestEnumerators.tsx":"267","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListActions.tsx":"268","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestSelectors.tsx":"269","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/form/medicaltestFormActions.tsx":"270","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/form/medicaltestFormSelectors.tsx":"271","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterActions.tsx":"272","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterFields.tsx":"273","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterSelectors.tsx":"274","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/view/medicaltestViewSelectors.tsx":"275","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/view/medicaltestViewActions.tsx":"276","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/destroy/medicaltestDestroySelectors.tsx":"277","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/destroy/medicaltestDestroyActions.tsx":"278","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListActions.tsx":"279","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestReducers.tsx":"280","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesReducers.tsx":"281","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListSelectors.tsx":"282","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsReducers.tsx":"283","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesPermissions.tsx":"284","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesService.tsx":"285","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterReducers.tsx":"286","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/destroy/drugsDestroyReducers.tsx":"287","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/view/drugsViewReducers.tsx":"288","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/form/drugsFormReducers.tsx":"289","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListReducers.tsx":"290","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterReducers.tsx":"291","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/destroy/allergiesDestroyReducers.tsx":"292","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/view/allergiesViewReducers.tsx":"293","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/form/allergiesFormReducers.tsx":"294","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListReducers.tsx":"295","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterReducers.tsx":"296","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/destroy/medicaltestDestroyReducers.tsx":"297","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/view/medicaltestViewReducers.tsx":"298","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/form/medicaltestFormReducers.tsx":"299","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListReducers.tsx":"300","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListExporterFields.tsx":"301","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestService.tsx":"302","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestPermissions.tsx":"303","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListExporterFields.tsx":"304","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsService.tsx":"305","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsPermissions.tsx":"306","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListExporterFields.tsx":"307","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/view/BranchViewPage.tsx":"308","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/importer/BranchImporterPage.tsx":"309","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListPage.tsx":"310","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/form/BranchFormPage.tsx":"311","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/form/BranchForm.tsx":"312","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/form/branchFormSelectors.tsx":"313","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/form/branchFormActions.tsx":"314","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterSelectors.tsx":"315","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchEnumerators.tsx":"316","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchService.tsx":"317","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListToolbar.tsx":"318","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListTable.tsx":"319","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListFilter.tsx":"320","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterActions.tsx":"321","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterFields.tsx":"322","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/view/BranchViewToolbar.tsx":"323","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/view/BranchView.tsx":"324","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/view/branchViewSelectors.tsx":"325","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/view/branchViewActions.tsx":"326","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/DatePickerFormItem.tsx":"327","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchSelectors.tsx":"328","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListSelectors.tsx":"329","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListActions.tsx":"330","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/destroy/branchDestroySelectors.tsx":"331","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/destroy/branchDestroyActions.tsx":"332","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchPermissions.tsx":"333","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListExporterFields.tsx":"334","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchReducers.tsx":"335","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterReducers.tsx":"336","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/destroy/branchDestroyReducers.tsx":"337","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/view/branchViewReducers.tsx":"338","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/form/branchFormReducers.tsx":"339","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListReducers.tsx":"340","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/list/PatientListPage.tsx":"341","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/form/PatientFormPage.tsx":"342","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/importer/PatientImporterPage.tsx":"343","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/view/PatientViewPage.tsx":"344","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/PersonalvitalsListPage.tsx":"345","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/form/PersonalvitalsFormPage.tsx":"346","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/importer/PersonalvitalsImporterPage.tsx":"347","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/view/PersonalvitalsViewPage.tsx":"348","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/list/PatientListToolbar.tsx":"349","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/list/PatientListTable.tsx":"350","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/view/PatientView.tsx":"351","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/form/PatientForm.tsx":"352","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/view/PatientViewToolbar.tsx":"353","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/PersonalvitalsListTable.tsx":"354","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/PersonalvitalsListToolbar.tsx":"355","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/view/PersonalvitalsViewToolbar.tsx":"356","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/form/PersonalvitalsForm.tsx":"357","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/view/PersonalvitalsView.tsx":"358","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/UpdateVitalModal.tsx":"359","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsReducers.tsx":"360","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientReducers.tsx":"361","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/destroy/patientDestroyReducers.tsx":"362","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/view/patientViewReducers.tsx":"363","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterReducers.tsx":"364","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/form/patientFormReducers.tsx":"365","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListReducers.tsx":"366","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterReducers.tsx":"367","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/view/personalvitalsViewReducers.tsx":"368","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/destroy/personalvitalsDestroyReducers.tsx":"369","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/form/personalvitalsFormReducers.tsx":"370","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListReducers.tsx":"371","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListActions.tsx":"372","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/form/personalvitalsFormActions.tsx":"373","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/destroy/personalvitalsDestroyActions.tsx":"374","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/view/personalvitalsViewActions.tsx":"375","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterActions.tsx":"376","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListActions.tsx":"377","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterActions.tsx":"378","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/form/patientFormActions.tsx":"379","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/view/patientViewActions.tsx":"380","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/destroy/patientDestroyActions.tsx":"381","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsService.tsx":"382","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListExporterFields.tsx":"383","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterFields.tsx":"384","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterFields.tsx":"385","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientService.tsx":"386","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterSelectors.tsx":"387","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterSelectors.tsx":"388","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListSelectors.tsx":"389","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListExporterFields.tsx":"390","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListSelectors.tsx":"391","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientEnumerators.tsx":"392","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/form/patientFormSelectors.tsx":"393","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/view/patientViewSelectors.tsx":"394","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/view/personalvitalsViewSelectors.tsx":"395","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/form/personalvitalsFormSelectors.tsx":"396","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/destroy/personalvitalsDestroySelectors.tsx":"397","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/destroy/patientDestroySelectors.tsx":"398","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientSelectors.tsx":"399","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientPermissions.tsx":"400","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsSelectors.tsx":"401","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsPermissions.tsx":"402","/var/www/html/Office/react project/KokoFrontEnd/src/view/setup/SetupFormPage.tsx":"403","/var/www/html/Office/react project/KokoFrontEnd/src/view/admin_menus.tsx":"404","/var/www/html/Office/react project/KokoFrontEnd/src/view/report.tsx":"405","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/PatientReportFormPage.tsx":"406","/var/www/html/Office/react project/KokoFrontEnd/src/view/patientreport.tsx":"407","/var/www/html/Office/react project/KokoFrontEnd/src/view/report/ReportListPage.tsx":"408","/var/www/html/Office/react project/KokoFrontEnd/src/view/report/component/ReportHistory.tsx":"409","/var/www/html/Office/react project/KokoFrontEnd/src/view/report/ReportDetailsPage.tsx":"410","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/dashboard/DashboardPage.tsx":"411","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/AdminMainAlert.tsx":"412","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/Budget.js":"413","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/PatientCount.js":"414","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/HospitalCount.js":"415","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/Sales.js":"416","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/TrafficByDevice.js":"417","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListPage.tsx":"418","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/form/AppointmentFormPage.tsx":"419","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/importer/AppointmentImporterPage.tsx":"420","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/view/AppointmentViewPage.tsx":"421","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListToolbar.tsx":"422","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListTable.tsx":"423","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListFilter.tsx":"424","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/form/AppointmentForm.tsx":"425","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/view/AppointmentView.tsx":"426","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/view/AppointmentViewToolbar.tsx":"427","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/form/appointmentFormSelectors.tsx":"428","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterSelectors.tsx":"429","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterFields.tsx":"430","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterActions.tsx":"431","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/form/appointmentFormActions.tsx":"432","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/view/appointmentViewSelectors.tsx":"433","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/view/appointmentViewActions.tsx":"434","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentEnumerators.tsx":"435","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListSelectors.tsx":"436","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/destroy/appointmentDestroySelectors.tsx":"437","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/destroy/appointmentDestroyActions.tsx":"438","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentSelectors.tsx":"439","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListActions.tsx":"440","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentPermissions.tsx":"441","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentReducers.tsx":"442","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/view/appointmentViewReducers.tsx":"443","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListReducers.tsx":"444","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/destroy/appointmentDestroyReducers.tsx":"445","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterReducers.tsx":"446","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/form/appointmentFormReducers.tsx":"447","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/form/AppointmentCalendarPage.js":"448","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentService.tsx":"449","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListExporterFields.tsx":"450","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/FamilyInfoForm.tsx":"451","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/OrganDonor.tsx":"452","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/RelatedPatients.tsx":"453","/var/www/html/Office/react project/KokoFrontEnd/src/modules/online/OnlineStatus.tsx":"454","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/view/OnboardingViewPage.tsx":"455","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/importer/OnboardingImporterPage.tsx":"456","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/form/OnboardingFormPage.tsx":"457","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/list/OnboardingListPage.tsx":"458","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationReducers.tsx":"459","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListReducers.tsx":"460","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterReducers.tsx":"461","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/form/organizationFormReducers.tsx":"462","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/view/organizationViewReducers.tsx":"463","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/destroy/organizationDestroyReducers.tsx":"464","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/view/organizationViewActions.tsx":"465","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/form/organizationFormActions.tsx":"466","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/destroy/organizationDestroyActions.tsx":"467","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterActions.tsx":"468","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListActions.tsx":"469","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationService.tsx":"470","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterFields.tsx":"471","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListSelectors.tsx":"472","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListExporterFields.tsx":"473","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterSelectors.tsx":"474","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationEnumerators.tsx":"475","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/importer/OrganizationImporterPage.tsx":"476","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/view/OrganizationViewPage.tsx":"477","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListPage.tsx":"478","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/form/OrganizationFormPage.tsx":"479","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/view/OrganizationView.tsx":"480","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListToolbar.tsx":"481","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListTable.tsx":"482","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/form/OrganizationForm.tsx":"483","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/form/organizationFormSelectors.tsx":"484","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/view/organizationViewSelectors.tsx":"485","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/view/OrganizationViewToolbar.tsx":"486","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListFilter.tsx":"487","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationSelectors.tsx":"488","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/destroy/organizationDestroySelectors.tsx":"489","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationPermissions.tsx":"490","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/WalletComponent.tsx":"491","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/Components/ExistingHospital.tsx":"492","/var/www/html/Office/react project/KokoFrontEnd/src/view/existinghospital/form/ExistinghospitalForm.tsx":"493","/var/www/html/Office/react project/KokoFrontEnd/src/modules/existinghospital/existinghospitalEnumerators.tsx":"494","/var/www/html/Office/react project/KokoFrontEnd/src/view/provider/form/ProviderForm.tsx":"495","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/TextAreaFormItem.tsx":"496","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/Components/defaulthospital.tsx":"497","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/Components/createhospital.tsx":"498","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/VerifyOnboardingPage.tsx":"499","/var/www/html/Office/react project/KokoFrontEnd/src/modules/provider/providerActions.tsx":"500","/var/www/html/Office/react project/KokoFrontEnd/src/modules/provider/providerService.tsx":"501","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/WalletListModal.tsx":"502","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/TabsWrappedLabel.tsx":"503","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/ModalEnterAmount.tsx":"504","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletEnumerators.tsx":"505","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/list/WalletListPage.tsx":"506","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/list/WalletListTranscationDisplay.tsx":"507","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/list/WalletListTable.tsx":"508","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletSelectors.tsx":"509","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListSelectors.tsx":"510","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListActions.tsx":"511","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/destroy/walletDestroyActions.tsx":"512","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/destroy/walletDestroySelectors.tsx":"513","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletPermissions.tsx":"514","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletService.tsx":"515","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListExporterFields.tsx":"516","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/form/WalletFormPage.tsx":"517","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/view/WalletViewPage.tsx":"518","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/form/WalletForm.tsx":"519","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/view/WalletViewToolbar.tsx":"520","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/form/walletFormSelectors.tsx":"521","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/form/walletFormActions.tsx":"522","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/view/walletViewActions.tsx":"523","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/view/walletViewSelectors.tsx":"524","/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/view/WalletView.tsx":"525","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletReducers.tsx":"526","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/form/walletFormReducers.tsx":"527","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/view/walletViewReducers.tsx":"528","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListReducers.tsx":"529","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/destroy/walletDestroyReducers.tsx":"530","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterReducers.tsx":"531","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterActions.tsx":"532","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterSelectors.tsx":"533","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterFields.tsx":"534"},{"size":705,"mtime":1627253562000,"results":"535","hashOfConfig":"536"},{"size":1957,"mtime":1627253562000,"results":"537","hashOfConfig":"536"},{"size":704,"mtime":1627253562000,"results":"538","hashOfConfig":"536"},{"size":2823,"mtime":1627253562000,"results":"539","hashOfConfig":"536"},{"size":3599,"mtime":1628204802000,"results":"540","hashOfConfig":"536"},{"size":3536,"mtime":1627253562000,"results":"541","hashOfConfig":"536"},{"size":931,"mtime":1627253562000,"results":"542","hashOfConfig":"536"},{"size":5601,"mtime":1628775980222,"results":"543","hashOfConfig":"536"},{"size":567,"mtime":1627253562000,"results":"544","hashOfConfig":"536"},{"size":1791,"mtime":1628197542000,"results":"545","hashOfConfig":"536"},{"size":1648,"mtime":1627253562000,"results":"546","hashOfConfig":"536"},{"size":361,"mtime":1627253562000,"results":"547","hashOfConfig":"536"},{"size":306,"mtime":1627253564000,"results":"548","hashOfConfig":"536"},{"size":3515,"mtime":1627253564000,"results":"549","hashOfConfig":"536"},{"size":1009,"mtime":1627253562000,"results":"550","hashOfConfig":"536"},{"size":18494,"mtime":1627253562000,"results":"551","hashOfConfig":"536"},{"size":17146,"mtime":1627253562000,"results":"552","hashOfConfig":"536"},{"size":40922,"mtime":1628782752286,"results":"553","hashOfConfig":"536"},{"size":1377,"mtime":1628782770714,"results":"554","hashOfConfig":"536"},{"size":99,"mtime":1627253562000,"results":"555","hashOfConfig":"536"},{"size":102,"mtime":1627253562000,"results":"556","hashOfConfig":"536"},{"size":842,"mtime":1627253564000,"results":"557","hashOfConfig":"536"},{"size":1764,"mtime":1627253564000,"results":"558","hashOfConfig":"536"},{"size":615,"mtime":1627253564000,"results":"559","hashOfConfig":"536"},{"size":329,"mtime":1627253564000,"results":"560","hashOfConfig":"536"},{"size":244,"mtime":1627253564000,"results":"561","hashOfConfig":"536"},{"size":14390,"mtime":1628778874802,"results":"562","hashOfConfig":"536"},{"size":833,"mtime":1627253564000,"results":"563","hashOfConfig":"536"},{"size":848,"mtime":1627253564000,"results":"564","hashOfConfig":"536"},{"size":678,"mtime":1628197542000,"results":"565","hashOfConfig":"536"},{"size":120,"mtime":1627253562000,"results":"566","hashOfConfig":"536"},{"size":862,"mtime":1628785023791,"results":"567","hashOfConfig":"536"},{"size":1069,"mtime":1627253562000,"results":"568","hashOfConfig":"536"},{"size":271,"mtime":1627253564000,"results":"569","hashOfConfig":"536"},{"size":1776,"mtime":1627253562000,"results":"570","hashOfConfig":"536"},{"size":2917,"mtime":1627253562000,"results":"571","hashOfConfig":"536"},{"size":387,"mtime":1627253564000,"results":"572","hashOfConfig":"536"},{"size":801,"mtime":1627253562000,"results":"573","hashOfConfig":"536"},{"size":1320,"mtime":1627430076000,"results":"574","hashOfConfig":"536"},{"size":861,"mtime":1628563098000,"results":"575","hashOfConfig":"536"},{"size":807,"mtime":1627253564000,"results":"576","hashOfConfig":"536"},{"size":730,"mtime":1627253564000,"results":"577","hashOfConfig":"536"},{"size":3190,"mtime":1627253564000,"results":"578","hashOfConfig":"536"},{"size":3104,"mtime":1627253564000,"results":"579","hashOfConfig":"536"},{"size":2915,"mtime":1627253564000,"results":"580","hashOfConfig":"536"},{"size":2209,"mtime":1627253564000,"results":"581","hashOfConfig":"536"},{"size":1587,"mtime":1627253564000,"results":"582","hashOfConfig":"536"},{"size":2111,"mtime":1627593876000,"results":"583","hashOfConfig":"536"},{"size":3092,"mtime":1627253564000,"results":"584","hashOfConfig":"536"},{"size":4940,"mtime":1628213758000,"results":"585","hashOfConfig":"536"},{"size":6003,"mtime":1628204620000,"results":"586","hashOfConfig":"536"},{"size":1532,"mtime":1627253564000,"results":"587","hashOfConfig":"536"},{"size":839,"mtime":1627253564000,"results":"588","hashOfConfig":"536"},{"size":1350,"mtime":1627253564000,"results":"589","hashOfConfig":"536"},{"size":1721,"mtime":1627253564000,"results":"590","hashOfConfig":"536"},{"size":1013,"mtime":1627253564000,"results":"591","hashOfConfig":"536"},{"size":9077,"mtime":1628669823000,"results":"592","hashOfConfig":"536"},{"size":2016,"mtime":1627253562000,"results":"593","hashOfConfig":"536"},{"size":3259,"mtime":1627253562000,"results":"594","hashOfConfig":"536"},{"size":1613,"mtime":1627253562000,"results":"595","hashOfConfig":"536"},{"size":188,"mtime":1627253564000,"results":"596","hashOfConfig":"536"},{"size":5363,"mtime":1628769348217,"results":"597","hashOfConfig":"536"},{"size":4492,"mtime":1627412338000,"results":"598","hashOfConfig":"536"},{"size":1898,"mtime":1627253564000,"results":"599","hashOfConfig":"536"},{"size":633,"mtime":1627253564000,"results":"600","hashOfConfig":"536"},{"size":2376,"mtime":1627253564000,"results":"601","hashOfConfig":"536"},{"size":6548,"mtime":1627253562000,"results":"602","hashOfConfig":"536"},{"size":504,"mtime":1627253564000,"results":"603","hashOfConfig":"536"},{"size":167,"mtime":1627253564000,"results":"604","hashOfConfig":"536"},{"size":274,"mtime":1627253564000,"results":"605","hashOfConfig":"536"},{"size":422,"mtime":1627253564000,"results":"606","hashOfConfig":"536"},{"size":2016,"mtime":1627692098000,"results":"607","hashOfConfig":"536"},{"size":508,"mtime":1627253562000,"results":"608","hashOfConfig":"536"},{"size":783,"mtime":1627253564000,"results":"609","hashOfConfig":"536"},{"size":3745,"mtime":1627253564000,"results":"610","hashOfConfig":"536"},{"size":175,"mtime":1627253564000,"results":"611","hashOfConfig":"536"},{"size":1001,"mtime":1627253564000,"results":"612","hashOfConfig":"536"},{"size":276,"mtime":1627253564000,"results":"613","hashOfConfig":"536"},{"size":610,"mtime":1627253562000,"results":"614","hashOfConfig":"536"},{"size":2592,"mtime":1628669087000,"results":"615","hashOfConfig":"536"},{"size":639,"mtime":1627253562000,"results":"616","hashOfConfig":"536"},{"size":864,"mtime":1627253562000,"results":"617","hashOfConfig":"536"},{"size":735,"mtime":1627253562000,"results":"618","hashOfConfig":"536"},{"size":515,"mtime":1628694783000,"results":"619","hashOfConfig":"536"},{"size":2691,"mtime":1627253562000,"results":"620","hashOfConfig":"536"},{"size":2751,"mtime":1628197542000,"results":"621","hashOfConfig":"536"},{"size":4174,"mtime":1627335144000,"results":"622","hashOfConfig":"536"},{"size":713,"mtime":1627253562000,"results":"623","hashOfConfig":"536"},{"size":1993,"mtime":1628181284000,"results":"624","hashOfConfig":"536"},{"size":2165,"mtime":1627253564000,"results":"625","hashOfConfig":"536"},{"size":4093,"mtime":1627253564000,"results":"626","hashOfConfig":"536"},{"size":417,"mtime":1627253562000,"results":"627","hashOfConfig":"536"},{"size":3569,"mtime":1627253562000,"results":"628","hashOfConfig":"536"},{"size":452,"mtime":1627253564000,"results":"629","hashOfConfig":"536"},{"size":285,"mtime":1627763612000,"results":"630","hashOfConfig":"536"},{"size":304,"mtime":1627253564000,"results":"631","hashOfConfig":"536"},{"size":4492,"mtime":1627253564000,"results":"632","hashOfConfig":"536"},{"size":2623,"mtime":1627253564000,"results":"633","hashOfConfig":"536"},{"size":4302,"mtime":1627253564000,"results":"634","hashOfConfig":"536"},{"size":1531,"mtime":1627253564000,"results":"635","hashOfConfig":"536"},{"size":2465,"mtime":1627253562000,"results":"636","hashOfConfig":"536"},{"size":442,"mtime":1627253564000,"results":"637","hashOfConfig":"536"},{"size":497,"mtime":1627253562000,"results":"638","hashOfConfig":"536"},{"size":2031,"mtime":1627253564000,"results":"639","hashOfConfig":"536"},{"size":1695,"mtime":1627253564000,"results":"640","hashOfConfig":"536"},{"size":365,"mtime":1627253564000,"results":"641","hashOfConfig":"536"},{"size":185,"mtime":1627253564000,"results":"642","hashOfConfig":"536"},{"size":487,"mtime":1627253564000,"results":"643","hashOfConfig":"536"},{"size":1428,"mtime":1627253564000,"results":"644","hashOfConfig":"536"},{"size":5570,"mtime":1627253564000,"results":"645","hashOfConfig":"536"},{"size":7066,"mtime":1627253564000,"results":"646","hashOfConfig":"536"},{"size":779,"mtime":1627253562000,"results":"647","hashOfConfig":"536"},{"size":6965,"mtime":1628041412000,"results":"648","hashOfConfig":"536"},{"size":363,"mtime":1627253564000,"results":"649","hashOfConfig":"536"},{"size":803,"mtime":1627253564000,"results":"650","hashOfConfig":"536"},{"size":768,"mtime":1627253562000,"results":"651","hashOfConfig":"536"},{"size":880,"mtime":1627253562000,"results":"652","hashOfConfig":"536"},{"size":6462,"mtime":1627253564000,"results":"653","hashOfConfig":"536"},{"size":467,"mtime":1627260576000,"results":"654","hashOfConfig":"536"},{"size":1013,"mtime":1627253564000,"results":"655","hashOfConfig":"536"},{"size":2286,"mtime":1628192658000,"results":"656","hashOfConfig":"536"},{"size":1723,"mtime":1627253564000,"results":"657","hashOfConfig":"536"},{"size":1161,"mtime":1627253564000,"results":"658","hashOfConfig":"536"},{"size":703,"mtime":1627253564000,"results":"659","hashOfConfig":"536"},{"size":685,"mtime":1627253564000,"results":"660","hashOfConfig":"536"},{"size":784,"mtime":1627253564000,"results":"661","hashOfConfig":"536"},{"size":669,"mtime":1627253564000,"results":"662","hashOfConfig":"536"},{"size":349,"mtime":1627253564000,"results":"663","hashOfConfig":"536"},{"size":1623,"mtime":1628685563000,"results":"664","hashOfConfig":"536"},{"size":357,"mtime":1627253564000,"results":"665","hashOfConfig":"536"},{"size":1526,"mtime":1627253564000,"results":"666","hashOfConfig":"536"},{"size":3516,"mtime":1627253562000,"results":"667","hashOfConfig":"536"},{"size":3235,"mtime":1627253564000,"results":"668","hashOfConfig":"536"},{"size":4555,"mtime":1627253564000,"results":"669","hashOfConfig":"536"},{"size":4072,"mtime":1627253562000,"results":"670","hashOfConfig":"536"},{"size":282,"mtime":1627253564000,"results":"671","hashOfConfig":"536"},{"size":7459,"mtime":1627253562000,"results":"672","hashOfConfig":"536"},{"size":1798,"mtime":1627253564000,"results":"673","hashOfConfig":"536"},{"size":3194,"mtime":1627253562000,"results":"674","hashOfConfig":"536"},{"size":4553,"mtime":1627253562000,"results":"675","hashOfConfig":"536"},{"size":187,"mtime":1627253564000,"results":"676","hashOfConfig":"536"},{"size":849,"mtime":1627253564000,"results":"677","hashOfConfig":"536"},{"size":613,"mtime":1627253564000,"results":"678","hashOfConfig":"536"},{"size":271,"mtime":1627253564000,"results":"679","hashOfConfig":"536"},{"size":84,"mtime":1627253562000,"results":"680","hashOfConfig":"536"},{"size":248,"mtime":1627253564000,"results":"681","hashOfConfig":"536"},{"size":879,"mtime":1627253564000,"results":"682","hashOfConfig":"536"},{"size":4427,"mtime":1627253564000,"results":"683","hashOfConfig":"536"},{"size":5128,"mtime":1627253564000,"results":"684","hashOfConfig":"536"},{"size":1904,"mtime":1627253562000,"results":"685","hashOfConfig":"536"},{"size":3270,"mtime":1627253564000,"results":"686","hashOfConfig":"536"},{"size":189,"mtime":1627253564000,"results":"687","hashOfConfig":"536"},{"size":560,"mtime":1627253564000,"results":"688","hashOfConfig":"536"},{"size":1231,"mtime":1627253562000,"results":"689","hashOfConfig":"536"},{"size":3238,"mtime":1627253564000,"results":"690","hashOfConfig":"536"},{"size":1859,"mtime":1627253564000,"results":"691","hashOfConfig":"536"},{"size":7706,"mtime":1627253564000,"results":"692","hashOfConfig":"536"},{"size":2193,"mtime":1627253564000,"results":"693","hashOfConfig":"536"},{"size":2881,"mtime":1627253562000,"results":"694","hashOfConfig":"536"},{"size":837,"mtime":1627253564000,"results":"695","hashOfConfig":"536"},{"size":887,"mtime":1628564416000,"results":"696","hashOfConfig":"536"},{"size":1319,"mtime":1627253564000,"results":"697","hashOfConfig":"536"},{"size":786,"mtime":1627253564000,"results":"698","hashOfConfig":"536"},{"size":1130,"mtime":1627253564000,"results":"699","hashOfConfig":"536"},{"size":7460,"mtime":1627590812000,"results":"700","hashOfConfig":"536"},{"size":9578,"mtime":1627852330000,"results":"701","hashOfConfig":"536"},{"size":212,"mtime":1627253564000,"results":"702","hashOfConfig":"536"},{"size":4573,"mtime":1627480670000,"results":"703","hashOfConfig":"536"},{"size":1303,"mtime":1627253562000,"results":"704","hashOfConfig":"536"},{"size":1996,"mtime":1627253564000,"results":"705","hashOfConfig":"536"},{"size":718,"mtime":1627253564000,"results":"706","hashOfConfig":"536"},{"size":1983,"mtime":1627537252000,"results":"707","hashOfConfig":"536"},{"size":600,"mtime":1627253562000,"results":"708","hashOfConfig":"536"},{"size":399,"mtime":1627253562000,"results":"709","hashOfConfig":"536"},{"size":4163,"mtime":1627253562000,"results":"710","hashOfConfig":"536"},{"size":2232,"mtime":1627536224000,"results":"711","hashOfConfig":"536"},{"size":2387,"mtime":1627253562000,"results":"712","hashOfConfig":"536"},{"size":5484,"mtime":1627253564000,"results":"713","hashOfConfig":"536"},{"size":4216,"mtime":1627253564000,"results":"714","hashOfConfig":"536"},{"size":6158,"mtime":1628669360000,"results":"715","hashOfConfig":"536"},{"size":1359,"mtime":1627253564000,"results":"716","hashOfConfig":"536"},{"size":3261,"mtime":1627253564000,"results":"717","hashOfConfig":"536"},{"size":8555,"mtime":1628193532000,"results":"718","hashOfConfig":"536"},{"size":3885,"mtime":1627253564000,"results":"719","hashOfConfig":"536"},{"size":5940,"mtime":1627253564000,"results":"720","hashOfConfig":"536"},{"size":606,"mtime":1627253564000,"results":"721","hashOfConfig":"536"},{"size":11445,"mtime":1627253564000,"results":"722","hashOfConfig":"536"},{"size":337,"mtime":1627253564000,"results":"723","hashOfConfig":"536"},{"size":1415,"mtime":1627253562000,"results":"724","hashOfConfig":"536"},{"size":4759,"mtime":1627253564000,"results":"725","hashOfConfig":"536"},{"size":508,"mtime":1627253562000,"results":"726","hashOfConfig":"536"},{"size":1252,"mtime":1627253562000,"results":"727","hashOfConfig":"536"},{"size":508,"mtime":1627253562000,"results":"728","hashOfConfig":"536"},{"size":2242,"mtime":1627253562000,"results":"729","hashOfConfig":"536"},{"size":2273,"mtime":1627334580000,"results":"730","hashOfConfig":"536"},{"size":2338,"mtime":1627253562000,"results":"731","hashOfConfig":"536"},{"size":4076,"mtime":1627253564000,"results":"732","hashOfConfig":"536"},{"size":2027,"mtime":1627253564000,"results":"733","hashOfConfig":"536"},{"size":2435,"mtime":1627536874000,"results":"734","hashOfConfig":"536"},{"size":4717,"mtime":1627253564000,"results":"735","hashOfConfig":"536"},{"size":334,"mtime":1627253564000,"results":"736","hashOfConfig":"536"},{"size":743,"mtime":1627253564000,"results":"737","hashOfConfig":"536"},{"size":2397,"mtime":1627253564000,"results":"738","hashOfConfig":"536"},{"size":1260,"mtime":1627253562000,"results":"739","hashOfConfig":"536"},{"size":1366,"mtime":1627253564000,"results":"740","hashOfConfig":"536"},{"size":2287,"mtime":1627253562000,"results":"741","hashOfConfig":"536"},{"size":2670,"mtime":1627253562000,"results":"742","hashOfConfig":"536"},{"size":275,"mtime":1627253562000,"results":"743","hashOfConfig":"536"},{"size":1276,"mtime":1627253562000,"results":"744","hashOfConfig":"536"},{"size":1193,"mtime":1627253562000,"results":"745","hashOfConfig":"536"},{"size":1518,"mtime":1627325108000,"results":"746","hashOfConfig":"536"},{"size":1168,"mtime":1627325108000,"results":"747","hashOfConfig":"536"},{"size":2208,"mtime":1628554504000,"results":"748","hashOfConfig":"536"},{"size":990,"mtime":1628554362000,"results":"749","hashOfConfig":"536"},{"size":1090,"mtime":1627325092000,"results":"750","hashOfConfig":"536"},{"size":2122,"mtime":1627325092000,"results":"751","hashOfConfig":"536"},{"size":1410,"mtime":1627325092000,"results":"752","hashOfConfig":"536"},{"size":894,"mtime":1628613917000,"results":"753","hashOfConfig":"536"},{"size":1482,"mtime":1627325058000,"results":"754","hashOfConfig":"536"},{"size":1142,"mtime":1627325058000,"results":"755","hashOfConfig":"536"},{"size":2182,"mtime":1627325058000,"results":"756","hashOfConfig":"536"},{"size":966,"mtime":1628113180000,"results":"757","hashOfConfig":"536"},{"size":3047,"mtime":1627325058000,"results":"758","hashOfConfig":"536"},{"size":945,"mtime":1627325058000,"results":"759","hashOfConfig":"536"},{"size":4877,"mtime":1627325092000,"results":"760","hashOfConfig":"536"},{"size":9320,"mtime":1628025904000,"results":"761","hashOfConfig":"536"},{"size":6983,"mtime":1628613885000,"results":"762","hashOfConfig":"536"},{"size":4953,"mtime":1627325058000,"results":"763","hashOfConfig":"536"},{"size":8145,"mtime":1628181216000,"results":"764","hashOfConfig":"536"},{"size":4334,"mtime":1628772429562,"results":"765","hashOfConfig":"536"},{"size":5527,"mtime":1627325058000,"results":"766","hashOfConfig":"536"},{"size":1425,"mtime":1627325092000,"results":"767","hashOfConfig":"536"},{"size":2999,"mtime":1627325092000,"results":"768","hashOfConfig":"536"},{"size":6118,"mtime":1628764791849,"results":"769","hashOfConfig":"536"},{"size":4991,"mtime":1627325108000,"results":"770","hashOfConfig":"536"},{"size":2137,"mtime":1627872692000,"results":"771","hashOfConfig":"536"},{"size":7311,"mtime":1628556852000,"results":"772","hashOfConfig":"536"},{"size":9296,"mtime":1627325108000,"results":"773","hashOfConfig":"536"},{"size":6199,"mtime":1628453038000,"results":"774","hashOfConfig":"536"},{"size":3071,"mtime":1627325108000,"results":"775","hashOfConfig":"536"},{"size":1586,"mtime":1627325108000,"results":"776","hashOfConfig":"536"},{"size":114,"mtime":1628131046000,"results":"777","hashOfConfig":"536"},{"size":1905,"mtime":1627325430000,"results":"778","hashOfConfig":"536"},{"size":2357,"mtime":1627325430000,"results":"779","hashOfConfig":"536"},{"size":517,"mtime":1627325430000,"results":"780","hashOfConfig":"536"},{"size":556,"mtime":1627325430000,"results":"781","hashOfConfig":"536"},{"size":871,"mtime":1627325430000,"results":"782","hashOfConfig":"536"},{"size":205,"mtime":1627325430000,"results":"783","hashOfConfig":"536"},{"size":862,"mtime":1627325430000,"results":"784","hashOfConfig":"536"},{"size":396,"mtime":1627325430000,"results":"785","hashOfConfig":"536"},{"size":2134,"mtime":1627325430000,"results":"786","hashOfConfig":"536"},{"size":285,"mtime":1627325430000,"results":"787","hashOfConfig":"536"},{"size":3885,"mtime":1627325430000,"results":"788","hashOfConfig":"536"},{"size":235,"mtime":1627325430000,"results":"789","hashOfConfig":"536"},{"size":1845,"mtime":1627325430000,"results":"790","hashOfConfig":"536"},{"size":2412,"mtime":1627325430000,"results":"791","hashOfConfig":"536"},{"size":2265,"mtime":1627325430000,"results":"792","hashOfConfig":"536"},{"size":505,"mtime":1627325430000,"results":"793","hashOfConfig":"536"},{"size":508,"mtime":1627325430000,"results":"794","hashOfConfig":"536"},{"size":1261,"mtime":1627325430000,"results":"795","hashOfConfig":"536"},{"size":193,"mtime":1627325430000,"results":"796","hashOfConfig":"536"},{"size":818,"mtime":1627325430000,"results":"797","hashOfConfig":"536"},{"size":384,"mtime":1627325430000,"results":"798","hashOfConfig":"536"},{"size":2054,"mtime":1627325430000,"results":"799","hashOfConfig":"536"},{"size":273,"mtime":1627325430000,"results":"800","hashOfConfig":"536"},{"size":2400,"mtime":1627325430000,"results":"801","hashOfConfig":"536"},{"size":199,"mtime":1627325430000,"results":"802","hashOfConfig":"536"},{"size":3769,"mtime":1627325430000,"results":"803","hashOfConfig":"536"},{"size":1935,"mtime":1627325430000,"results":"804","hashOfConfig":"536"},{"size":2403,"mtime":1627325430000,"results":"805","hashOfConfig":"536"},{"size":523,"mtime":1627325430000,"results":"806","hashOfConfig":"536"},{"size":580,"mtime":1627325430000,"results":"807","hashOfConfig":"536"},{"size":1485,"mtime":1627325430000,"results":"808","hashOfConfig":"536"},{"size":211,"mtime":1627325430000,"results":"809","hashOfConfig":"536"},{"size":402,"mtime":1627325430000,"results":"810","hashOfConfig":"536"},{"size":884,"mtime":1627325430000,"results":"811","hashOfConfig":"536"},{"size":291,"mtime":1627325430000,"results":"812","hashOfConfig":"536"},{"size":2174,"mtime":1627325430000,"results":"813","hashOfConfig":"536"},{"size":3943,"mtime":1627325430000,"results":"814","hashOfConfig":"536"},{"size":536,"mtime":1627325430000,"results":"815","hashOfConfig":"536"},{"size":516,"mtime":1627325430000,"results":"816","hashOfConfig":"536"},{"size":2418,"mtime":1627325430000,"results":"817","hashOfConfig":"536"},{"size":476,"mtime":1627325430000,"results":"818","hashOfConfig":"536"},{"size":1625,"mtime":1627325430000,"results":"819","hashOfConfig":"536"},{"size":2129,"mtime":1628615887000,"results":"820","hashOfConfig":"536"},{"size":191,"mtime":1627325430000,"results":"821","hashOfConfig":"536"},{"size":831,"mtime":1627325430000,"results":"822","hashOfConfig":"536"},{"size":570,"mtime":1627325430000,"results":"823","hashOfConfig":"536"},{"size":1250,"mtime":1627325430000,"results":"824","hashOfConfig":"536"},{"size":2573,"mtime":1627325430000,"results":"825","hashOfConfig":"536"},{"size":199,"mtime":1627325430000,"results":"826","hashOfConfig":"536"},{"size":839,"mtime":1627325430000,"results":"827","hashOfConfig":"536"},{"size":578,"mtime":1627325430000,"results":"828","hashOfConfig":"536"},{"size":1258,"mtime":1627325430000,"results":"829","hashOfConfig":"536"},{"size":2581,"mtime":1627325430000,"results":"830","hashOfConfig":"536"},{"size":203,"mtime":1627325430000,"results":"831","hashOfConfig":"536"},{"size":843,"mtime":1627325430000,"results":"832","hashOfConfig":"536"},{"size":582,"mtime":1627325430000,"results":"833","hashOfConfig":"536"},{"size":1262,"mtime":1627325430000,"results":"834","hashOfConfig":"536"},{"size":2585,"mtime":1627325430000,"results":"835","hashOfConfig":"536"},{"size":1332,"mtime":1627325430000,"results":"836","hashOfConfig":"536"},{"size":2145,"mtime":1628556954000,"results":"837","hashOfConfig":"536"},{"size":1653,"mtime":1627325430000,"results":"838","hashOfConfig":"536"},{"size":619,"mtime":1627325430000,"results":"839","hashOfConfig":"536"},{"size":2081,"mtime":1628613349000,"results":"840","hashOfConfig":"536"},{"size":1569,"mtime":1627325430000,"results":"841","hashOfConfig":"536"},{"size":711,"mtime":1627325430000,"results":"842","hashOfConfig":"536"},{"size":1428,"mtime":1627328538000,"results":"843","hashOfConfig":"536"},{"size":1103,"mtime":1627328538000,"results":"844","hashOfConfig":"536"},{"size":910,"mtime":1628613948000,"results":"845","hashOfConfig":"536"},{"size":2137,"mtime":1627328538000,"results":"846","hashOfConfig":"536"},{"size":5935,"mtime":1628027398000,"results":"847","hashOfConfig":"536"},{"size":508,"mtime":1627328480000,"results":"848","hashOfConfig":"536"},{"size":2288,"mtime":1627328480000,"results":"849","hashOfConfig":"536"},{"size":196,"mtime":1627328480000,"results":"850","hashOfConfig":"536"},{"size":139,"mtime":1627328480000,"results":"851","hashOfConfig":"536"},{"size":2105,"mtime":1628614512000,"results":"852","hashOfConfig":"536"},{"size":4896,"mtime":1627328538000,"results":"853","hashOfConfig":"536"},{"size":9195,"mtime":1628027322000,"results":"854","hashOfConfig":"536"},{"size":6522,"mtime":1628614212000,"results":"855","hashOfConfig":"536"},{"size":520,"mtime":1627328480000,"results":"856","hashOfConfig":"536"},{"size":1540,"mtime":1627328480000,"results":"857","hashOfConfig":"536"},{"size":3011,"mtime":1627328538000,"results":"858","hashOfConfig":"536"},{"size":1449,"mtime":1627328538000,"results":"859","hashOfConfig":"536"},{"size":387,"mtime":1627328480000,"results":"860","hashOfConfig":"536"},{"size":829,"mtime":1627328480000,"results":"861","hashOfConfig":"536"},{"size":2452,"mtime":1627253564000,"results":"862","hashOfConfig":"536"},{"size":1860,"mtime":1627328480000,"results":"863","hashOfConfig":"536"},{"size":2403,"mtime":1627328480000,"results":"864","hashOfConfig":"536"},{"size":3798,"mtime":1627328480000,"results":"865","hashOfConfig":"536"},{"size":276,"mtime":1627328480000,"results":"866","hashOfConfig":"536"},{"size":2074,"mtime":1627328480000,"results":"867","hashOfConfig":"536"},{"size":1583,"mtime":1627328480000,"results":"868","hashOfConfig":"536"},{"size":732,"mtime":1627328480000,"results":"869","hashOfConfig":"536"},{"size":486,"mtime":1627328480000,"results":"870","hashOfConfig":"536"},{"size":193,"mtime":1627328480000,"results":"871","hashOfConfig":"536"},{"size":833,"mtime":1627328480000,"results":"872","hashOfConfig":"536"},{"size":572,"mtime":1627328480000,"results":"873","hashOfConfig":"536"},{"size":1252,"mtime":1627328480000,"results":"874","hashOfConfig":"536"},{"size":2575,"mtime":1627328480000,"results":"875","hashOfConfig":"536"},{"size":937,"mtime":1627334114000,"results":"876","hashOfConfig":"536"},{"size":2158,"mtime":1627488732000,"results":"877","hashOfConfig":"536"},{"size":1119,"mtime":1627334068000,"results":"878","hashOfConfig":"536"},{"size":1449,"mtime":1627334070000,"results":"879","hashOfConfig":"536"},{"size":755,"mtime":1627334098000,"results":"880","hashOfConfig":"536"},{"size":2257,"mtime":1627334082000,"results":"881","hashOfConfig":"536"},{"size":1207,"mtime":1627334082000,"results":"882","hashOfConfig":"536"},{"size":1572,"mtime":1627334082000,"results":"883","hashOfConfig":"536"},{"size":4918,"mtime":1627334070000,"results":"884","hashOfConfig":"536"},{"size":8558,"mtime":1627334068000,"results":"885","hashOfConfig":"536"},{"size":970,"mtime":1627334070000,"results":"886","hashOfConfig":"536"},{"size":11052,"mtime":1628756611834,"results":"887","hashOfConfig":"536"},{"size":3026,"mtime":1627334070000,"results":"888","hashOfConfig":"536"},{"size":8399,"mtime":1627334082000,"results":"889","hashOfConfig":"536"},{"size":5048,"mtime":1627334082000,"results":"890","hashOfConfig":"536"},{"size":3107,"mtime":1627334082000,"results":"891","hashOfConfig":"536"},{"size":7441,"mtime":1627334082000,"results":"892","hashOfConfig":"536"},{"size":1015,"mtime":1627334082000,"results":"893","hashOfConfig":"536"},{"size":1638,"mtime":1627334082000,"results":"894","hashOfConfig":"536"},{"size":566,"mtime":1627334182000,"results":"895","hashOfConfig":"536"},{"size":499,"mtime":1627334182000,"results":"896","hashOfConfig":"536"},{"size":838,"mtime":1627334182000,"results":"897","hashOfConfig":"536"},{"size":577,"mtime":1627334182000,"results":"898","hashOfConfig":"536"},{"size":198,"mtime":1627334182000,"results":"899","hashOfConfig":"536"},{"size":1257,"mtime":1627334182000,"results":"900","hashOfConfig":"536"},{"size":2580,"mtime":1627334182000,"results":"901","hashOfConfig":"536"},{"size":209,"mtime":1627334182000,"results":"902","hashOfConfig":"536"},{"size":588,"mtime":1627334182000,"results":"903","hashOfConfig":"536"},{"size":849,"mtime":1627334182000,"results":"904","hashOfConfig":"536"},{"size":1268,"mtime":1627334182000,"results":"905","hashOfConfig":"536"},{"size":2591,"mtime":1627334182000,"results":"906","hashOfConfig":"536"},{"size":4030,"mtime":1627334182000,"results":"907","hashOfConfig":"536"},{"size":2472,"mtime":1627334182000,"results":"908","hashOfConfig":"536"},{"size":2234,"mtime":1627334182000,"results":"909","hashOfConfig":"536"},{"size":917,"mtime":1627334182000,"results":"910","hashOfConfig":"536"},{"size":616,"mtime":1627334182000,"results":"911","hashOfConfig":"536"},{"size":3830,"mtime":1627334182000,"results":"912","hashOfConfig":"536"},{"size":535,"mtime":1627334182000,"results":"913","hashOfConfig":"536"},{"size":2314,"mtime":1627334182000,"results":"914","hashOfConfig":"536"},{"size":843,"mtime":1627334182000,"results":"915","hashOfConfig":"536"},{"size":2097,"mtime":1627334182000,"results":"916","hashOfConfig":"536"},{"size":2153,"mtime":1627334182000,"results":"917","hashOfConfig":"536"},{"size":578,"mtime":1627334182000,"results":"918","hashOfConfig":"536"},{"size":1166,"mtime":1627334182000,"results":"919","hashOfConfig":"536"},{"size":961,"mtime":1627334182000,"results":"920","hashOfConfig":"536"},{"size":2100,"mtime":1627334182000,"results":"921","hashOfConfig":"536"},{"size":202,"mtime":1627334182000,"results":"922","hashOfConfig":"536"},{"size":220,"mtime":1627334182000,"results":"923","hashOfConfig":"536"},{"size":2409,"mtime":1627334182000,"results":"924","hashOfConfig":"536"},{"size":698,"mtime":1627334182000,"results":"925","hashOfConfig":"536"},{"size":2427,"mtime":1627334182000,"results":"926","hashOfConfig":"536"},{"size":382,"mtime":1627334182000,"results":"927","hashOfConfig":"536"},{"size":514,"mtime":1627334182000,"results":"928","hashOfConfig":"536"},{"size":393,"mtime":1627334182000,"results":"929","hashOfConfig":"536"},{"size":411,"mtime":1627334182000,"results":"930","hashOfConfig":"536"},{"size":532,"mtime":1627334182000,"results":"931","hashOfConfig":"536"},{"size":300,"mtime":1627334182000,"results":"932","hashOfConfig":"536"},{"size":282,"mtime":1627334182000,"results":"933","hashOfConfig":"536"},{"size":1878,"mtime":1627334182000,"results":"934","hashOfConfig":"536"},{"size":1600,"mtime":1627334182000,"results":"935","hashOfConfig":"536"},{"size":1980,"mtime":1627334182000,"results":"936","hashOfConfig":"536"},{"size":1695,"mtime":1627334182000,"results":"937","hashOfConfig":"536"},{"size":4535,"mtime":1628748928000,"results":"938","hashOfConfig":"536"},{"size":2532,"mtime":1628111922000,"results":"939","hashOfConfig":"536"},{"size":997,"mtime":1627473811698,"results":"940","hashOfConfig":"536"},{"size":4255,"mtime":1627418232000,"results":"941","hashOfConfig":"536"},{"size":997,"mtime":1627418208000,"results":"942","hashOfConfig":"536"},{"size":2249,"mtime":1627421526000,"results":"943","hashOfConfig":"536"},{"size":4726,"mtime":1627422092000,"results":"944","hashOfConfig":"536"},{"size":226,"mtime":1627421890000,"results":"945","hashOfConfig":"536"},{"size":2314,"mtime":1627939708000,"results":"946","hashOfConfig":"536"},{"size":8176,"mtime":1627938070000,"results":"947","hashOfConfig":"536"},{"size":1830,"mtime":1628122392000,"results":"948","hashOfConfig":"536"},{"size":1815,"mtime":1628122902000,"results":"949","hashOfConfig":"536"},{"size":1798,"mtime":1628122882000,"results":"950","hashOfConfig":"536"},{"size":1098,"mtime":1627944768000,"results":"951","hashOfConfig":"536"},{"size":1027,"mtime":1627944702000,"results":"952","hashOfConfig":"536"},{"size":998,"mtime":1628190408000,"results":"953","hashOfConfig":"536"},{"size":2212,"mtime":1628183996000,"results":"954","hashOfConfig":"536"},{"size":1168,"mtime":1628183996000,"results":"955","hashOfConfig":"536"},{"size":1518,"mtime":1628183996000,"results":"956","hashOfConfig":"536"},{"size":4991,"mtime":1628183996000,"results":"957","hashOfConfig":"536"},{"size":9541,"mtime":1628189892000,"results":"958","hashOfConfig":"536"},{"size":4883,"mtime":1628246708756,"results":"959","hashOfConfig":"536"},{"size":5186,"mtime":1628192352000,"results":"960","hashOfConfig":"536"},{"size":991,"mtime":1628183996000,"results":"961","hashOfConfig":"536"},{"size":3071,"mtime":1628183996000,"results":"962","hashOfConfig":"536"},{"size":523,"mtime":1628183996000,"results":"963","hashOfConfig":"536"},{"size":211,"mtime":1628183996000,"results":"964","hashOfConfig":"536"},{"size":998,"mtime":1628183996000,"results":"965","hashOfConfig":"536"},{"size":580,"mtime":1628183996000,"results":"966","hashOfConfig":"536"},{"size":2403,"mtime":1628183996000,"results":"967","hashOfConfig":"536"},{"size":402,"mtime":1628183996000,"results":"968","hashOfConfig":"536"},{"size":884,"mtime":1628183996000,"results":"969","hashOfConfig":"536"},{"size":119,"mtime":1628183996000,"results":"970","hashOfConfig":"536"},{"size":2418,"mtime":1628183996000,"results":"971","hashOfConfig":"536"},{"size":291,"mtime":1628183996000,"results":"972","hashOfConfig":"536"},{"size":2174,"mtime":1628183996000,"results":"973","hashOfConfig":"536"},{"size":1935,"mtime":1628183996000,"results":"974","hashOfConfig":"536"},{"size":3943,"mtime":1628183996000,"results":"975","hashOfConfig":"536"},{"size":1653,"mtime":1628183996000,"results":"976","hashOfConfig":"536"},{"size":536,"mtime":1628183996000,"results":"977","hashOfConfig":"536"},{"size":582,"mtime":1628183996000,"results":"978","hashOfConfig":"536"},{"size":2585,"mtime":1628183996000,"results":"979","hashOfConfig":"536"},{"size":843,"mtime":1628183996000,"results":"980","hashOfConfig":"536"},{"size":203,"mtime":1628183996000,"results":"981","hashOfConfig":"536"},{"size":1262,"mtime":1628183996000,"results":"982","hashOfConfig":"536"},{"size":2117,"mtime":1628191402000,"results":"983","hashOfConfig":"536"},{"size":2129,"mtime":1628183996000,"results":"984","hashOfConfig":"536"},{"size":719,"mtime":1628183996000,"results":"985","hashOfConfig":"536"},{"size":6741,"mtime":1628678581000,"results":"986","hashOfConfig":"536"},{"size":7985,"mtime":1628685911000,"results":"987","hashOfConfig":"536"},{"size":7066,"mtime":1628680132000,"results":"988","hashOfConfig":"536"},{"size":236,"mtime":1628197542000,"results":"989","hashOfConfig":"536"},{"size":1518,"mtime":1628564994000,"results":"990","hashOfConfig":"536"},{"size":1168,"mtime":1628564964000,"results":"991","hashOfConfig":"536"},{"size":2212,"mtime":1628564734000,"results":"992","hashOfConfig":"536"},{"size":3142,"mtime":1628748879000,"results":"993","hashOfConfig":"536"},{"size":546,"mtime":1628605123000,"results":"994","hashOfConfig":"536"},{"size":2587,"mtime":1628605123000,"results":"995","hashOfConfig":"536"},{"size":205,"mtime":1628605123000,"results":"996","hashOfConfig":"536"},{"size":1264,"mtime":1628605123000,"results":"997","hashOfConfig":"536"},{"size":584,"mtime":1628605123000,"results":"998","hashOfConfig":"536"},{"size":845,"mtime":1628605123000,"results":"999","hashOfConfig":"536"},{"size":895,"mtime":1628605123000,"results":"1000","hashOfConfig":"536"},{"size":2426,"mtime":1628605123000,"results":"1001","hashOfConfig":"536"},{"size":2194,"mtime":1628605123000,"results":"1002","hashOfConfig":"536"},{"size":592,"mtime":1628605123000,"results":"1003","hashOfConfig":"536"},{"size":3972,"mtime":1628605123000,"results":"1004","hashOfConfig":"536"},{"size":2137,"mtime":1628605123000,"results":"1005","hashOfConfig":"536"},{"size":4129,"mtime":1628605677000,"results":"1006","hashOfConfig":"536"},{"size":2421,"mtime":1628605123000,"results":"1007","hashOfConfig":"536"},{"size":2316,"mtime":1628605680000,"results":"1008","hashOfConfig":"536"},{"size":214,"mtime":1628605123000,"results":"1009","hashOfConfig":"536"},{"size":311,"mtime":1628605357000,"results":"1010","hashOfConfig":"536"},{"size":1181,"mtime":1628605124000,"results":"1011","hashOfConfig":"536"},{"size":1530,"mtime":1628616121000,"results":"1012","hashOfConfig":"536"},{"size":1008,"mtime":1628616664000,"results":"1013","hashOfConfig":"536"},{"size":2181,"mtime":1628616618000,"results":"1014","hashOfConfig":"536"},{"size":4715,"mtime":1628605674000,"results":"1015","hashOfConfig":"536"},{"size":5010,"mtime":1628605124000,"results":"1016","hashOfConfig":"536"},{"size":13138,"mtime":1628606053000,"results":"1017","hashOfConfig":"536"},{"size":10746,"mtime":1628619177000,"results":"1018","hashOfConfig":"536"},{"size":526,"mtime":1628605123000,"results":"1019","hashOfConfig":"536"},{"size":405,"mtime":1628605123000,"results":"1020","hashOfConfig":"536"},{"size":3099,"mtime":1628605124000,"results":"1021","hashOfConfig":"536"},{"size":5789,"mtime":1628605782000,"results":"1022","hashOfConfig":"536"},{"size":1950,"mtime":1628605123000,"results":"1023","hashOfConfig":"536"},{"size":294,"mtime":1628605123000,"results":"1024","hashOfConfig":"536"},{"size":1730,"mtime":1628605123000,"results":"1025","hashOfConfig":"536"},{"size":5140,"mtime":1628686764169,"results":"1026","hashOfConfig":"536"},{"size":6708,"mtime":1628695573000,"results":"1027","hashOfConfig":"536"},{"size":4684,"mtime":1628771481000,"results":"1028","hashOfConfig":"536"},{"size":134,"mtime":1628594490000,"results":"1029","hashOfConfig":"536"},{"size":3777,"mtime":1628776239593,"results":"1030","hashOfConfig":"536"},{"size":1740,"mtime":1627253564000,"results":"1031","hashOfConfig":"536"},{"size":6540,"mtime":1628695751000,"results":"1032","hashOfConfig":"536"},{"size":6722,"mtime":1628695944000,"results":"1033","hashOfConfig":"536"},{"size":3216,"mtime":1628761456058,"results":"1034","hashOfConfig":"536"},{"size":1516,"mtime":1628776907773,"results":"1035","hashOfConfig":"536"},{"size":2093,"mtime":1628762331896,"results":"1036","hashOfConfig":"536"},{"size":1961,"mtime":1628768294833,"results":"1037","hashOfConfig":"536"},{"size":1489,"mtime":1628768247281,"results":"1038","hashOfConfig":"536"},{"size":881,"mtime":1628768678527,"results":"1039","hashOfConfig":"536"},{"size":277,"mtime":1628770243000,"results":"1040","hashOfConfig":"536"},{"size":724,"mtime":1628780314868,"results":"1041","hashOfConfig":"536"},{"size":5069,"mtime":1628779982595,"results":"1042","hashOfConfig":"536"},{"size":9716,"mtime":1628769026618,"results":"1043","hashOfConfig":"536"},{"size":1866,"mtime":1628770243000,"results":"1044","hashOfConfig":"536"},{"size":2409,"mtime":1628770243000,"results":"1045","hashOfConfig":"536"},{"size":3804,"mtime":1628770243000,"results":"1046","hashOfConfig":"536"},{"size":2080,"mtime":1628770243000,"results":"1047","hashOfConfig":"536"},{"size":282,"mtime":1628770243000,"results":"1048","hashOfConfig":"536"},{"size":1652,"mtime":1628770243000,"results":"1049","hashOfConfig":"536"},{"size":2095,"mtime":1628770243000,"results":"1050","hashOfConfig":"536"},{"size":695,"mtime":1628770243000,"results":"1051","hashOfConfig":"536"},{"size":2143,"mtime":1628769026534,"results":"1052","hashOfConfig":"536"},{"size":1434,"mtime":1628769026630,"results":"1053","hashOfConfig":"536"},{"size":4414,"mtime":1628769026530,"results":"1054","hashOfConfig":"536"},{"size":3017,"mtime":1628769026630,"results":"1055","hashOfConfig":"536"},{"size":514,"mtime":1628770243000,"results":"1056","hashOfConfig":"536"},{"size":2294,"mtime":1628770243000,"results":"1057","hashOfConfig":"536"},{"size":835,"mtime":1628770243000,"results":"1058","hashOfConfig":"536"},{"size":393,"mtime":1628770243000,"results":"1059","hashOfConfig":"536"},{"size":967,"mtime":1628769026626,"results":"1060","hashOfConfig":"536"},{"size":492,"mtime":1628770243000,"results":"1061","hashOfConfig":"536"},{"size":1258,"mtime":1628770243000,"results":"1062","hashOfConfig":"536"},{"size":578,"mtime":1628770243000,"results":"1063","hashOfConfig":"536"},{"size":2581,"mtime":1628770243000,"results":"1064","hashOfConfig":"536"},{"size":839,"mtime":1628770243000,"results":"1065","hashOfConfig":"536"},{"size":199,"mtime":1628770243000,"results":"1066","hashOfConfig":"536"},{"size":526,"mtime":1628770243000,"results":"1067","hashOfConfig":"536"},{"size":202,"mtime":1628770243000,"results":"1068","hashOfConfig":"536"},{"size":954,"mtime":1628770243000,"results":"1069","hashOfConfig":"536"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},"8ea4p0",{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081","usedDeprecatedRules":"1072"},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1108","messages":"1109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1110","messages":"1111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1112","messages":"1113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1114","messages":"1115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1116","messages":"1117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1120","messages":"1121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1122","messages":"1123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1132","messages":"1133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1134","messages":"1135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1136","messages":"1137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1140","messages":"1141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1142","messages":"1143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1146","messages":"1147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1148","messages":"1149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"1072"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153","usedDeprecatedRules":"1072"},{"filePath":"1154","messages":"1155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1156","messages":"1157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1160","messages":"1161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1162","messages":"1163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1164","messages":"1165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1166","messages":"1167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"1072"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1199","usedDeprecatedRules":"1072"},{"filePath":"1200","messages":"1201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"1072"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"1072"},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238","usedDeprecatedRules":"1072"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1243","messages":"1244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1247","messages":"1248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"1072"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1258","usedDeprecatedRules":"1072"},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1279","messages":"1280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1323","usedDeprecatedRules":"1072"},{"filePath":"1324","messages":"1325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1326","messages":"1327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1328","messages":"1329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1330","messages":"1331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1332","messages":"1333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1342","messages":"1343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1344","messages":"1345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1380","messages":"1381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1382","messages":"1383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1386","messages":"1387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1388","messages":"1389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1392","messages":"1393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1398","messages":"1399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1400","messages":"1401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1404","messages":"1405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1406","messages":"1407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"1072"},{"filePath":"1413","messages":"1414","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415","usedDeprecatedRules":"1072"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"1421"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1428","messages":"1429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1430","usedDeprecatedRules":"1072"},{"filePath":"1431","messages":"1432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1433","messages":"1434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1437","messages":"1438","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439","usedDeprecatedRules":"1072"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448","usedDeprecatedRules":"1072"},{"filePath":"1449","messages":"1450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1451","messages":"1452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1455","messages":"1456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1457","messages":"1458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1461","messages":"1462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1463","messages":"1464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1467","messages":"1468","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1469","usedDeprecatedRules":"1072"},{"filePath":"1470","messages":"1471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1472","messages":"1473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1476","messages":"1477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1478","messages":"1479","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1480","usedDeprecatedRules":"1072"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1483","messages":"1484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1485","messages":"1486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1489","usedDeprecatedRules":"1072"},{"filePath":"1490","messages":"1491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1492","messages":"1493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1494","messages":"1495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1496","messages":"1497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1500","messages":"1501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1502","messages":"1503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1506","messages":"1507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1508","messages":"1509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1512","messages":"1513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1514","messages":"1515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1516","messages":"1517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1518","messages":"1519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1520","messages":"1521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1522","messages":"1523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1524","messages":"1525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1526","messages":"1527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1528","messages":"1529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1530","messages":"1531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1532","messages":"1533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1534","messages":"1535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1536","messages":"1537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1538","messages":"1539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1540","messages":"1541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1542","messages":"1543","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1544","usedDeprecatedRules":"1072"},{"filePath":"1545","messages":"1546","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1547","usedDeprecatedRules":"1072"},{"filePath":"1548","messages":"1549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1550","messages":"1551","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1552","usedDeprecatedRules":"1072"},{"filePath":"1553","messages":"1554","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1555","usedDeprecatedRules":"1072"},{"filePath":"1556","messages":"1557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1558","usedDeprecatedRules":"1072"},{"filePath":"1559","messages":"1560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1561","messages":"1562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1563","messages":"1564","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1565","usedDeprecatedRules":"1072"},{"filePath":"1566","messages":"1567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1568","messages":"1569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1570","messages":"1571","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1572","usedDeprecatedRules":"1072"},{"filePath":"1573","messages":"1574","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1575","usedDeprecatedRules":"1072"},{"filePath":"1576","messages":"1577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1578","usedDeprecatedRules":"1072"},{"filePath":"1579","messages":"1580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1581","messages":"1582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1583","messages":"1584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1585","messages":"1586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1587","messages":"1588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1589","messages":"1590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1591","messages":"1592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1593","messages":"1594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1595","usedDeprecatedRules":"1072"},{"filePath":"1596","messages":"1597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1598","messages":"1599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1600","messages":"1601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1602","messages":"1603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1604","messages":"1605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1606","messages":"1607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1608","messages":"1609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1610","messages":"1611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1612","messages":"1613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1614","messages":"1615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1616","messages":"1617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1618","messages":"1619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1620","messages":"1621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1622","usedDeprecatedRules":"1072"},{"filePath":"1623","messages":"1624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1625","messages":"1626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1627","messages":"1628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1629","messages":"1630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1631","messages":"1632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1633","messages":"1634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1635","messages":"1636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1637","messages":"1638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1639","messages":"1640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1641","messages":"1642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1643","messages":"1644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1645","messages":"1646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1647","messages":"1648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1649","messages":"1650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1651","messages":"1652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1653","messages":"1654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1655","messages":"1656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1657","messages":"1658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1659","messages":"1660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1661","messages":"1662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1663","messages":"1664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1665","messages":"1666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1667","messages":"1668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1669","messages":"1670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671","usedDeprecatedRules":"1072"},{"filePath":"1672","messages":"1673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1674","usedDeprecatedRules":"1072"},{"filePath":"1675","messages":"1676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1677","messages":"1678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1679","messages":"1680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1681","messages":"1682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1683","messages":"1684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1685","messages":"1686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1687","messages":"1688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1689","messages":"1690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1691","messages":"1692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1693","messages":"1694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1695","messages":"1696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1697","messages":"1698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1699","messages":"1700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1701","messages":"1702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1703","messages":"1704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1705","messages":"1706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1707","messages":"1708","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1709","usedDeprecatedRules":"1072"},{"filePath":"1710","messages":"1711","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1712","usedDeprecatedRules":"1072"},{"filePath":"1713","messages":"1714","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1715","usedDeprecatedRules":"1072"},{"filePath":"1716","messages":"1717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1718","messages":"1719","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1720","usedDeprecatedRules":"1072"},{"filePath":"1721","messages":"1722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1723","messages":"1724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1725","messages":"1726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1727","messages":"1728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1729","messages":"1730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1731","messages":"1732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1733","messages":"1734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1735","messages":"1736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1737","messages":"1738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1739","messages":"1740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1741","messages":"1742","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1743","usedDeprecatedRules":"1072"},{"filePath":"1744","messages":"1745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1746","messages":"1747","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1748","usedDeprecatedRules":"1072"},{"filePath":"1749","messages":"1750","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1751","usedDeprecatedRules":"1072"},{"filePath":"1752","messages":"1753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1754","messages":"1755","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1756","usedDeprecatedRules":"1072"},{"filePath":"1757","messages":"1758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1759","messages":"1760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1761","messages":"1762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1763","messages":"1764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1765","messages":"1766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1767","messages":"1768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1769","messages":"1770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1771","messages":"1772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1773","messages":"1774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1775","messages":"1776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1777","messages":"1778","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1779","usedDeprecatedRules":"1072"},{"filePath":"1780","messages":"1781","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1782","usedDeprecatedRules":"1072"},{"filePath":"1783","messages":"1784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1785","messages":"1786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1787","messages":"1788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1789","messages":"1790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1791","messages":"1792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1793","messages":"1794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1795","messages":"1796","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1797","usedDeprecatedRules":"1072"},{"filePath":"1798","messages":"1799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1800","messages":"1801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1802","messages":"1803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1804","messages":"1805","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1806","usedDeprecatedRules":"1072"},{"filePath":"1807","messages":"1808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1809","messages":"1810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1811","messages":"1812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1813","messages":"1814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1815","messages":"1816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1817","messages":"1818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1819","messages":"1820","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1821","usedDeprecatedRules":"1072"},{"filePath":"1822","messages":"1823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1824","messages":"1825","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1826","usedDeprecatedRules":"1072"},{"filePath":"1827","messages":"1828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1829","messages":"1830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1831","messages":"1832","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1833","usedDeprecatedRules":"1072"},{"filePath":"1834","messages":"1835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1836","messages":"1837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1838","messages":"1839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1840","messages":"1841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1842","messages":"1843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1844","messages":"1845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1846","messages":"1847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1848","messages":"1849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1850","messages":"1851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1852","messages":"1853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1854","messages":"1855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1856","messages":"1857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1858","messages":"1859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1860","messages":"1861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1862","messages":"1863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1864","messages":"1865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1866","messages":"1867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1868","messages":"1869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1870","messages":"1871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1872","messages":"1873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1874","messages":"1875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1876","messages":"1877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1878","messages":"1879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1880","messages":"1881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1882","messages":"1883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1884","messages":"1885","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1886","usedDeprecatedRules":"1072"},{"filePath":"1887","messages":"1888","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1889","usedDeprecatedRules":"1072"},{"filePath":"1890","messages":"1891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1892","messages":"1893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1894","messages":"1895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1896","messages":"1897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1898","messages":"1899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1900","messages":"1901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1902","messages":"1903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1904","messages":"1905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1906","messages":"1907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1908","messages":"1909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1910","messages":"1911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1912","messages":"1913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1914","messages":"1915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1916","messages":"1917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1918","messages":"1919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1920","messages":"1921","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1922","usedDeprecatedRules":"1072"},{"filePath":"1923","messages":"1924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1925","messages":"1926","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1927","usedDeprecatedRules":"1072"},{"filePath":"1928","messages":"1929","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1930","usedDeprecatedRules":"1072"},{"filePath":"1931","messages":"1932","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1933","usedDeprecatedRules":"1072"},{"filePath":"1934","messages":"1935","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1936","messages":"1937","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1938","usedDeprecatedRules":"1072"},{"filePath":"1939","messages":"1940","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1941","usedDeprecatedRules":"1072"},{"filePath":"1942","messages":"1943","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1944","usedDeprecatedRules":"1072"},{"filePath":"1945","messages":"1946","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1947","usedDeprecatedRules":"1072"},{"filePath":"1948","messages":"1949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1950","messages":"1951","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1952","usedDeprecatedRules":"1072"},{"filePath":"1953","messages":"1954","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1955","usedDeprecatedRules":"1072"},{"filePath":"1956","messages":"1957","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1958","usedDeprecatedRules":"1959"},{"filePath":"1960","messages":"1961","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1962","usedDeprecatedRules":"1959"},{"filePath":"1963","messages":"1964","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1965","usedDeprecatedRules":"1959"},{"filePath":"1966","messages":"1967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1959"},{"filePath":"1968","messages":"1969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1959"},{"filePath":"1970","messages":"1971","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1972","usedDeprecatedRules":"1072"},{"filePath":"1973","messages":"1974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1975","messages":"1976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1977","messages":"1978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1979","messages":"1980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1981","messages":"1982","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1983","usedDeprecatedRules":"1072"},{"filePath":"1984","messages":"1985","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1986","usedDeprecatedRules":"1987"},{"filePath":"1988","messages":"1989","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1990","usedDeprecatedRules":"1072"},{"filePath":"1991","messages":"1992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1993","messages":"1994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1995","messages":"1996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1997","messages":"1998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"1999","messages":"2000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2001","messages":"2002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2003","messages":"2004","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2005","messages":"2006","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2007","messages":"2008","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2009","messages":"2010","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2011","messages":"2012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2013","messages":"2014","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2015","messages":"2016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2017","messages":"2018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2019","messages":"2020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2021","messages":"2022","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2023","usedDeprecatedRules":"1072"},{"filePath":"2024","messages":"2025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2026","messages":"2027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2028","messages":"2029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2030","messages":"2031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2032","messages":"2033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2034","messages":"2035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2036","messages":"2037","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2038","usedDeprecatedRules":"1959"},{"filePath":"2039","messages":"2040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2041","messages":"2042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2043","messages":"2044","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2045","usedDeprecatedRules":"1072"},{"filePath":"2046","messages":"2047","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2048","usedDeprecatedRules":"1072"},{"filePath":"2049","messages":"2050","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2051","usedDeprecatedRules":"1072"},{"filePath":"2052","messages":"2053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2054","messages":"2055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2056","messages":"2057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2058","messages":"2059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2060","messages":"2061","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2062","usedDeprecatedRules":"1072"},{"filePath":"2063","messages":"2064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2065","messages":"2066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2067","messages":"2068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2069","messages":"2070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2071","messages":"2072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2073","messages":"2074","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2075","messages":"2076","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2077","messages":"2078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2079","messages":"2080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2081","messages":"2082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2083","messages":"2084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2085","messages":"2086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2087","messages":"2088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2089","messages":"2090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2091","messages":"2092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2093","messages":"2094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2095","messages":"2096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2097","messages":"2098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2099","messages":"2100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2101","usedDeprecatedRules":"1072"},{"filePath":"2102","messages":"2103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2104","messages":"2105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2106","messages":"2107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2108","messages":"2109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2110","messages":"2111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2112","usedDeprecatedRules":"1072"},{"filePath":"2113","messages":"2114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2115","usedDeprecatedRules":"1072"},{"filePath":"2116","messages":"2117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2118","messages":"2119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2120","messages":"2121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2122","usedDeprecatedRules":"1072"},{"filePath":"2123","messages":"2124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2125","messages":"2126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2127","messages":"2128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2129","messages":"2130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2131","usedDeprecatedRules":"1072"},{"filePath":"2132","messages":"2133","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2134","messages":"2135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2136","usedDeprecatedRules":"1072"},{"filePath":"2137","messages":"2138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2139","usedDeprecatedRules":"1072"},{"filePath":"2140","messages":"2141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2142","messages":"2143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2144","usedDeprecatedRules":"1072"},{"filePath":"2145","messages":"2146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2147","messages":"2148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2149","usedDeprecatedRules":"1072"},{"filePath":"2150","messages":"2151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2152","usedDeprecatedRules":"1072"},{"filePath":"2153","messages":"2154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2155","messages":"2156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2157","usedDeprecatedRules":"1072"},{"filePath":"2158","messages":"2159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2160","messages":"2161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2162","usedDeprecatedRules":"1072"},{"filePath":"2163","messages":"2164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2165","usedDeprecatedRules":"1072"},{"filePath":"2166","messages":"2167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2168","messages":"2169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2170","messages":"2171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2172","messages":"2173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2174","messages":"2175","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2176","usedDeprecatedRules":"1072"},{"filePath":"2177","messages":"2178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2179","messages":"2180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2181","messages":"2182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2183","messages":"2184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2185","messages":"2186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2187","messages":"2188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2189","usedDeprecatedRules":"1072"},{"filePath":"2190","messages":"2191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2192","messages":"2193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2194","messages":"2195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2196","messages":"2197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2198","messages":"2199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2200","messages":"2201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2202","messages":"2203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2204","messages":"2205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2206","messages":"2207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1072"},{"filePath":"2208","messages":"2209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2210","messages":"2211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2212","messages":"2213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2214","messages":"2215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2216","messages":"2217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2218","messages":"2219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2220","messages":"2221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2222","messages":"2223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2224","messages":"2225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2226","messages":"2227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2228","messages":"2229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/Office/react project/KokoFrontEnd/src/index.tsx",[],["2230","2231"],"/var/www/html/Office/react project/KokoFrontEnd/src/App.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authToken.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authService.tsx",["2232"],"import authAxios from 'src/modules/shared/axios/authAxios';\nimport { AuthToken } from 'src/modules/auth/authToken';\nimport AuthCurrentTenant from 'src/modules/auth/authCurrentTenant';\nimport AuthInvitationToken from 'src/modules/auth/authInvitationToken';\nimport { tenantSubdomain } from '../tenant/tenantSubdomain';\n\nexport default class AuthService {\n  static async sendEmailVerification() {\n    const response = await authAxios.post(\n      '/auth/send-email-address-verification-email',\n      {\n        tenantId: tenantSubdomain.isSubdomain\n          ? AuthCurrentTenant.get()\n          : undefined,\n      }\n    );\n\n    return response.data;\n  }\n\n  static async sendPasswordResetEmail(email) {\n    const response = await authAxios.post(\n      '/auth/send-password-reset-email',\n      {\n        email,\n        tenantId: tenantSubdomain.isSubdomain\n          ? AuthCurrentTenant.get()\n          : undefined,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async registerWithEmailAndPassword(\n    firstname,\n    lastname,\n    email,\n    password,\n  ) {\n    const invitationToken = AuthInvitationToken.get();\n\n    const response = await authAxios.post('/auth/sign-up', {\n      firstname,\n      lastname,\n      email,\n      password,\n      invitationToken,\n      tenantId: tenantSubdomain.isSubdomain\n        ? AuthCurrentTenant.get()\n        : undefined,\n    });\n\n    AuthInvitationToken.clear();\n\n    return response.data;\n  }\n\n  static async signinWithEmailAndPassword(email, password) {\n    const invitationToken = AuthInvitationToken.get();\n\n    const response = await authAxios.post('/auth/sign-in', {\n      email,\n      password,\n      // invitationToken,\n      tenantId: tenantSubdomain.isSubdomain\n        ? AuthCurrentTenant.get()\n        : undefined,\n    });\n\n    AuthInvitationToken.clear();\n\n    return response.data;\n  }\n\n  static async fetchMe() {\n    const response = await authAxios.get('/auth/me');\n    return response.data;\n  }\n\n  static signout() {\n    AuthToken.set(null, true);\n  }\n\n  static async updateProfile(data) {\n    const body = {\n      data,\n    };\n\n    const response = await authAxios.put(\n      '/auth/profile',\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async changePassword(oldPassword, newPassword) {\n    const body = {\n      oldPassword,\n      newPassword,\n    };\n\n    const response = await authAxios.put(\n      '/auth/change-password',\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async passwordReset(token, password) {\n    const response = await authAxios.put(\n      '/auth/password-reset',\n      {\n        token,\n        password,\n        tenantId: tenantSubdomain.isSubdomain\n          ? AuthCurrentTenant.get()\n          : undefined,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async verifyEmail(token) {\n    const response = await authAxios.put(\n      '/auth/verify-email',\n      {\n        token,\n        tenantId: tenantSubdomain.isSubdomain\n          ? AuthCurrentTenant.get()\n          : undefined,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async socialOnboard() {\n    const invitationToken = AuthInvitationToken.get();\n\n    const response = await authAxios.post(\n      '/auth/social/onboard',\n      {\n        invitationToken,\n        tenantId: tenantSubdomain.isSubdomain\n          ? AuthCurrentTenant.get()\n          : undefined,\n      },\n    );\n\n    AuthInvitationToken.clear();\n\n    return response.data;\n  }\n\n  static isSocialOnboardRequested() {\n    const urlParams = new URLSearchParams(\n      window.location.search,\n    );\n\n    return Boolean(urlParams.get('social'));\n  }\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/i18n/index.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/store.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsThemeConverter.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authCurrentTenant.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantSubdomain.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authInvitationToken.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/message.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/RoutesComponent.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/axios/authAxios.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/i18n/es.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/i18n/pt-BR.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/i18n/en.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/reducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/initializers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/config/index.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/EmailUnverifiedRoute.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/PrivateRoute.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/PublicRoute.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/CustomLoadable.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/ProgressBar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/routes.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/EmptyTenantRoute.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/routes/EmptyPermissionsRoute.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/layout/layoutSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authInitializer.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/config/localhost.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/LoadingComponent.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/permissionChecker.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/Layout.tsx",["2233","2234","2235"],"import React from 'react';\nimport Header from 'src/view/layout/Header';\nimport Menu from 'src/view/layout/Menu';\nimport { makeStyles } from '@material-ui/core';\nimport { useRouteMatch } from 'react-router-dom';\nimport Alerts from 'src/view/layout/Alerts';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport { useSelector } from 'react-redux';\nimport Welcome from './MainAlert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: 'rgba(0, 0, 0, 0.65)',\n    backgroundColor: '#f0f2f5',\n    display: 'flex',\n    fontFamily: `'Roboto', sans-serif`,\n\n    '& h1, h2, h3, h4, h5, h6': {\n      color: 'rgba(0, 0, 0, 0.85)',\n      fontFamily: 'Poppins,sans-serif!important',\n    },\n    \n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    minHeight: '100vh',\n    overflowX: 'hidden',\n  },\n\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction Layout(props) {\n  const classes = useStyles();\n  const match = useRouteMatch();\n  const userText = useSelector(\n    authSelectors.selectCurrentUserNameOrEmailPrefix,\n  );\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Menu url={match.url} />\n      <div className={classes.content}>\n        <div className={classes.toolbar}></div>\n     \n \n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/Error404Page.tsx",["2236","2237"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ErrorWrapper from 'src/view/shared/errors/styles/ErrorWrapper';\nimport { i18n } from 'src/i18n';\nimport { Button } from '@material-ui/core';\nimport swal from 'sweetalert';\n\nconst Error404Page = () => {\n\n  return (\n    <ErrorWrapper>\n      <div className=\"exception\">\n        <div className=\"content\">\n          <h1>404</h1>\n          <div className=\"desc\">{i18n('errors.404')}</div>\n          <div className=\"actions\">\n            <Button\n              component={Link}\n              to=\"/\"\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"button\"\n            >\n              {i18n('errors.backToHome')}\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n    </ErrorWrapper>\n  );\n};\n\nexport default Error404Page;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/Error500Page.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/Error403Page.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/VerifyEmailPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/PasswordResetPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/InvitationPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/EmailUnverifiedPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/EmptyPermissionsPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/TenantPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/ForgotPasswordPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/SignupPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/SigninPage.tsx",["2238","2239"],"import { useForm, FormProvider } from 'react-hook-form';\nimport actions from 'src/modules/auth/authActions';\nimport selectors from 'src/modules/auth/authSelectors';\nimport { i18n } from 'src/i18n';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport MaterialLink from '@material-ui/core/Link';\nimport Content from 'src/view/auth/styles/Content';\nimport Logo from 'src/view/auth/styles/Logo';\nimport OtherActions from 'src/view/auth/styles/OtherActions';\nimport Wrapper from 'src/view/auth/styles/Wrapper';\nimport I18nFlags from 'src/view/layout/I18nFlags';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport {\n  Checkbox,\n  FormControlLabel,\n  Box,\n  Button,\n  Tooltip,\n  CircularProgress,\n} from '@material-ui/core';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n/* import SocialButtons from 'src/view/auth/styles/SocialButtons';\nimport config from 'src/config'; */\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\nimport Message from 'src/view/shared/message';\n\nconst schema = yup.object().shape({\n  email: yupFormSchemas.string(i18n('user.fields.email'), {\n    required: true,\n  }),\n  password: yupFormSchemas.string(\n    i18n('user.fields.password'),\n    {\n      required: true,\n    },\n  ),\n  rememberMe: yupFormSchemas.boolean(\n    i18n('user.fields.rememberMe'),\n  ),\n});\n\nfunction SigninPage() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const { socialErrorCode } = queryString.parse(\n    location.search,\n  );\n  const backgroundImageUrl = useSelector(\n    selectors.selectBackgroundImageUrl,\n  );\n  const logoUrl = useSelector(selectors.selectLogoUrl);\n\n  const loading = useSelector(selectors.selectLoading);\n\n  const externalErrorMessage = useSelector(\n    selectors.selectErrorMessage,\n  );\n\n  useEffect(() => {\n    dispatch(actions.doClearErrorMessage());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (socialErrorCode) {\n      if (socialErrorCode === 'generic') {\n        Message.error(i18n('errors.defaultErrorMessage'));\n      } else {\n        Message.error(\n          i18n(`auth.social.errors.${socialErrorCode}`),\n        );\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [initialValues] = useState({\n    email: '',\n    password: '',\n    rememberMe: true,\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit',\n    defaultValues: initialValues,\n  });\n\n  const onSubmit = (values) => {\n    dispatch(\n      actions.doSigninWithEmailAndPassword(\n        values.email,\n        values.password,\n        values.rememberMe,\n      ),\n    );\n  };\n\n  return (\n    <Wrapper\n      style={{\n        backgroundImage: `url(${\n          backgroundImageUrl || '/images/signin.jpg'\n        })`,\n      }}\n    >\n      <Content>\n        <Logo>\n          {logoUrl ? (\n            <img\n              src={logoUrl}\n              width=\"240px\"\n              alt={i18n('app.title')}\n            />\n          ) : (\n            <h1>{i18n('app.title')}</h1>\n          )}\n        </Logo>\n\n        <FormProvider {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <InputFormItem\n              name=\"email\"\n              label={i18n('user.fields.email')}\n              autoComplete=\"email\"\n              autoFocus\n              externalErrorMessage={externalErrorMessage}\n            />\n\n            <InputFormItem\n              name=\"password\"\n              label={i18n('user.fields.password')}\n              autoComplete=\"password\"\n              type=\"password\"\n            />\n\n            <Box\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    id={'rememberMe'}\n                    name={'rememberMe'}\n                    defaultChecked={true}\n                    inputRef={form.register}\n                    color=\"primary\"\n                    size=\"small\"\n                  />\n                }\n                label={i18n('user.fields.rememberMe')}\n              />\n\n              <MaterialLink\n                style={{ marginBottom: '8px' }}\n                component={Link}\n                to=\"/auth/forgot-password\"\n              >\n                {i18n('auth.forgotPassword')}\n              </MaterialLink>\n            </Box>\n\n            <Button\n              style={{ marginTop: '8px' }}\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              fullWidth\n              disabled={loading}\n            >\n              {i18n('auth.signin')}\n              {loading && <CircularProgress size={24} />}\n            </Button>\n\n         {/*    <SocialButtons>\n              <Tooltip title=\"Facebook\">\n                <a\n                  href={`${config.backendUrl}/auth/social/facebook`}\n                >\n                  <img\n                    src=\"/images/facebook.png\"\n                    alt=\"Facebook\"\n                  />\n                </a>\n              </Tooltip>\n\n              <Tooltip title=\"Google\">\n                <a\n                  href={`${config.backendUrl}/auth/social/google`}\n                >\n                  <img\n                    src=\"/images/google.png\"\n                    alt=\"Google\"\n                  />\n                </a>\n              </Tooltip>\n            </SocialButtons>\n */}\n            <OtherActions>\n              <MaterialLink\n                component={Link}\n                to=\"/auth/signup\"\n              >\n                {i18n('auth.createAnAccount')}\n              </MaterialLink>\n            </OtherActions>\n\n          </form>\n        </FormProvider>\n      </Content>\n    </Wrapper>\n  );\n}\n\nexport default SigninPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/SettingsFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/edit/UserEditPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/importer/UserImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/security/plans.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/MainAlert.tsx",["2240","2241","2242","2243"],"import * as React from 'react';\nimport { Box, Card, CardActions, Button, Typography, ButtonGroup, Grid } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WalletIcon from '@material-ui/icons/PersonAdd';\nimport { Link } from 'react-router-dom';\nimport publishArticleImage from './styles/welcome_illustration.svg';\nimport CardWithIcon from '../components/CardWithIcon';\nimport { useSelector, useDispatch } from 'react-redux';\nimport selectors from 'src/modules/auth/authSelectors';\nimport WalletListModal from './WalletComponent/WalletListModal';\n// import WalletComponent from './WalletComponent/WalletComponent';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        background:\n            theme.palette.type === 'dark'\n                ? '#535353'\n                : `linear-gradient(to right, #2196f3 0%, #2196f3 35%), linear-gradient(to bottom, #2196f3 0%, #2196f3 50%), #6f4ceb`,\n\n        color: '#fff',\n        padding: 20,\n        marginTop: theme.spacing(2),\n        marginBottom: '1em',\n    },\n    media: {\n        background: `url(${publishArticleImage}) top right / cover`,\n        marginLeft: 'auto',\n    },\n    actions: {\n        [theme.breakpoints.down('md')]: {\n            padding: 0,\n            flexWrap: 'wrap',\n            '& a': {\n                marginTop: '1em',\n                marginLeft: '0!important',\n                marginRight: '1em',\n            },\n        },\n    },\n    classbox: {\n      \n        border: '2px solid white',\n        borderRadius: 10,\n        background: 'linear-gradient(180deg, #c3c8df, #7C8BD0  90%)',\n        boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)',\n        padding: 8,\n       \n      },\n      title: {\n        fontSize: 30,\n        \n      },\n    Buttons: {\n        background: \"linear-gradient(0.07turn, #3f87a6, #ebf8e1, #2796f3)\",\n        border: 0,\n        borderRadius: 16,\n        boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n        color: \"#000000\",\n        height: 48,\n        padding: \"0 30px\",\n        \"&:hover\": {\n          background: \"#e0e0e0;\"\n        }\n      }\n   \n}));\n\n\n\nfunction Welcome(props) {\n    const currentUser = useSelector(\n        selectors.selectCurrentUser,\n      );\n      let profilebutton ;\n    const classes = useStyles();\n      if (!currentUser.profileId) {\n    \n    profilebutton =   <Button\n    className={classes.Buttons}\n        variant=\"contained\"\n        startIcon={<HomeIcon />}\n        component={Link}\n        to=\"/profile\"\n    >\n        Complete Profile\n    </Button>;\n  }\n    return (\n        <Card className={classes.root}>\n            <Box display={{  lg: \"none\" }}>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom style={{color:'#fff'}}>\n                        Welcome {props.UserName}\n                    </Typography>\n\n            </Box>\n            <Box display=\"flex\">\n                <Box flex=\"1\"  display={{ xs: \"none\", lg: \"block\" }}>\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom style={{color:'#fff'}}> \n                        Welcome {props.UserName}\n                    </Typography>\n                    <Box maxWidth=\"40em\">\n                        <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                            Complete you sign up\n                        </Typography>\n                    </Box>\n                    <CardActions className={classes.actions}>\n                    {profilebutton}\n                        <Button\n                         className={classes.Buttons}\n                            variant=\"contained\"\n                            startIcon={<CodeIcon />}\n                            component={Link}\n                            to=\"/personalvitals\"\n                        >\n                            Update Vitals\n                        </Button>\n                    </CardActions>\n                </Box>\n\n                <Box\n                    display={{ xs: 'none', sm: 'none', md: 'block' }}\n                    width=\"22cm\"\n                    overflow=\"hidden\" \n                />\n\n<Box bgcolor=\"primary.main\" className={` ${classes.classbox}`} color=\"primary.contrastText\"\n            >\n\n          <Box  p={1} m={0}  className={` ${classes.title}`}>\n            {/* {i18n('common.walletTop')}   */}\n            </Box>\n\n      <Grid container spacing={3}>\n    \n        \n        <Grid item xs>\n        <Box flexDirection=\"row\" p={1} m={0}>\n        <WalletListModal />\n        <br />\n            </Box>\n        </Grid>\n        <Grid item xs>\n      \n        </Grid>\n        <Grid item xs>\n        \n        <Box flexDirection=\"row-reverse\" p={1} m={0}>\n            <Button\n            component={Link}\n            to=\"/wallet/list\"\n             style={{ color: \"white\", fontSize: 22}}>Balance <br />\n              NGN1200\n            </Button>\n            </Box>\n        </Grid>\n      </Grid>\n      </Box>\n     \n                {/* <CardWithIcon icon={WalletIcon} to={\"userID\"}  title={\"Wallet\"}\n            subtitle={\"N5,000\"} /> */}\n            {/* <WalletComponent /> */}\n        \n\n                        \n            </Box>\n        </Card>\n    );\n};\n\nWelcome.propTypes ={\n    UserName: PropTypes.string\n};\n\nexport default Welcome;\n\n\n// className={classes.media}","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/Menu.tsx",["2244"],"import React, { useLayoutEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\nimport actions from 'src/modules/layout/layoutActions';\nimport layoutSelectors from 'src/modules/layout/layoutSelectors';\nimport menus from 'src/view/menus';\nimport clsx from 'clsx';\nimport {\n  makeStyles,\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@material-ui/core';\nimport GoOnline from 'src/view/layout/GoOnline';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  active: {\n    color: theme.palette.primary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  toolbar: theme.mixins.toolbar,\n  listItemIcon: {\n    minWidth: '48px',\n  },\n  listItemDisabled: {\n    opacity: 0.5,\n  },\n}));\n\nfunction Menu(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const currentTenant = useSelector(\n    authSelectors.selectCurrentTenant,\n  );\n  const currentUser = useSelector(\n    authSelectors.selectCurrentUser,\n  );\n  const menuVisible = useSelector(\n    layoutSelectors.selectMenuVisible,\n  );\n  const permissionChecker = new PermissionChecker(\n    currentTenant,\n    currentUser,\n  );\n\n  const IsOnline = useSelector(\n    layoutSelectors.selectOnline,\n  );\n\n  useLayoutEffect(() => {\n    const toggleMenuOnResize = () => {\n      (window as any).innerWidth < 576\n        ? dispatch(actions.doHideMenu())\n        : dispatch(actions.doShowMenu());\n    };\n\n    toggleMenuOnResize();\n\n    (window as any).addEventListener(\n      'resize',\n      toggleMenuOnResize,\n    );\n\n    return () => {\n      (window as any).removeEventListener(\n        'resize',\n        toggleMenuOnResize,\n      );\n    };\n  }, [dispatch]);\n\n  const selectedKeys = () => {\n    const url = props.url;\n\n    const match = menus.find((option) => {\n      if (option.exact) {\n        return url === option.path;\n      }\n\n      return (\n        url === option.path ||\n        url.startsWith(option.path + '/')\n      );\n    });\n\n    if (match) {\n      return [match.path];\n    }\n\n    return [];\n  };\n\n  const match = (permission) => {\n    return permissionChecker.match(permission);\n  };\n\n  const lockedForCurrentPlan = (permission) => {\n    return permissionChecker.lockedForCurrentPlan(\n      permission,\n    );\n  };\n\n  const CustomRouterLink = (props) => (\n    <div\n      style={{\n        flexGrow: 1,\n      }}\n    >\n      <Link\n        style={{\n          textDecoration: 'none',\n          color: 'inherit',\n        }}\n        {...props}\n      />\n    </div>\n  );\n\n  if (!menuVisible) {\n    return null;\n  }\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      anchor=\"left\"\n      open={true}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.toolbar}></div>\n      <GoOnline IsOnline />\n      <List>\n        {menus\n          .filter((menu) => match(menu.permissionRequired))\n          .map((menu) => (\n            <CustomRouterLink key={menu.path} to={menu.path}>\n              <ListItem button>\n                <ListItemIcon\n                  className={clsx({\n                    [classes.listItemIcon]: true,\n                    [classes.active]: selectedKeys().includes(\n                      menu.path,\n                    ),\n                  })}\n                >\n                  {menu.icon}\n                </ListItemIcon>\n                <ListItemText\n                  className={clsx({\n                    [classes.active]: selectedKeys().includes(\n                      menu.path,\n                    ),\n                  })}\n                >\n                  {menu.label}\n                </ListItemText>\n              </ListItem>\n            </CustomRouterLink>\n          ))}\n\n        {menus\n          .filter((menu) =>\n            lockedForCurrentPlan(menu.permissionRequired),\n          )\n          .map((menu) => (\n            <ListItem key={menu.path} className={classes.listItemDisabled}>\n              <ListItemIcon className={classes.listItemIcon}>\n                {menu.icon}\n              </ListItemIcon>\n              <ListItemText>{menu.label}</ListItemText>\n            </ListItem>\n          ))}\n      </List>\n    </Drawer>\n  );\n}\n\nexport default Menu;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/Header.tsx",["2245"],"import layoutActions from 'src/modules/layout/layoutActions';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport I18nSelect from 'src/view/layout/I18nSelect';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  makeStyles,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport UserMenu from 'src/view/layout/UserMenu';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport selectors from 'src/modules/auth/authSelectors';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    color: theme.palette.getContrastText(\n      theme.palette.primary.main,\n    ),\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  logo: {\n    paddingLeft: theme.spacing(1),\n    fontWeight: 500,\n    fontSize: '1.5em',\n    color: theme.palette.getContrastText(\n      theme.palette.primary.main,\n    ),\n    textDecoration: 'none',\n  },\n  grow: {\n    flex: '1 1 auto',\n  },\n}));\n\nfunction Header(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const logoUrl = useSelector(selectors.selectLogoUrl);\n\n  const doToggleMenu = () => {\n    dispatch(layoutActions.doToggleMenu());\n  };\n\n  return (\n    <AppBar className={classes.appBar} position=\"fixed\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          onClick={doToggleMenu}\n          color=\"inherit\"\n        >\n          <MenuIcon />\n        </IconButton> \n\n        <Link className={classes.logo} to=\"/\">\n          {logoUrl ? (\n            <img\n              src={logoUrl}\n              width=\"164px\"\n              alt={i18n('app.title')}\n              style={{ verticalAlign: 'middle' }}\n            />\n          ) : (\n            <>{i18n('app.title')}</>\n          )}\n        </Link>\n\n        <div className={classes.grow} />\n\n        {/* <I18nSelect /> */}\n\n        <UserMenu />\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/errors/styles/ErrorWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/TenantSelectForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/yup/yupFormSchemas.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/Wrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/OtherActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/Logo.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/styles/Content.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/InputFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/Breadcrumb.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/edit/UserEditForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/PageTitle.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/Importer.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/styles/ContentWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/settings/settingsService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/error/errors.tsx",["2246"],"import Message from 'src/view/shared/message';\nimport { getHistory } from 'src/modules/store';\nimport { i18n, i18nExists } from 'src/i18n';\nimport authService from 'src/modules/auth/authService';\nimport { useEffect } from 'react';\nimport swal from 'sweetalert';\n\nconst DEFAULT_ERROR_MESSAGE = i18n(\n  'errors.defaultErrorMessage',\n);\n\nfunction selectErrorKeyOrMessage(error) {\n  if (error && error.response && error.response.data) {\n    const data = error.response.data;\n\n    if (data.error && data.error.message) {\n      return data.error.message;\n    }\n\n    return String(data);\n  }\n\n  return error.message || DEFAULT_ERROR_MESSAGE;\n}\n\nfunction selectErrorMessage(error) {\n  const key = selectErrorKeyOrMessage(error);\n\n  if (i18nExists(key)) {\n    return i18n(key);\n  }\n\n  return key;\n}\n\nfunction selectErrorCode(error) {\n  if (error && error.response && error.response.status) {\n    return error.response.status;\n  }\n\n  return 500;\n}\n\nexport default class Errors {\n  static handle(error) {\n    if (process.env.NODE_ENV !== 'test') {\n      console.error(selectErrorMessage(error));\n      console.error(error);\n    }\n\n    if (selectErrorCode(error) === 401) {\n      authService.signout();\n      (window as any).location.reload();\n      return;\n    }\n\n    if (selectErrorCode(error) === 403) {\n      getHistory().push('/403');\n      return;\n    }\n\n    if (selectErrorCode(error) === 404) {\n      //Comment this out and instead insert a SWAL here\n      swal({\n        text: \"Provider Not Available ....\",\n        // content: el,\n        buttons: {\n          confirm: {\n            /*\n             * We need to initialize the value of the button to\n             * an empty string instead of \"true\":\n             */\n            value: \"DEFAULT_INPUT_TEXT\",\n          },\n        },\n      })\n\n      // getHistory().push('/403');\n      return;\n    }\n\n    if ([400, 429].includes(selectErrorCode(error))) {\n      Message.error(selectErrorMessage(error));\n      return;\n    }\n    //Comment this out and instead insert a SWAL here\n    swal({\n      text: \"Network Error....\",\n      // content: el,\n      buttons: {\n        confirm: {\n          /*\n           * We need to initialize the value of the button to\n           * an empty string instead of \"true\":\n           */\n          value: \"DEFAULT_INPUT_TEXT\",\n        },\n      },\n    })\n    // getHistory().push('/500');\n  }\n\n  static errorCode(error) {\n    return selectErrorCode(error);\n  }\n\n  static selectMessage(error) {\n    return selectErrorMessage(error);\n  }\n\n  static showMessage(error) {\n    Message.error(selectErrorMessage(error));\n  }\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/exporter/exporter.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auditLog/auditLogSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/GoOnline.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/UserMenu.tsx",["2247"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button,\n  Menu,\n  MenuItem,\n  makeStyles,\n  Avatar,\n} from '@material-ui/core';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport { getHistory } from 'src/modules/store';\nimport authActions from 'src/modules/auth/authActions';\nimport { i18n } from 'src/i18n';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport MoneyRoundedIcon from '@material-ui/icons/MoneyRounded';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport LockIcon from '@material-ui/icons/Lock';\nimport config from 'src/config';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport CodeIcon from '@material-ui/icons/Code';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: theme.palette.getContrastText(\n      theme.palette.primary.main,\n    ),\n  },\n  buttonInner: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  text: {\n    margin: theme.spacing(0, 0.5, 0, 1),\n    display: 'none',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    color: theme.palette.getContrastText(\n      theme.palette.primary.main,\n    ),\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  optionText: {\n    margin: theme.spacing(0, 0.5, 0, 1),\n  },\n}));\n\nfunction UserMenu(props) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const userText = useSelector(\n    authSelectors.selectCurrentUserNameOrEmailPrefix,\n  );\n  const userAvatar = useSelector(\n    authSelectors.selectCurrentUserAvatar,\n  );\n  const currentTenant = useSelector(\n    authSelectors.selectCurrentTenant,\n  );\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const doSignout = () => {\n    dispatch(authActions.doSignout());\n  };\n\n  const doNavigateToProfile = () => {\n    getHistory().push('/profile');\n  };\n\n  const doNavigateToWallet = () => {\n    getHistory().push('/profile');\n  };\n\n  const doNavigateToPasswordChange = () => {\n    getHistory().push('/password-change');\n  };\n\n  const doNavigateToTenants = () => {\n    getHistory().push('/tenant');\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.button}\n        onClick={handleClick}\n      >\n        <div className={classes.buttonInner}>\n          {userAvatar && (\n            <Avatar src={userAvatar} alt=\"avatar\" />\n          )}\n          {!userAvatar && <AccountCircleIcon />}\n          <div className={classes.text}>\n            <div>{userText}</div>\n            {['multi', 'multi-with-subdomain'].includes(\n              config.tenantMode,\n            ) && <div>{currentTenant.name}</div>}\n          </div>\n        </div>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n         <MenuItem onClick={doNavigateToWallet}>\n          <MoneyRoundedIcon />\n          <span className={classes.optionText}>\n              Wallet\n          </span>\n        </MenuItem>\n        <MenuItem onClick={doNavigateToProfile}>\n          <PersonOutlineIcon />\n          <span className={classes.optionText}>\n            {i18n('auth.profile.title')}\n          </span>\n        </MenuItem>\n        <MenuItem onClick={doNavigateToPasswordChange}>\n          <LockIcon />\n          <span className={classes.optionText}>\n            {i18n('auth.passwordChange.title')}\n          </span>\n        </MenuItem>\n        {['multi', 'multi-with-subdomain'].includes(\n          config.tenantMode,\n        ) && (\n          <MenuItem onClick={doNavigateToTenants}>\n            <AppsIcon />\n            <span className={classes.optionText}>\n              {i18n('auth.tenants')}\n            </span>\n          </MenuItem>\n        )}\n \n        <MenuItem onClick={doSignout}>\n          <ExitToAppIcon />\n          <span className={classes.optionText}>\n            {i18n('auth.signout')}\n          </span>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nexport default UserMenu;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/layout/layoutActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/menus.tsx",["2248","2249","2250","2251","2252"],"import Permissions from 'src/security/permissions';\nimport { i18n } from 'src/i18n';\nimport React from 'react';\nimport CreditCardOutlinedIcon from '@material-ui/icons/CreditCardOutlined';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport config from 'src/config';\n\nconst permissions = Permissions.values;\n\nexport default [\n  {\n    path: '/',\n    exact: true,\n    icon: <DashboardIcon />,\n    label: i18n('dashboard.menu'),\n    permissionRequired: permissions.patientRead,\n  },\n  {\n    path: '/Dashboard',\n    exact: true,\n    icon: <DashboardIcon />,\n    label: i18n('dashboard.menu'),\n    permissionRequired: permissions.userRead,\n  },\n\n  {\n    path: '/EMR',\n    exact: true,\n    icon: <DashboardIcon />,\n    label: \"My EMR\",\n    permissionRequired: null,\n  },\n\n  {\n    path: '/user',\n    icon: <SettingsIcon />,\n    label: 'Users',\n    permissionRequired: permissions.userRead,\n  },\n  {\n    path: '/appointment',\n    icon: <SettingsIcon />,\n    label: 'Appointment',\n    permissionRequired: permissions.patientRead,\n  },\n  {\n    path: '/patient-report',\n    icon: <SettingsIcon />,\n    label: 'Report',\n    permissionRequired: permissions.patientRead,\n  },\n\n\n\n\n  {\n    path: '/setup',\n    icon: <SettingsIcon />,\n    label: 'Set Up',\n    permissionRequired: permissions.userRead,\n  },\n  {\n    path: '/report',\n    icon: <SettingsIcon />,\n    label: 'Report',\n    permissionRequired: permissions.userRead,\n  },\n  \n  // {\n  //   path: '/settings',\n  //   icon: <SettingsIcon />,\n  //   label: i18n('settings.menu'),\n  //   permissionRequired: permissions.settingsEdit,\n  // },\n/* \n\n  {\n    path: '/order',\n    permissionRequired: permissions.orderRead,\n    icon: <ChevronRightIcon />,\n    label: i18n('entities.order.menu'),\n  }, */\n].filter(Boolean);\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/components/CardWithIcon.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/SelectFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/invitation/tenantInvitationSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/invitation/tenantInvitationActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/formErrors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/FormWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterStatus.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterList.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/form/userFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/Spinner.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/form/userFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogTable.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auditLog/AuditLogFilter.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/exporter/exporterRenders.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/security/permissions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/view/userViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/view/userViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/exporter/exporterSchema.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/excel/excel.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/shared/reactSelectMaterialUi.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/security/roles.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/table/TableCellCustom.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userService.tsx",["2253","2254"],"import authAxios from 'src/modules/shared/axios/authAxios';\nimport AuthCurrentTenant from 'src/modules/auth/authCurrentTenant';\n\nexport default class UserService {\n  static async edit(data) {\n    const body = {\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.put(\n      `/tenant/${tenantId}/user`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async destroy(ids) {\n    const params = {\n      ids,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.delete(\n      `/tenant/${tenantId}/user`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async create(data) {\n    const body = {\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/user`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async import(values, importHash) {\n    const body = {\n      data: {\n        ...values,\n      },\n      importHash,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/user/import`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async find(id) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/user/${id}`,\n    );\n    return response.data;\n  }\n\n  static async fetchUsers(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/user`,\n      // {\n      //   params,\n      // },\n    );\n\n    return response.data;\n  }\n\n  static async fetchUserAutocomplete(query, limit) {\n    const params = {\n      query,\n      limit,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/user/autocomplete`,\n      {\n        params,\n      },\n    );\n    return response.data;\n  }\n\n  static  async getUserProfile(id) {\n    const tenantId = AuthCurrentTenant.get();\n    const response = await authAxios.get(\n      `/tenant/${id}/profile/`,\n    );\n     return response.data;\n  }\n\n\n\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/table/Pagination.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/ImporterRowStatus.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/view/UserStatusView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/view/TextViewItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/view/ImagesViewItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/view/CustomViewItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/FilterWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/security/storage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/filter/FilterAccordion.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/filter/FilterPreview.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/filter/filterRenders.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/TagsFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/DatePickerRangeFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/yup/yupFilterSchemas.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/styles/ToolbarWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/yup/yupImporterSchemas.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/userSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/styles/ImporterStatusWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/modals/ConfirmModal.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/ColoredChip.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/importer/styles/ImporterErrorStatusMessage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerStatuses.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/table/styles/PaginationWrapper.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/SettingsFormToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/SettingsForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/uploaders/ImagesUploader.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importer.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/TenantNewForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/importer/userImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/view/userViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/form/userFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/ImagesFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/settings/MaterialUIColorTool.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/modals/ImageModal.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/fileUpload/fileUploader.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/PasswordChangeFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/ProfileFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/new/UserNewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/PlanPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/forums/ForumPage.tsx",["2255","2256","2257"],"import { Avatar,  Card,  createStyles, Divider, Fab, Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles, Paper, TextField, Theme, Typography  } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport React, { useRef, useState } from 'react';\nimport firebase  from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/firebase';\nimport 'firebase/auth';\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'src/modules/auth/authSelectors';\n\nconst useStyles = makeStyles({\n   root: {\n        width: \"100%\",\n        transition: \"0.3s\",\n        margin: \"0 auto\",\n        borderRadius: \"16px\",\n        cursor: \"pointer\",\n        boxShadow: \"0 4px 20px -12px rgba(0,0,0,0.3)\",\n        \"&:hover\": {\n            boxShadow: \"0 8px 40px -12.125px rgba(0,0,0,0.3)\",\n            transform: \"scale(1)\",\n        },\n    },\n    title: {\n        fontWeight: \"bold\",\n    },\n    sub: {\n        lineHeight: 1.8,\n        fontSize: 12,\n    },\n    large: {\n        width: '150px',\n        height: '150px'\n      },\n\n      table: {\n        minWidth: 650,\n      },\n      chatSection: {\n        width: '100%',\n        height: '80vh'\n      },\n      headBG: {\n          backgroundColor: '#e0e0e0'\n      },\n      borderRight500: {\n          borderRight: '1px solid #e0e0e0'\n      },\n      messageArea: {\n        height: '70vh',\n        overflowY: 'auto'\n      }    \n  \n});\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCGce_SEsJe2OqTH4FSKbSi157UUzAca5o\",\n    authDomain: \"kokofpnew.firebaseapp.com\",\n    projectId: \"kokofpnew\",\n    storageBucket: \"kokofpnew.appspot.com\",\n    messagingSenderId: \"1049294481249\",\n    appId: \"1:1049294481249:web:10efce9205534005f4c720\"\n})\n\nconst firestore =firebase.firestore();\n\n// function formatSeconds(seconds) {\n//     var date = new Date();\n//     date.setSeconds(seconds);\n//     return date.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\");\n// }\n\nfunction ForumPage(props) {\n    const classes = useStyles();\n    const dummy = useRef();\n    const userDetails = useSelector(\n        authSelectors.selectCurrentUser,\n      );\n      console.log(userDetails)\n    const auth = userDetails;\n\n   const messagesRef = firestore.collection('messages');\n   const query = messagesRef.orderBy('createdAt').limit(25);\n   const [messages] = useCollectionData(query, { idField: 'id' });\n   console.log(messages);\n\n   const [formValue, setFormValue] = useState('');\n   const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { id, fullName } = auth;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      id,\n      fullName\n    })\n\n\n    setFormValue('');\n\n  }\n  return (\n    <>\n        <TextField  placeholder='Forums'\n                        label='Search for Forums'\n                        name='searchForums'\n                        id='searchForums'\n                        variant=\"outlined\"\n                        fullWidth\n                        type='text'\n                />\n         <div className=\"mt-2\">\n     <Card className={`${classes.root} fade-in-bck`}>\n     <Grid item lg={12}>\n                        <Grid container alignItems=\"center\" spacing={2}>\n                        <div>\n        <Grid container>\n            <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid>\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n            <Grid item xs={3} className={classes.borderRight500}>\n                <List>\n                    <ListItem button key=\"RemySharp\">\n                        <ListItemIcon>\n                        <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"John Wick\"></ListItemText>\n                    </ListItem>\n                </List>\n                <Divider />\n                <Grid item xs={12} style={{padding: '10px'}}>\n                    <TextField id=\"outlined-basic-email\" label=\"Search\" variant=\"outlined\" fullWidth />\n                </Grid>\n                <Divider />\n                <List>\n                    <ListItem button key=\"RemySharp\">\n                        <ListItemIcon>\n                            <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Remy Sharp\">Remy Sharp</ListItemText>\n                        <ListItemText secondary=\"online\" ></ListItemText>\n                    </ListItem>\n                    <ListItem button key=\"Alice\">\n                        <ListItemIcon>\n                            <Avatar alt=\"Alice\" src=\"https://material-ui.com/static/images/avatar/3.jpg\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Alice\">Alice</ListItemText>\n                    </ListItem>\n                    <ListItem button key=\"CindyBaker\">\n                        <ListItemIcon>\n                            <Avatar alt=\"Cindy Baker\" src=\"https://material-ui.com/static/images/avatar/2.jpg\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Cindy Baker\">Cindy Baker</ListItemText>\n                    </ListItem>\n                </List>\n            </Grid>\n            <Grid item xs={9} lg={9}>\n                <List className={classes.messageArea}>\n                {messages && messages.map(msg =>\n              \n                    <ListItem key=\"1\">\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <ListItemText  primary={msg.text}></ListItemText>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <ListItemText  secondary=\"09.98\"></ListItemText>\n                            </Grid>\n                        </Grid>\n                    </ListItem>\n                    )}\n                </List>\n                <Divider />\n                <Grid container style={{padding: '20px'}}>\n                <form onSubmit={sendMessage}>\n                    <Grid item xs={11}>\n                        <TextField id=\"outlined-basic-email\" label=\"Type Something\" value={formValue} onChange={(e) => setFormValue(e.target.value)} fullWidth />\n                    </Grid>\n                    <Grid xs={1} >\n                    <Fab color=\"primary\" aria-label=\"add\" type=\"submit\" disabled={!formValue}><SendIcon /></Fab> \n                        {/* <Fab color=\"primary\" aria-label=\"add\"><SendIcon /></Fab> */}\n                    </Grid>\n                    </form>\n                </Grid>\n            </Grid>\n        </Grid>\n      </div>\n                      \n                                    {/* <Grid item  spacing={2} sm={6} md={4} xs={12} lg={3}>\n                                     \n                                    <Avatar alt=\"Remy Sharp\" src=\"/images/avatar/1.jpg\" />\n                                        \n                                  \n                                    </Grid> */}\n                           \n                        </Grid>\n                    </Grid>\n                    </Card>\n                    </div> \n    \n    \n      </>)\n}\n\n\n\nexport default ForumPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/consultations/AvailableConsultantsPage.tsx",["2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270"],"import { Avatar, Badge, Card, CardHeader, createStyles, FormControl, Grid, IconButton, InputLabel, makeStyles, MenuItem, TextField, Theme } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Person from 'src/view/consultations/Person';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { i18n } from 'src/i18n';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { useState } from 'react';\nimport Select from '@material-ui/core/Select';\nimport { InputFormItem } from '../shared/form/items/InputFormItem';\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n        minHeight: \"100vh\",\n        transition: \"0.3s\",\n        margin: \"0 auto\",\n        borderRadius: \"16px\",\n        cursor: \"pointer\",\n        boxShadow: \"0 4px 20px -12px rgba(0,0,0,0.3)\",\n        \"&:hover\": {\n            boxShadow: \"0 8px 40px -12.125px rgba(0,0,0,0.3)\",\n            transform: \"scale(1)\",\n        },\n        padding: '40px'\n    },\n    jss28: {\n        flexGrow: 1,\n        width: '100%',\n        cursor: 'pointer',\n        margin: '0 auto',\n        borderRadius: '16px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n        transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n        ' &:hover': {\n            boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n        }\n    },\n    title: {\n        fontWeight: \"bold\",\n    },\n    sub: {\n        lineHeight: 1.8,\n        fontSize: 12,\n    },\n    large: {\n        width: '25px',\n        height: '30px',\n    },\n    avatar: {\n        backgroundColor: red[500],\n        width: '60px',\n        height: '60px'\n    },\n    si: {\n        width: '200px',\n    }\n\n});\n\n\n\nconst handleSubmit = ({});\n\nfunction AvailableConsultantPage(props) {\n    const classes = useStyles();\n    var hospitals = [\n        { name: 'Dr. Goodness Ezeani', image: '/images/1.jpg', status: 'Available', Qualification: 'General Practitioner' },\n        { name: 'Professor Tina Onyinye', image: '/images/1.jpg', status: 'Available', Qualification: 'ENT Specialist' },\n        { name: 'Dr. Doyin ', image: '/images/1.jpg', status: 'Available', Qualification: 'General Practitioner' },\n        { name: 'Dr. Tolu Awobayo', image: '/images/1.jpg', status: 'Available', Qualification: 'Consultant, Gynacologist' },\n\n    ]\n    const form = useForm({\n        mode: 'all',\n    });\n\n    const onSubmit = (values) => {\n        props.onSubmit(props.record?.id, values);\n    };\n\n\n    return (\n        <>\n\n\n            <div className=\"mt-2\">\n                <Card className={`${classes.root} fade-in-bck`}>\n                    <Grid item lg={12}>\n\n                        <Grid spacing={2} container>\n                            <Grid item xl={4} lg={4} md={12} sm={12} xs={12}>\n\n                                <FormProvider {...form}>\n                                    <form onSubmit={form.handleSubmit(onSubmit)}>\n\n                                        <Card elevation={10} style={{\n                                            padding: 20,\n                                            marginTop: 5,\n                                        }}>\n                                            <h2>{i18n('entities.search.name')} </h2>\n                                            <Grid spacing={2} container>\n                                                <Grid item md={6} sm={12} xs={12}>\n                                                    <InputFormItem\n                                                        name=\"specialization\"\n                                                        label={i18n('entities.search.fields.specialization')}\n                                                        required={true}\n                                                    />\n                                                </Grid>\n                                                <Grid item md={6} sm={12} xs={12}>\n                                                    <InputFormItem\n                                                        name=\"country\"\n                                                        label={i18n('entities.search.fields.country')}\n                                                        required={true}\n                                                    />\n                                                </Grid>\n                                                <Grid item md={6} sm={12} xs={12}>\n                                                    <InputFormItem\n                                                        name=\"hospital\"\n                                                        label={i18n('entities.search.fields.hospital')}\n                                                        required={true}\n                                                    />\n                                                </Grid>\n\n\n                                                <Grid item md={6} sm={12} xs={12}>\n                                                    <InputFormItem\n                                                        name=\"city\"\n                                                        label={i18n('entities.search.fields.city')}\n                                                        required={true}\n                                                    />\n                                                </Grid>\n                                                <Grid item md={6} sm={12} xs={12}>\n                                                    <InputLabel id=\"demo-simple-select-label\">{i18n('entities.search.fields.status')} </InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-label\"\n                                                        id=\"demo-simple-select\"\n                                                        name=\"status\"\n                                                        className={classes.si}\n                                                    >\n\n                                                        <MenuItem value=\"1\">Online</MenuItem>\n                                                        <MenuItem value=\"0\">Offline</MenuItem>\n                                                    </Select>\n                                                </Grid>\n\n                                                <Grid item md={6} sm={12} xs={12}>\n                                                    <InputLabel id=\"demo-simple-select-label\">{i18n('entities.search.fields.km')} </InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-label\"\n                                                        id=\"demo-simple-select\"\n                                                        name=\"km\"\n                                                        className={classes.si}\n                                                    >\n\n                                                        <MenuItem value=\"1\">Online</MenuItem>\n                                                        <MenuItem value=\"0\">Offline</MenuItem>\n                                                    </Select>\n                                                </Grid>\n\n                                            </Grid>\n\n\n                                        </Card>\n                                    </form>\n                                </FormProvider>\n\n                            </Grid>\n\n                            <Grid item xl={8} lg={8} md={12} sm={12} xs={12}>\n\n\n\n                                <Card elevation={10} style={{\n                                    padding: 20,\n                                    marginTop: 5,\n                                }}>\n                                    <Grid spacing={2}>\n                                        <Grid container alignItems=\"center\" item spacing={2} sm={12} md={12} xs={12} lg={12}>\n                                            <h3>Available Doctors in ABCD Hospital  </h3>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container alignItems=\"center\" spacing={2}>\n                                        {hospitals.map((row) => (\n                                            <Grid item spacing={2} sm={6} md={4} xs={12} lg={3}>\n\n                                                <Card className={classes.jss28}>\n                                                    <CardHeader\n                                                        avatar={\n                                                            <Person />\n                                                        }\n\n                                                        title={row.name}\n                                                        subheader={row.status + \"  \" + row.Qualification}\n                                                    />\n                                                </Card>\n\n\n\n\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                </Card>\n\n                            </Grid>\n\n                        </Grid>\n\n\n\n\n\n\n\n\n\n                    </Grid>\n                </Card>\n            </div>\n        </>)\n}\n\n\n\nexport default AvailableConsultantPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/EMR/EMRDetails.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/consultations/ConsultationPage.tsx",["2271","2272","2273","2274"],"import { Avatar,  Card,  CardHeader,  createStyles, Grid, IconButton, makeStyles, TextField, Theme  } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n     root: {\n        width: \"100%\",\n        minHeight: \"100vh\",\n        transition: \"0.3s\",\n        margin: \"0 auto\",\n        borderRadius: \"16px\",\n        cursor: \"pointer\",\n        boxShadow: \"0 4px 20px -12px rgba(0,0,0,0.3)\",\n        \"&:hover\": {\n            boxShadow: \"0 8px 40px -12.125px rgba(0,0,0,0.3)\",\n            transform: \"scale(1)\",\n        },\n        padding: '40px'\n    },\n    jss28: {\n        flexGrow: 1,\n        width: '100%',\n        cursor: 'pointer',\n        margin: '0 auto',\n        borderRadius: '16px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n        transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n       ' &:hover':{  \n          boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n        }\n     },\n    title: {\n        fontWeight: \"bold\",\n    },\n    sub: {\n        lineHeight: 1.8,\n        fontSize: 12,\n    },\n    large: {\n        width: '25px',\n        height: '30px',\n      },\n      avatar: {\n        backgroundColor: red[500],\n        width: '60px',\n        height: '60px'\n      },\n      \n});\n\nconst handleSubmit = ({});\n\nfunction ConsultationPage(props) {\n    const classes = useStyles();\n\n    var hospitals = [\n         { name: 'Doreen Hospital', image: '/images/hospital3.jpg' , providers: 4, activeproviders: 3},\n         { name: 'Eko Hospital', image: '/images/hospital1.jpg' , providers: 6, activeproviders: 2},\n         { name: 'Lilly Clinic', image: '/images/hospital3.jpg' , providers: 8, activeproviders: 1},\n         { name: 'New Era Hospital', image: '/images/hospital2.png' , providers: 2, activeproviders: 0},\n         { name: 'Christ is King Hospital', image: '/images/hospital3.jpg' , providers: 10, activeproviders: 5},\n         { name: 'Amazing Grace Hospital', image: '/images/hospital3.jpg' , providers: 13, activeproviders: 3},\n         { name: 'Lagos General Hospital', image: '/images/hospital1.jpg' , providers: 14, activeproviders: 8},\n        ]\n\n\n  return (\n    <>\n    \n    <TextField  placeholder='Hositpals'\n                        label='Search for Hositpals'\n                        name='searchHospital'\n                        id='searchHospital'\n                        variant=\"outlined\"\n                        fullWidth\n                        type='text'\n                />\n\n     <div className=\"mt-2\">\n     <Card className={`${classes.root} fade-in-bck`}>\n     <Grid item lg={12}>\n                        <Grid container alignItems=\"center\" spacing={2}>\n                        {hospitals.map((row) => (\n                                    <Grid item  spacing={2} sm={6} md={4} xs={12} lg={3}>\n                                        <Link  style={{\n                                                textDecoration: 'none',\n                                                color: 'inherit',\n                                                }} key='/consultations/child'\n                                                     to='/consultations/child'>\n                                            <Card className={classes.jss28}>\n                                                <CardHeader\n                                                            avatar={\n                                                            <Avatar variant=\"rounded\" aria-label=\"recipe\" className={classes.avatar} src={row.image}>\n                                                                \n                                                            </Avatar>\n                                                            }\n                                                        \n                                                            title={row.name}\n                                                            subheader={row.providers + \" Registered , \" + row.activeproviders  + \" Active \" }\n                                                        />\n                                            </Card>\n                                        </Link>\n                           \n                                    \n                                  \n                                    </Grid>\n                        ))}\n                        </Grid>\n                    </Grid>\n                    </Card>\n                    </div>                    \n      </>)\n}\n\n\n\nexport default ConsultationPage;\n",["2275","2276"],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerSchema.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/form/TenantFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/EMR/EMRPage.tsx",["2277"],"import { CardContent, Grid, makeStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport PersonalvitalsListTable from '../personalvitals/list/PersonalvitalsListTable';\nimport PersonalvitalsListToolbar from '../personalvitals/list/PersonalvitalsListToolbar';\nimport ConsultationHistory from './component/ConsultationHistory';\n\n\nconst useStyles = makeStyles((theme) => ({\n  chartWrapper: {\n    border: '1px solid rgb(224, 224, 224)',\n    borderRadius: '5px',\n    backgroundColor: '#fff',\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n\n  DashboardCard: {minHeight: '500px'}\n}));\n\nfunction EMRPage(props) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div\n        style={{\n          padding: 0,\n        }}\n      >\n      <Grid spacing={2} container>\n    \n      <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n        <Card  style={{\n          minHeight: \"500px\",\n        }}>\n            <CardHeader title=\"My Consultations\">\n      </CardHeader>\n            <CardContent>\n                 <ConsultationHistory />\n                 <PersonalvitalsListToolbar />\n        {/* <PersonalvitalsListFilter /> */}\n        <PersonalvitalsListTable />\n            </CardContent>\n        </Card>\n             \n \n          </Grid>\n\n     {/*      <Grid item xl={6} lg={3} md={3} sm={12} xs={12}   >\n        \n                <GroupsOnline subtitle={\"Appointments\"} />\n        \n          </Grid>\n          <Grid item xl={6} lg={3} md={3} sm={12} xs={12}  >\n                \n                <GroupsOnline subtitle={\"Notifications\"}/>\n\n          </Grid> */}\n      \n  </Grid>\n\n        <p\n          style={{\n            marginTop: '16px',\n            width: '100%',\n            textAlign: 'center',\n            color: 'grey',\n          }}\n        >\n   \n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default EMRPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/layout/layoutReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/auth/authReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/dashboard/DashboardPage.tsx",["2278","2279","2280","2281","2282"],"import { Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { i18n } from 'src/i18n';\nimport TodaysFocus from 'src/view/dashboard/DashboardTodaysFocus';\nimport NotificationList from 'src/view/dashboard/Notifications';\nimport GroupsOnline from '../online/groupsOnline';\nimport PatientForm from 'src/view/patient/form/PatientForm';\nimport PersonalvitalsListPage from 'src/view/personalvitals/list/PersonalvitalsListPage';\nimport Welcome from '../layout/MainAlert';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'src/modules/auth/authSelectors';\n\nconst useStyles = makeStyles((theme) => ({\n  chartWrapper: {\n    border: '1px solid rgb(224, 224, 224)',\n    borderRadius: '5px',\n    backgroundColor: '#fff',\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n\n  DashboardCard: {minHeight: '500px'}\n}));\n\nfunction DashboardPage(props) {\n  const classes = useStyles();\n  const userText = useSelector(\n    authSelectors.selectCurrentUserNameOrEmailPrefix,\n  );\n\n  \n\n  return (\n    <>\n       <div>\n        \n        <Welcome UserName={userText} />\n        </div>\n      <div\n        style={{\n          padding: 0,\n        }}\n      >\n      <Grid spacing={2} container>\n         {/*  <Grid item xl={12} lg={12} md={6} sm={12} xs={12}>\n            <div className={classes.chartWrapper}>\n                Here we will put a Greeting and a dismissable alert\n            </div>\n          </Grid> */}\n          \n  \n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\n  \n              <TodaysFocus />\n \n          </Grid>\n\n          <Grid item md={3} sm={12} xs={12}   >\n        \n                <GroupsOnline subtitle={\"Appointments\"} />\n        \n          </Grid>\n          <Grid item  md={3} sm={12} xs={12}  >\n                \n                <GroupsOnline subtitle={\"Notifications\"}/>\n\n          </Grid>\n  </Grid>\n\n        <p\n          style={{\n            marginTop: '16px',\n            width: '100%',\n            textAlign: 'center',\n            color: 'grey',\n          }}\n        >\n         {/*  {i18n('dashboard.message')} */}\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default DashboardPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/shared/importer/importerReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/PasswordChangeForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/ProfileForm.tsx",["2283","2284","2285","2286"],"import Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport RedeemIcon from '@material-ui/icons/Redeem';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { StepIconProps } from '@material-ui/core/StepIcon';\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport clsx from 'clsx';\nimport FamilyInfoForm from './FamilyInfoForm';\nimport RelatedPatientForm from './RelatedPatients';\nimport DonorForm from './OrganDonor';\nimport Breadcrumb from 'src/view/shared/Breadcrumb';\nimport { i18n } from 'src/i18n';\nimport PatientForm from '../patient/form/PatientForm';\n\n\n\n\n \nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center',\n  },\n  active: {\n    color: '#784af4',\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props: StepIconProps) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n  },\n});\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons: { [index: string]: React.ReactElement } = {\n    1: <PersonIcon/>,\n    2: <PersonAddIcon />,\n    3: <GroupAddIcon />,\n    4: <RedeemIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\nfunction getSteps() {\n  return ['Personal Details', 'Family Information', 'Related Patients','Organ Donor'];\n}\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return (<PatientForm/>);\n    case 1:\n      return (<FamilyInfoForm/>);\n    case 2:\n      return (<RelatedPatientForm/>);\n    case 3:\n      return (<DonorForm/>);\n    default:\n      return 'Unknown step';\n  }\n}\n\n\nexport default function ProfileFormPage(props) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/PlanCardFree.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/PlanCardPaid.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserTable.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/user/list/UserFilter.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListTable.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/list/TenantListFilter.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/invitation/tenantInvitationReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/EMR/component/ConsultationHistory.tsx",["2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport { Box, Avatar } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Roles from 'src/security/roles';\nimport UserStatusView from 'src/view/user/view/UserStatusView';\n\nfunction ConsultationHistory() {\n \n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n\n  const doChangeSort = () => {};\n  const sorter = () => {};\n  const loading = false;\n  \n\n  const hasRows = true;\n\n  // const loading = useSelector();\n//  const rows = useSelector(selectors.selectRows);\n  const rows = [{id:'0',doctor:'Kenneth',avatars:'/images/1.jpg', cdate: '2021-01-05'}];\n\n  return (\n    <>\n      <Box\n        style={{\n          display: 'block',\n          width: '100%',\n          overflowX: 'auto',\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: '5px',\n            border: '1px solid rgb(224, 224, 224)',\n            borderCollapse: 'initial',\n          }}\n        >\n          <TableHead>\n            <TableRow>\n          \n              <TableCellCustom>\n                {i18n('user.fields.avatars')}\n              </TableCellCustom>\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'doctor'}\n                label={'Health Care Provider'}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'cdate'}\n                label={'Date'}\n              />\n\n              <TableCellCustom size=\"md\"></TableCellCustom>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    {i18n('table.noData')}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                              <TableCell>\n                    <Avatar\n                      src={row.avatars}\n                      alt=\"avatar\"\n                    />\n                  </TableCell>\n                  <TableCell>{row.doctor}</TableCell>\n                  <TableCell>{row.cdate}</TableCell>\n       \n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Tooltip title={i18n('common.view')}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/EMR/${row.id}`}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </Tooltip>\n                     \n                   \n                     \n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n    \n\n      {/* {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n('common.areYouSure')}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => setRecordIdToDestroy(null)}\n          okText={i18n('common.yes')}\n          cancelText={i18n('common.no')}\n        />\n      )} */}\n    </>\n  );\n}\n\nexport default ConsultationHistory;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/form/tenantFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/form/tenantFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/destroy/tenantDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/list/tenantListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/dashboard/DashboardTodaysFocus.tsx",["2298","2299","2300","2301","2302","2303"],"import { Card, Grid, useTheme, CardContent, CardMedia, Typography, makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport generalSelectors from \"src/modules/general/generalSelectors\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\",\n        minHeight: '500px',\n        transition: \"0.3s\",\n        margin: \"0 auto\",\n        borderRadius: \"16px\",\n        cursor: \"pointer\",\n        boxShadow: \"0 4px 20px -12px rgba(0,0,0,0.3)\",\n        \"&:hover\": {\n            boxShadow: \"0 8px 40px -12.125px rgba(0,0,0,0.3)\",\n            transform: \"scale(1)\",\n        },\n    },\n    title: {\n        fontWeight: \"bold\",\n    },\n    sub: {\n        lineHeight: 1.8,\n        fontSize: 12,\n    },\n});\n\nfunction TodaysFocus (props) {\n    // local state\n    const classes = useStyles();\n    const theme = useTheme();\n    const dispatch = useDispatch();\n\n   // let DataRows = [] as Array<{PageName: string, PageTile: string, PageSubTitle: string, Image: string}> ;  // useSelector(selectors.selectLogoUrl);\n   \n   let _data = {} as {PageName: string, PageTile: string, PageSubTitle: string, Image: string} ;  // useSelector(selectors.selectLogoUrl);\n    // let DataRows =  useSelector(generalSelectors.selectRows);\n\n\n   \n        return (\n            <>\n           {/*          {\n              DataRows.map((_data) => ( */}\n                   <div >\n                <Card className={`${classes.root} fade-in-bck`}>\n                    <CardMedia component=\"img\" \n                    image=\"/images/usAsIS.png\"\n                    height=\"300\" title={_data.PageName} />\n                    <CardContent>\n                        <Typography className={classes.title} variant=\"h5\" component=\"h2\" gutterBottom>\n                            {_data.PageTile}\n                        </Typography>\n                        <Typography className={classes.sub} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {_data.PageSubTitle}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                </div>\n           {/*    ))} */}\n             \n                                       \n            </>\n        );\n   \n\n    return null;\n};\n\nexport default TodaysFocus;","/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/form/tenantFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/tenant/form/TenantForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/consultations/Person.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/online/groupsOnline.tsx",["2304","2305"],"import * as React from 'react';\nimport {\n    Avatar,\n    Box,\n    Button,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\nimport { Link } from 'react-router-dom';\n\n\nimport CardWithIcon from 'src/view/components/CardWithIcon';\nimport { FC } from 'react';\n\n\ninterface Props {\n    title: string,\n    subtitle: string,\n    link: string,\n    baseNav: string\n}\n\n\n\nconst GroupsOnline= (props) => {\n\n    const classes = useStyles();\n\n    const visitors = [{id: 10, avatar: '/images/1.jpg', first_name: 'Raleke', last_name: 'Obiora' },\n    {id: 10, avatar: '/images/1.jpg', first_name: 'Adegoke', last_name: 'Doyin' },\n    {id: 10, avatar: '/images/1.jpg', first_name: 'Goodness', last_name: 'Ezeani', appID: Number }]\n\n    return (\n        <CardWithIcon\n            to={props.id}\n            icon={CustomerIcon}\n            title={props.title}\n            subtitle={props.subtitle}\n            \n        >\n            <List className={classes.DashboardCard}>\n                {visitors\n                    ? visitors.map((record: any) => (\n                          <ListItem\n                              button\n                              to={`/customers/${record.id}`}\n                              component={Link}\n                              key={record.id}\n                          >\n                              <ListItemAvatar>\n                                  <Avatar src={`${record.avatar}?size=32x32`} />\n                              </ListItemAvatar>\n                              <ListItemText\n                                  primary={`${record.first_name} ${record.last_name}`}\n                              />\n                          </ListItem>\n                      ))\n                    : null}\n            </List>\n            <Box flexGrow=\"1\">&nbsp;</Box>\n            <Button\n                className={classes.link}\n                component={Link}\n                to=\"/customers\"\n                size=\"small\"\n                color=\"primary\"\n            >\n               \n            </Button>\n        </CardWithIcon>\n    );\n};\n\nconst useStyles = makeStyles(theme => ({\n    link: {\n        borderRadius: 0,\n    },\n    linkContent: {\n        color: theme.palette.primary.main,\n    },\n    DashboardCard: {minHeight: '400px'}\n}));\n\nexport default GroupsOnline;","/var/www/html/Office/react project/KokoFrontEnd/src/view/user/new/UserNewForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/urlfy.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/user/list/userListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/tenantSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/plan/styles/planCardStyles.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/list/tenantListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/list/tenantListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/destroy/tenantDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/tenant/destroy/tenantDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/plan/planSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/view/MedicaltestViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/importer/MedicaltestImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/form/MedicaltestFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/importer/DrugsImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/form/DrugsFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/view/DrugsViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/view/AllergiesViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/importer/AllergiesImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/form/AllergiesFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/view/AllergiesViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/view/AllergiesView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListTable.tsx",["2306","2307","2308","2309","2310"],"import { Box } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport drugsSelectors from 'src/modules/drugs/drugsSelectors';\nimport destroyActions from 'src/modules/drugs/destroy/drugsDestroyActions';\nimport destroySelectors from 'src/modules/drugs/destroy/drugsDestroySelectors';\nimport actions from 'src/modules/drugs/list/drugsListActions';\nimport selectors from 'src/modules/drugs/list/drugsListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\n\n\nfunction DrugsListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    drugsSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    drugsSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          overflowX: \"auto\",\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: \"5px\",\n            border: \"1px solid rgb(224, 224, 224)\",\n            borderCollapse: \"initial\",\n          }}\n        >\n          <TableHead>\n            <TableRow>\n              {/* <TableCellCustom padding=\"checkbox\">\n                {hasRows && (\n                  <Checkbox\n                    checked={Boolean(isAllSelected)}\n                    onChange={() => doToggleAllSelected()}\n                    size=\"small\"\n                  />\n                )}\n              </TableCellCustom> */}\n              <TableCellCustom size=\"md\" />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"drugcode\"}\n                label={i18n(\"entities.drugs.fields.drugcode\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"drugName\"}\n                label={i18n(\"entities.drugs.fields.drugName\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"description\"}\n                label={i18n(\"entities.drugs.fields.description\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"drugkind\"}\n                label={i18n(\"entities.drugs.fields.drugkind\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"drugcategory\"}\n                label={i18n(\"entities.drugs.fields.drugcategory\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"status\"}\n                label={i18n(\"entities.drugs.fields.status\")}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {i18n(\"table.noData\")}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  {/* <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedKeys.includes(row.id)}\n                      onChange={() => doToggleOneSelected(row.id)}\n                      size=\"small\"\n                    />\n                  </TableCell> */}\n                  <TableCell>\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\n                      <Tooltip title={i18n(\"common.view\")}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/drugs/${row.id}`}\n                        >\n                          <VisibilityIcon />\n                        </IconButton>\n                      </Tooltip>\n                      {hasPermissionToEdit && (\n                        <Tooltip title={i18n(\"common.edit\")}>\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/drugs/${row.id}/edit`}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip title={i18n(\"common.destroy\")}>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => doOpenDestroyConfirmModal(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{row.drugcode}</TableCell>\n                  <TableCell>{row.drugName}</TableCell>\n                  <TableCell>{row.description}</TableCell>\n                  <TableCell>\n                    {row.drugkind\n                      ? i18n(\n                          `entities.drugs.enumerators.drugkind.${row.drugkind}`\n                        )\n                      : null}\n                  </TableCell>\n\n                  <TableCell>\n                    {row.drugcategory\n                      ? i18n(\n                          `entities.drugs.enumerators.drugcategory.${row.drugcategory}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.status\n                      ? i18n(`entities.drugs.enumerators.status.${row.status}`)\n                      : null}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination onChange={doChangePagination} pagination={pagination} />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n(\"common.areYouSure\")}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n(\"common.yes\")}\n          cancelText={i18n(\"common.no\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default DrugsListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/list/DrugsListFilter.tsx",["2311","2312","2313"],"import {\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/drugs/list/drugsListActions';\nimport selectors from 'src/modules/drugs/list/drugsListSelectors';\nimport yupFilterSchemas from 'src/modules/shared/yup/yupFilterSchemas';\nimport FilterWrapper, {\n  FilterButtons,\n} from 'src/view/shared/styles/FilterWrapper';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport filterRenders from 'src/modules/shared/filter/filterRenders';\nimport FilterPreview from 'src/view/shared/filter/FilterPreview';\nimport FilterAccordion from 'src/view/shared/filter/FilterAccordion';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\nimport drugsEnumerators from 'src/modules/drugs/drugsEnumerators';\nimport DatePickerRangeFormItem from 'src/view/shared/form/items/DatePickerRangeFormItem';\n\nconst schema = yup.object().shape({\n  drugcode: yupFilterSchemas.string(i18n(\"entities.drugs.fields.drugcode\")),\n  // description: yupFilterSchemas.string(\n  //   i18n(\"entities.drugs.fields.description\")\n  // ),\n  // drugkind: yupFilterSchemas.enumerator(i18n(\"entities.drugs.fields.drugkind\")),\n  // drugcategory: yupFilterSchemas.enumerator(\n  //   i18n(\"entities.drugs.fields.drugcategory\")\n  // ),\n  // status: yupFilterSchemas.enumerator(i18n(\"entities.drugs.fields.status\")),\n});\n\nconst emptyValues = {\n  drugcode: null,\n  // birthdateRange: [],\n  // gender: null,\n};\n\nconst previewRenders = {\n  drugcode: {\n    label: i18n(\"entities.drugs.fields.drugcode\"),\n    render: filterRenders.generic(),\n  },\n  // description: {\n  //   label: i18n(\"entities.drugs.fields.description\"),\n  //   render: filterRenders.generic(),\n  // },\n  // drugkind: {\n  //   label: i18n(\"entities.drugs.fields.drugkind\"),\n  //   render: filterRenders.enumerator(\"entities.drugs.enumerators.drugkind\"),\n  // },\n  // drugcategory: {\n  //   label: i18n(\"entities.drugs.fields.drugcategory\"),\n  //   render: filterRenders.enumerator(\"entities.drugs.enumerators.drugcategory\"),\n  // },\n  // status: {\n  //   label: i18n(\"entities.drugs.fields.status\"),\n  //   render: filterRenders.enumerator(\"entities.drugs.enumerators.status\"),\n  // },\n};\n\nfunction DrugsListFilter(props) {\n  const rawFilter = useSelector(selectors.selectRawFilter);\n  const dispatch = useDispatch();\n  const [expanded, setExpanded] = useState(false);\n\n  const [initialValues] = useState(() => {\n    return {\n      ...emptyValues,\n      ...rawFilter,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: initialValues,\n    mode: 'all',\n  });\n\n  useEffect(() => {\n    dispatch(actions.doFetch(schema.cast(initialValues), rawFilter));\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  const onSubmit = (values) => {\n    const rawValues = form.getValues();\n    dispatch(actions.doFetch(values, rawValues));\n    setExpanded(false);\n  };\n\n  const onReset = () => {\n    Object.keys(emptyValues).forEach((key) => {\n      form.setValue(key, emptyValues[key]);\n    });\n    dispatch(actions.doReset());\n    setExpanded(false);\n  };\n\n  const onRemove = (key) => {\n    form.setValue(key, emptyValues[key]);\n    return form.handleSubmit(onSubmit)();\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterAccordion\n        expanded={expanded}\n        onChange={(event, isExpanded) => setExpanded(isExpanded)}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <FilterPreview\n            values={rawFilter}\n            renders={previewRenders}\n            expanded={expanded}\n            onRemove={onRemove}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <FormProvider {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"drugcode\"\n                    label={i18n(\"entities.drugs.fields.drugcode\")}\n                  />\n                </Grid>\n                {/* <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"description\"\n                    label={i18n(\"entities.drugs.fields.description\")}\n                  />\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"drugkind\"\n                    label={i18n(\"entities.drugs.fields.drugkind\")}\n                    options={drugsEnumerators.drugkind.map((value) => ({\n                      value,\n                      label: i18n(\n                        `entities.drugs.enumerators.drugkind.${value}`\n                      ),\n                    }))}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"drugcategory\"\n                    label={i18n(\"entities.drugs.fields.drugcategory\")}\n                    options={drugsEnumerators.drugcategory.map((value) => ({\n                      value,\n                      label: i18n(\n                        `entities.drugs.enumerators.drugcategory.${value}`\n                      ),\n                    }))}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"status\"\n                    label={i18n(\"entities.drugs.fields.status\")}\n                    options={drugsEnumerators.status.map((value) => ({\n                      value,\n                      label: i18n(`entities.drugs.enumerators.status.${value}`),\n                    }))}\n                  />\n                </Grid> */}\n              </Grid>\n\n              <FilterButtons>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n                  startIcon={<SearchIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.search\")}\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  onClick={onReset}\n                  disabled={props.loading}\n                  startIcon={<UndoIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.reset\")}\n                </Button>\n              </FilterButtons>\n            </form>\n          </FormProvider>\n        </AccordionDetails>\n      </FilterAccordion>\n    </FilterWrapper>\n  );\n}\n\nexport default DrugsListFilter;","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListTable.tsx",["2314","2315","2316","2317","2318"],"import { Box } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport allergiesSelectors from 'src/modules/allergies/allergiesSelectors';\nimport destroyActions from 'src/modules/allergies/destroy/allergiesDestroyActions';\nimport destroySelectors from 'src/modules/allergies/destroy/allergiesDestroySelectors';\nimport actions from 'src/modules/allergies/list/allergiesListActions';\nimport selectors from 'src/modules/allergies/list/allergiesListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\n\n\nfunction AllergiesListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    allergiesSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    allergiesSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          overflowX: \"auto\",\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: \"5px\",\n            border: \"1px solid rgb(224, 224, 224)\",\n            borderCollapse: \"initial\",\n          }}\n        >\n          <TableHead>\n            <TableRow>\n              {/* <TableCellCustom padding=\"checkbox\">\n                {hasRows && (\n                  <Checkbox\n                    checked={Boolean(isAllSelected)}\n                    onChange={() => doToggleAllSelected()}\n                    size=\"small\"\n                  />\n                )}\n              </TableCellCustom> */}\n              <TableCellCustom size=\"md\" />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"name\"}\n                label={i18n(\"entities.allergies.fields.name\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"description\"}\n                label={i18n(\"entities.allergies.fields.description\")}\n              />\n\n              {/* <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"status\"}\n                label={i18n(\"entities.allergies.fields.status\")}\n              /> */}\n              <TableCellCustom size=\"md\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {i18n(\"table.noData\")}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  {/* <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedKeys.includes(row.id)}\n                      onChange={() => doToggleOneSelected(row.id)}\n                      size=\"small\"\n                    />\n                  </TableCell> */}\n                  <TableCell>\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\n                      <Tooltip title={i18n(\"common.view\")}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/allergies/${row.id}`}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </Tooltip>\n                      {hasPermissionToEdit && (\n                        <Tooltip title={i18n(\"common.edit\")}>\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/allergies/${row.id}/edit`}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip title={i18n(\"common.destroy\")}>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => doOpenDestroyConfirmModal(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.description}</TableCell>\n                  {/* <TableCell>\n                    {row.status\n                      ? i18n(\n                          `entities.allergies.enumerators.status.${row.status}`\n                        )\n                      : null}\n                  </TableCell> */}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination onChange={doChangePagination} pagination={pagination} />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n(\"common.areYouSure\")}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n(\"common.yes\")}\n          cancelText={i18n(\"common.no\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AllergiesListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/form/AllergiesForm.tsx",["2319","2320"],"import { Button, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\nimport allergiesEnumerators from 'src/modules/allergies/allergiesEnumerators';\nimport moment from 'moment';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\n\nconst schema = yup.object().shape({\n  name: yupFormSchemas.string(i18n(\"entities.allergies.fields.name\"), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  description: yupFormSchemas.string(i18n(\"entities.allergies.fields.description\"), {\n    required: true,\n    min: 2,\n    max: 1000,\n  }),\n\n  status: yupFormSchemas.enumerator(i18n(\"entities.allergies.fields.status\"), {\n    options: allergiesEnumerators.status,\n  }),\n});\n\nfunction AllergiesForm(props) {\n  console.log(props)\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      name: record.name,\n      description: record.description,\n      status: record.status,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n \n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"name\"\n                label={i18n(\"entities.allergies.fields.name\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"description\"\n                label={i18n(\"entities.allergies.fields.description\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <RadioFormItem\n                name=\"status\"\n                label={i18n(\"entities.allergies.fields.status\")}\n                options={allergiesEnumerators.status.map((value) => ({\n                  value,\n                  label: i18n(`entities.allergies.enumerators.status.${value}`),\n                }))}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <FormButtons\n            style={{\n              flexDirection: modal ? \"row-reverse\" : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.save\")}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.reset\")}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n(\"common.cancel\")}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default AllergiesForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/allergies/list/AllergiesListFilter.tsx",["2321"],"import {\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/allergies/list/allergiesListActions';\nimport selectors from 'src/modules/allergies/list/allergiesListSelectors';\nimport yupFilterSchemas from 'src/modules/shared/yup/yupFilterSchemas';\nimport FilterWrapper, {\n  FilterButtons,\n} from 'src/view/shared/styles/FilterWrapper';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport filterRenders from 'src/modules/shared/filter/filterRenders';\nimport FilterPreview from 'src/view/shared/filter/FilterPreview';\nimport FilterAccordion from 'src/view/shared/filter/FilterAccordion';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\nimport allergiesEnumerators from 'src/modules/allergies/allergiesEnumerators';\nimport DatePickerRangeFormItem from 'src/view/shared/form/items/DatePickerRangeFormItem';\n\nconst schema = yup.object().shape({\n  name: yupFilterSchemas.string(i18n(\"entities.allergies.fields.name\")),\n  description: yupFilterSchemas.string(i18n(\"entities.allergies.fields.description\")),\n\n  status: yupFilterSchemas.enumerator(i18n(\"entities.allergies.fields.status\")),\n});\n\nconst emptyValues = {\n  name: null,\n  description: null,\n  status: null,\n};\n\nconst previewRenders = {\n  name: {\n    label: i18n(\"entities.allergies.fields.name\"),\n    render: filterRenders.generic(),\n  },\n  description: {\n    label: i18n(\"entities.allergies.fields.description\"),\n    render: filterRenders.generic(),\n  },\n  status: {\n    label: i18n(\"entities.allergies.fields.status\"),\n    render: filterRenders.enumerator(\"entities.allergies.enumerators.status\"),\n  },\n};\n\nfunction AllergiesListFilter(props) {\n  const rawFilter = useSelector(selectors.selectRawFilter);\n  const dispatch = useDispatch();\n  const [expanded, setExpanded] = useState(false);\n\n  const [initialValues] = useState(() => {\n    return {\n      ...emptyValues,\n      ...rawFilter,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: initialValues,\n    mode: 'all',\n  });\n\n  useEffect(() => {\n    dispatch(actions.doFetch(schema.cast(initialValues), rawFilter));\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  const onSubmit = (values) => {\n    const rawValues = form.getValues();\n    dispatch(actions.doFetch(values, rawValues));\n    setExpanded(false);\n  };\n\n  const onReset = () => {\n    Object.keys(emptyValues).forEach((key) => {\n      form.setValue(key, emptyValues[key]);\n    });\n    dispatch(actions.doReset());\n    setExpanded(false);\n  };\n\n  const onRemove = (key) => {\n    form.setValue(key, emptyValues[key]);\n    return form.handleSubmit(onSubmit)();\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterAccordion\n        expanded={expanded}\n        onChange={(event, isExpanded) => setExpanded(isExpanded)}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <FilterPreview\n            values={rawFilter}\n            renders={previewRenders}\n            expanded={expanded}\n            onRemove={onRemove}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <FormProvider {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"name\"\n                    label={i18n(\"entities.allergies.fields.name\")}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"description\"\n                    label={i18n(\"entities.allergies.fields.description\")}\n                  />\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"status\"\n                    label={i18n(\"entities.allergies.fields.status\")}\n                    options={allergiesEnumerators.status.map((value) => ({\n                      value,\n                      label: i18n(\n                        `entities.allergies.enumerators.status.${value}`\n                      ),\n                    }))}\n                  />\n                </Grid>\n              </Grid>\n\n              <FilterButtons>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n                  startIcon={<SearchIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.search\")}\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  onClick={onReset}\n                  disabled={props.loading}\n                  startIcon={<UndoIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.reset\")}\n                </Button>\n              </FilterButtons>\n            </form>\n          </FormProvider>\n        </AccordionDetails>\n      </FilterAccordion>\n    </FilterWrapper>\n  );\n}\n\nexport default AllergiesListFilter;","/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/view/DrugsView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/view/DrugsViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/drugs/form/DrugsForm.tsx",["2322","2323","2324"],"import { Button, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\nimport drugsEnumerators from 'src/modules/drugs/drugsEnumerators';\nimport moment from 'moment';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\n\nconst schema = yup.object().shape({\n  drugcode: yupFormSchemas.string(i18n(\"entities.drugs.fields.drugcode\"), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  drugName: yupFormSchemas.string(\n    i18n(\"entities.drugs.fields.drugName\"),\n    {\n      required: true,\n      min: 2,\n      max: 500,\n    }\n  ),\n  description: yupFormSchemas.string(\n    i18n(\"entities.drugs.fields.description\"),\n    {\n      required: true,\n      min: 2,\n      max: 500,\n    }\n  ),\n  status: yupFormSchemas.enumerator(i18n(\"entities.drugs.fields.status\"), {\n    options: drugsEnumerators.status,\n  }),\n  drugkind: yupFormSchemas.enumerator(i18n(\"entities.drugs.fields.drugkind\"), {\n    options: drugsEnumerators.drugkind,\n  }),\n  drugcategory: yupFormSchemas.enumerator(\n    i18n(\"entities.drugs.fields.drugcategory\"),\n    {\n      options: drugsEnumerators.drugcategory,\n    }\n  ),\n});\n\nfunction DrugsForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      drugcode: record.drugcode,\n      description: record.description,\n      drugkind: record.drugkind,\n      drugcategory: record.drugcategory,\n      status: record.status,\n      drugName: record.drugName\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"drugcode\"\n                label={i18n(\"entities.drugs.fields.drugcode\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"drugName\"\n                label={i18n(\"entities.drugs.fields.drugName\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"description\"\n                label={i18n(\"entities.drugs.fields.description\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"drugkind\"\n                label={i18n(\"entities.drugs.fields.drugkind\")}\n                options={drugsEnumerators.drugkind.map((value) => ({\n                  value,\n                  label: i18n(`entities.drugs.enumerators.drugkind.${value}`),\n                }))}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"drugcategory\"\n                label={i18n(\"entities.drugs.fields.drugcategory\")}\n                options={drugsEnumerators.drugcategory.map((value) => ({\n                  value,\n                  label: i18n(\n                    `entities.drugs.enumerators.drugcategory.${value}`\n                  ),\n                }))}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"status\"\n                label={i18n(\"entities.drugs.fields.status\")}\n                options={drugsEnumerators.status.map((value) => ({\n                  value,\n                  label: i18n(`entities.drugs.enumerators.status.${value}`),\n                }))}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <FormButtons\n            style={{\n              flexDirection: modal ? \"row-reverse\" : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.save\")}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.reset\")}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n(\"common.cancel\")}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default DrugsForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/RadioFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListFilter.tsx",["2325"],"import {\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/medicaltest/list/medicaltestListActions';\nimport selectors from 'src/modules/medicaltest/list/medicaltestListSelectors';\nimport yupFilterSchemas from 'src/modules/shared/yup/yupFilterSchemas';\nimport FilterWrapper, {\n  FilterButtons,\n} from 'src/view/shared/styles/FilterWrapper';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport filterRenders from 'src/modules/shared/filter/filterRenders';\nimport FilterPreview from 'src/view/shared/filter/FilterPreview';\nimport FilterAccordion from 'src/view/shared/filter/FilterAccordion';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\nimport medicaltestEnumerators from 'src/modules/medicaltest/medicaltestEnumerators';\nimport DatePickerRangeFormItem from 'src/view/shared/form/items/DatePickerRangeFormItem';\n\nconst schema = yup.object().shape({\n  // medicaltestcode: yupFilterSchemas.string(\n  //   i18n(\"entities.medicaltest.fields.medicaltestcode\")\n  // ),\n  // description: yupFilterSchemas.string(\n  //   i18n(\"entities.medicaltest.fields.description\")\n  // ),\n  medicaltestkind: yupFilterSchemas.string(\n    i18n(\"entities.medicaltest.fields.medicaltestkind\")\n  ),\n  medicaltestcategory: yupFilterSchemas.enumerator(\n    i18n(\"entities.medicaltest.fields.medicaltestcategory\")\n  ),\n  // status: yupFilterSchemas.enumerator(\n  //   i18n(\"entities.medicaltest.fields.status\")\n  // ),\n});\n\nconst emptyValues = {\n  // medicaltestcode: null,\n  // description: null,\n  medicaltestkind: null,\n  medicaltestcategory: null,\n  // status: null,\n};\n\nconst previewRenders = {\n  // medicaltestcode: {\n  //   label: i18n(\"entities.medicaltest.fields.medicaltestcode\"),\n  //   render: filterRenders.generic(),\n  // },\n  // description: {\n  //   label: i18n(\"entities.medicaltest.fields.description\"),\n  //   render: filterRenders.generic(),\n  // },\n  medicaltestkind: {\n    label: i18n(\"entities.medicaltest.fields.medicaltestkind\"),\n    render: filterRenders.enumerator(\"entities.medicaltest.enumerators.medicaltestkind\"),\n  },\n  medicaltestcategory: {\n    label: i18n(\"entities.medicaltest.fields.medicaltestcategory\"),\n    render: filterRenders.enumerator(\n      \"entities.medicaltest.enumerators.medicaltestcategory\"\n    ),\n  },\n  // status: {\n  //   label: i18n(\"entities.medicaltest.fields.status\"),\n  //   render: filterRenders.enumerator(\"entities.medicaltest.enumerators.status\"),\n  // },\n};\n\nfunction MedicaltestListFilter(props) {\n  const rawFilter = useSelector(selectors.selectRawFilter);\n  const dispatch = useDispatch();\n  const [expanded, setExpanded] = useState(false);\n\n  const [initialValues] = useState(() => {\n    return {\n      ...emptyValues,\n      ...rawFilter,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: initialValues,\n    mode: 'all',\n  });\n\n  useEffect(() => {\n    dispatch(actions.doFetch(schema.cast(initialValues), rawFilter));\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  const onSubmit = (values) => {\n    const rawValues = form.getValues();\n    dispatch(actions.doFetch(values, rawValues));\n    setExpanded(false);\n  };\n\n  const onReset = () => {\n    Object.keys(emptyValues).forEach((key) => {\n      form.setValue(key, emptyValues[key]);\n    });\n    dispatch(actions.doReset());\n    setExpanded(false);\n  };\n\n  const onRemove = (key) => {\n    form.setValue(key, emptyValues[key]);\n    return form.handleSubmit(onSubmit)();\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterAccordion\n        expanded={expanded}\n        onChange={(event, isExpanded) => setExpanded(isExpanded)}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <FilterPreview\n            values={rawFilter}\n            renders={previewRenders}\n            expanded={expanded}\n            onRemove={onRemove}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <FormProvider {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)}>\n              <Grid container spacing={2}>\n                {/* <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"medicaltestcode\"\n                    label={i18n(\"entities.medicaltest.fields.medicaltestcode\")}\n                  />\n                </Grid> */}\n                {/* <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"description\"\n                    label={i18n(\"entities.medicaltest.fields.description\")}\n                  />\n                </Grid> */}\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"medicaltestkind\"\n                    label={i18n(\"entities.medicaltest.fields.medicaltestkind\")}\n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"medicaltestcategory\"\n                    label={i18n(\n                      \"entities.medicaltest.fields.medicaltestcategory\"\n                    )}\n                    options={medicaltestEnumerators.medicaltestcategory.map(\n                      (value) => ({\n                        value,\n                        label: i18n(\n                          `entities.medicaltest.enumerators.medicaltestcategory.${value}`\n                        ),\n                      })\n                    )}\n                  />\n                </Grid>\n                {/* <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"status\"\n                    label={i18n(\"entities.medicaltest.fields.status\")}\n                    options={medicaltestEnumerators.status.map((value) => ({\n                      value,\n                      label: i18n(\n                        `entities.medicaltest.enumerators.status.${value}`\n                      ),\n                    }))}\n                  />\n                </Grid> */}\n              </Grid>\n\n              <FilterButtons>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n                  startIcon={<SearchIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.search\")}\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  onClick={onReset}\n                  disabled={props.loading}\n                  startIcon={<UndoIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.reset\")}\n                </Button>\n              </FilterButtons>\n            </form>\n          </FormProvider>\n        </AccordionDetails>\n      </FilterAccordion>\n    </FilterWrapper>\n  );\n}\n\nexport default MedicaltestListFilter;","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/list/MedicaltestListTable.tsx",["2326","2327","2328","2329","2330"],"import { Box } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport medicaltestSelectors from 'src/modules/medicaltest/medicaltestSelectors';\nimport destroyActions from 'src/modules/medicaltest/destroy/medicaltestDestroyActions';\nimport destroySelectors from 'src/modules/medicaltest/destroy/medicaltestDestroySelectors';\nimport actions from 'src/modules/medicaltest/list/medicaltestListActions';\nimport selectors from 'src/modules/medicaltest/list/medicaltestListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\n\n\nfunction MedicaltestListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    medicaltestSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    medicaltestSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          overflowX: \"auto\",\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: \"5px\",\n            border: \"1px solid rgb(224, 224, 224)\",\n            borderCollapse: \"initial\",\n          }}\n        >\n          <TableHead>\n            <TableRow>\n              {/* <TableCellCustom padding=\"checkbox\">\n                {hasRows && (\n                  <Checkbox\n                    checked={Boolean(isAllSelected)}\n                    onChange={() => doToggleAllSelected()}\n                    size=\"small\"\n                  />\n                )}\n              </TableCellCustom> */}\n              <TableCellCustom size=\"md\" />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"medicaltestcode\"}\n                label={i18n(\"entities.medicaltest.fields.medicaltestcode\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"description\"}\n                label={i18n(\"entities.medicaltest.fields.description\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"medicaltestkind\"}\n                label={i18n(\"entities.medicaltest.fields.medicaltestkind\")}\n              />\n\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"medicaltestcategory\"}\n                label={i18n(\"entities.medicaltest.fields.medicaltestcategory\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"status\"}\n                label={i18n(\"entities.medicaltest.fields.status\")}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {i18n(\"table.noData\")}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  {/* <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedKeys.includes(row.id)}\n                      onChange={() => doToggleOneSelected(row.id)}\n                      size=\"small\"\n                    />\n                  </TableCell> */}\n                  <TableCell>\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\n                      <Tooltip title={i18n(\"common.view\")}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/medicaltest/${row.id}`}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </Tooltip>\n                      {hasPermissionToEdit && (\n                        <Tooltip title={i18n(\"common.edit\")}>\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/medicaltest/${row.id}/edit`}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip title={i18n(\"common.destroy\")}>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => doOpenDestroyConfirmModal(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{row.medicaltestcode}</TableCell>\n                  <TableCell>{row.description}</TableCell>\n                  <TableCell>\n                    {row.medicaltestkind\n                      ? i18n(\n                          `entities.medicaltest.enumerators.medicaltestkind.${row.medicaltestkind}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.medicaltestcategory\n                      ? i18n(\n                          `entities.medicaltest.enumerators.medicaltestcategory.${row.medicaltestcategory}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.status\n                      ? i18n(\n                          `entities.medicaltest.enumerators.status.${row.status}`\n                        )\n                      : null}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination onChange={doChangePagination} pagination={pagination} />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n(\"common.areYouSure\")}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n(\"common.yes\")}\n          cancelText={i18n(\"common.no\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MedicaltestListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/form/MedicaltestForm.tsx",["2331","2332"],"import { Button, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\nimport medicaltestEnumerators from 'src/modules/medicaltest/medicaltestEnumerators';\nimport moment from 'moment';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\n\nconst schema = yup.object().shape({\n  medicaltestcode: yupFormSchemas.string(\n    i18n(\"entities.medicaltest.fields.medicaltestcode\"),\n    {\n      required: true,\n      min: 2,\n      max: 255,\n    }\n  ),\n  description: yupFormSchemas.string(\n    i18n(\"entities.medicaltest.fields.description\"),\n    {\n      required: true,\n      min: 2,\n      max: 255,\n    }\n  ),\n  medicaltestkind: yupFormSchemas.string(\n    i18n(\"entities.medicaltest.fields.medicaltestkind\"),\n    {\n      options: medicaltestEnumerators.medicaltestkind,\n    }\n  ),\n  medicaltestcategory: yupFormSchemas.enumerator(\n    i18n(\"entities.medicaltest.fields.medicaltestcategory\"),\n    {\n      options: medicaltestEnumerators.medicaltestcategory,\n    }\n  ),\n  status: yupFormSchemas.enumerator(\n    i18n(\"entities.medicaltest.fields.status\"),\n    {\n      options: medicaltestEnumerators.status,\n    }\n  ),\n});\n\nfunction MedicaltestForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      medicaltestcode: record.medicaltestcode,\n      description: record.description,\n      medicaltestkind: record.medicaltestkind,\n      medicaltestcategory: record.medicaltestcategory,\n      status: record.status,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"medicaltestcode\"\n                label={i18n(\"entities.medicaltest.fields.medicaltestcode\")}\n                required={true}\n                autoFocus\n                placeholder={i18n(\"entities.medicaltest.placeholder\")}\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"description\"\n                label={i18n(\"entities.medicaltest.fields.description\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"medicaltestkind\"\n                label={i18n(\"entities.medicaltest.fields.medicaltestkind\")}\n                options={medicaltestEnumerators.medicaltestkind.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.medicaltest.enumerators.medicaltestkind.${value}`\n                    ),\n                  })\n                )}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"medicaltestcategory\"\n                label={i18n(\"entities.medicaltest.fields.medicaltestcategory\")}\n                options={medicaltestEnumerators.medicaltestcategory.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.medicaltest.enumerators.medicaltestcategory.${value}`\n                    ),\n                  })\n                )}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"status\"\n                label={i18n(\"entities.medicaltest.fields.status\")}\n                options={medicaltestEnumerators.status.map((value) => ({\n                  value,\n                  label: i18n(\n                    `entities.medicaltest.enumerators.status.${value}`\n                  ),\n                }))}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n\n          <FormButtons\n            style={{\n              flexDirection: modal ? \"row-reverse\" : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.save\")}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.reset\")}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n(\"common.cancel\")}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default MedicaltestForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/view/MedicaltestViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/medicaltest/view/MedicaltestView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/form/allergiesFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/form/allergiesFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterFields.tsx",["2333"],"import schemas from 'src/modules/shared/yup/yupImporterSchemas';\nimport { i18n } from 'src/i18n';import allergiesEnumerators from 'src/modules/allergies/allergiesEnumerators';\nimport moment from 'moment';\n\nexport default [\n  {\n    name: \"name\",\n    label: i18n(\"entities.allergies.fields.name\"),\n    schema: schemas.string(i18n(\"entities.allergies.fields.name\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"description\",\n    label: i18n(\"entities.allergies.fields.description\"),\n    schema: schemas.string(i18n(\"entities.allergies.fields.description\"), {\n      required: true,\n      min: 2,\n      max: 1000,\n    }),\n  },\n\n  {\n    name: \"status\",\n    label: i18n(\"entities.allergies.fields.status\"),\n    schema: schemas.enumerator(i18n(\"entities.allergies.fields.status\"), {\n      options: allergiesEnumerators.status,\n    }),\n  },\n];","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/view/allergiesViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/view/allergiesViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/destroy/allergiesDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/destroy/allergiesDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/form/drugsFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/form/drugsFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterFields.tsx",["2334"],"import schemas from 'src/modules/shared/yup/yupImporterSchemas';\nimport { i18n } from 'src/i18n';import drugsEnumerators from 'src/modules/drugs/drugsEnumerators';\nimport moment from 'moment';\n\nexport default [\n  {\n    name: \"drugcode\",\n    label: i18n(\"entities.drugs.fields.drugcode\"),\n    schema: schemas.string(i18n(\"entities.drugs.fields.drugcode\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"description\",\n    label: i18n(\"entities.drugs.fields.description\"),\n    schema: schemas.string(i18n(\"entities.drugs.fields.name\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n\n  {\n    name: \"status\",\n    label: i18n(\"entities.drugs.fields.status\"),\n    schema: schemas.enumerator(i18n(\"entities.drugs.fields.status\"), {\n      options: drugsEnumerators.status,\n    }),\n  },\n  {\n    name: \"drugkind\",\n    label: i18n(\"entities.drugs.fields.drugkind\"),\n    schema: schemas.enumerator(i18n(\"entities.drugs.fields.drugkind\"), {\n      options: drugsEnumerators.drugkind,\n    }),\n  },\n  {\n    name: \"drugcategory\",\n    label: i18n(\"entities.drugs.fields.drugcategory\"),\n    schema: schemas.enumerator(i18n(\"entities.drugs.fields.drugcategory\"), {\n      options: drugsEnumerators.drugcategory,\n    }),\n  },\n];","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/view/drugsViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/view/drugsViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/destroy/drugsDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/destroy/drugsDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/form/medicaltestFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/form/medicaltestFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/view/medicaltestViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/view/medicaltestViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/destroy/medicaltestDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/destroy/medicaltestDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesPermissions.tsx",["2335"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass AllergiesPermissions {\n  static get values() {\n    return {\n\n      allergiesImport: {\n        id: 'allergiesImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      allergiesCreate: {\n        id: 'allergiesCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      allergiesEdit: {\n        id: 'allergiesEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      allergiesDestroy: {\n        id: 'allergiesDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      allergiesRead: {\n        id: 'allergiesRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      allergiesAutocomplete: {\n        id: 'allergiesAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default AllergiesPermissions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/allergiesService.tsx",["2336"],"import authAxios from 'src/modules/shared/axios/authAxios';\nimport AuthCurrentTenant from 'src/modules/auth/authCurrentTenant';\n\nexport default class AllergiesService {\n  static async update(id, data) {\n    const body = {\n      id,\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.put(\n      `/tenant/${tenantId}/allergies/${id}`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async destroyAll(ids) {\n    const params = {\n      ids,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.delete(\n      `/tenant/${tenantId}/allergies/${ids}`,\n      // {\n      //   params,\n      // },\n    );\n\n    return response.data;\n  }\n\n  static async create(data) {\n    const body = {\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/allergies`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async import(values, importHash) {\n    const body = {\n      data: values,\n      importHash,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/allergies/import`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async find(id) {\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/allergies/${id}`,\n    );\n\n    return response.data;\n  }\n\n  static async list(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/allergies`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async listAutocomplete(query, limit) {\n    const params = {\n      query,\n      limit,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/allergies/autocomplete`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/importer/drugsImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/destroy/drugsDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/view/drugsViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/form/drugsFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/importer/allergiesImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/destroy/allergiesDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/view/allergiesViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/form/allergiesFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/importer/medicaltestImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/destroy/medicaltestDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/view/medicaltestViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/form/medicaltestFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/list/medicaltestListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestService.tsx",["2337"],"import authAxios from 'src/modules/shared/axios/authAxios';\nimport AuthCurrentTenant from 'src/modules/auth/authCurrentTenant';\n\nexport default class MedicaltestService {\n  static async update(id, data) {\n    const body = {\n      id,\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.put(\n      `/tenant/${tenantId}/medicaltest/${id}`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async destroyAll(ids) {\n    const params = {\n      ids,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.delete(\n      `/tenant/${tenantId}/medicaltest/${ids}`,\n      // {\n      //   params,\n      // },\n    );\n\n    return response.data;\n  }\n\n  static async create(data) {\n    const body = {\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/medicaltest`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async import(values, importHash) {\n    const body = {\n      data: values,\n      importHash,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/medicaltest/import`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async find(id) {\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/medicaltest/${id}`,\n    );\n\n    return response.data;\n  }\n\n  static async list(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/medicaltest`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async listAutocomplete(query, limit) {\n    const params = {\n      query,\n      limit,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/medicaltest/autocomplete`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/medicaltest/medicaltestPermissions.tsx",["2338"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass MedicaltestPermissions {\n  static get values() {\n    return {\n\n      medicaltestImport: {\n        id: 'medicaltestImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      medicaltestCreate: {\n        id: 'medicaltestCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      medicaltestEdit: {\n        id: 'medicaltestEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      medicaltestDestroy: {\n        id: 'medicaltestDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      medicaltestRead: {\n        id: 'medicaltestRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      medicaltestAutocomplete: {\n        id: 'medicaltestAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default MedicaltestPermissions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/list/drugsListExporterFields.tsx",["2339"],"import { i18n } from 'src/i18n';\nimport exporterRenders from 'src/modules/shared/exporter/exporterRenders';\n\nexport default [\n  {\n    name: \"id\",\n    label: i18n(\"entities.drugs.fields.id\"),\n  },\n  {\n    name: \"drugcode\",\n    label: i18n(\"entities.drugs.fields.drugcode\"),\n  },\n  {\n    name: \"description\",\n    label: i18n(\"entities.drugs.fields.description\"),\n  },\n  {\n    name: \"status\",\n    label: i18n(\"entities.drugs.fields.status\"),\n  },\n  {\n    name: \"drugkind\",\n    label: i18n(\"entities.drugs.fields.drugkind\"),\n  },\n  {\n    name: \"drugcategory\",\n    label: i18n(\"entities.drugs.fields.drugcategory\"),\n  },\n];\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/drugs/drugsPermissions.tsx",["2340"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass DrugsPermissions {\n  static get values() {\n    return {\n\n      drugsImport: {\n        id: 'drugsImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      drugsCreate: {\n        id: 'drugsCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      drugsEdit: {\n        id: 'drugsEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      drugsDestroy: {\n        id: 'drugsDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      drugsRead: {\n        id: 'drugsRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      drugsAutocomplete: {\n        id: 'drugsAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default DrugsPermissions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/allergies/list/allergiesListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/view/BranchViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/importer/BranchImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/form/BranchFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/form/BranchForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/form/branchFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/form/branchFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchService.tsx",["2341"],"import authAxios from 'src/modules/shared/axios/authAxios';\nimport AuthCurrentTenant from 'src/modules/auth/authCurrentTenant';\n\nexport default class BranchService {\n  static async update(id, data) {\n    const body = {\n      id,\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.put(\n      `/tenant/${tenantId}/branch/${id}`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async destroyAll(ids) {\n    const params = {\n      ids,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.delete(\n      `/tenant/${tenantId}/branch/${ids}`,\n      // {\n      //   params,\n      // },\n    );\n\n    return response.data;\n  }\n\n  static async create(data) {\n    const body = {\n      data,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/branch`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async import(values, importHash) {\n    const body = {\n      data: values,\n      importHash,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.post(\n      `/tenant/${tenantId}/branch/import`,\n      body,\n    );\n\n    return response.data;\n  }\n\n  static async find(id) {\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/branch/${id}`,\n    );\n\n    return response.data;\n  }\n\n  static async list(filter, orderBy, limit, offset) {\n    const params = {\n      filter,\n      orderBy,\n      limit,\n      offset,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/branch`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n\n  static async listAutocomplete(query, limit) {\n    const params = {\n      query,\n      limit,\n    };\n\n    const tenantId = AuthCurrentTenant.get();\n\n    const response = await authAxios.get(\n      `/tenant/${tenantId}/branch/autocomplete`,\n      {\n        params,\n      },\n    );\n\n    return response.data;\n  }\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListTable.tsx",["2342","2343","2344","2345","2346"],"import { Box } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport branchSelectors from 'src/modules/branch/branchSelectors';\nimport destroyActions from 'src/modules/branch/destroy/branchDestroyActions';\nimport destroySelectors from 'src/modules/branch/destroy/branchDestroySelectors';\nimport actions from 'src/modules/branch/list/branchListActions';\nimport selectors from 'src/modules/branch/list/branchListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\n\n\nfunction BranchListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    branchSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    branchSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          overflowX: \"auto\",\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: \"5px\",\n            border: \"1px solid rgb(224, 224, 224)\",\n            borderCollapse: \"initial\",\n          }}\n        >\n          <TableHead>\n            <TableRow>\n              {/* <TableCellCustom padding=\"checkbox\">\n                {hasRows && (\n                  <Checkbox\n                    checked={Boolean(isAllSelected)}\n                    onChange={() => doToggleAllSelected()}\n                    size=\"small\"\n                  />\n                )}\n              </TableCellCustom> */}\n              <TableCellCustom size=\"md\" />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"organizationid\"}\n                label={i18n(\"entities.branch.fields.organizationid\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"branchcode\"}\n                label={i18n(\"entities.branch.fields.branchcode\")}\n              />\n              {/* <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"branchkind\"}\n                label={i18n(\"entities.branch.fields.branchkind\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"branchcategory\"}\n                label={i18n(\"entities.branch.fields.branchcategory\")}\n              /> */}\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"description\"}\n                label={i18n(\"entities.branch.fields.description\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"status\"}\n                label={i18n(\"entities.branch.fields.status\")}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {i18n(\"table.noData\")}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  {/* <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedKeys.includes(row.id)}\n                      onChange={() => doToggleOneSelected(row.id)}\n                      size=\"small\"\n                    />\n                  </TableCell> */}\n                  <TableCell>\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\n                      <Tooltip title={i18n(\"common.view\")}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/branch/${row.id}`}\n                        >\n                          <VisibilityIcon />\n                        </IconButton>\n                      </Tooltip>\n                      {hasPermissionToEdit && (\n                        <Tooltip title={i18n(\"common.edit\")}>\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/branch/${row.id}/edit`}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip title={i18n(\"common.destroy\")}>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => doOpenDestroyConfirmModal(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{row.organizationid}</TableCell>\n                  <TableCell>{row.branchcode}</TableCell>\n                  {/* <TableCell>{row.branchkind}</TableCell>\n                  <TableCell>\n                    {row.branchcategory\n                      ? i18n(\n                          `entities.branch.enumerators.branchcategory.${row.branchcategory}`\n                        )\n                      : null}\n                  </TableCell> */}\n                  <TableCell>{row.description}</TableCell>\n                  <TableCell>\n                    {row.status\n                      ? i18n(`entities.branch.enumerators.status.${row.status}`)\n                      : null}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination onChange={doChangePagination} pagination={pagination} />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n(\"common.areYouSure\")}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n(\"common.yes\")}\n          cancelText={i18n(\"common.no\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default BranchListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/list/BranchListFilter.tsx",["2347","2348"],"import {\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/branch/list/branchListActions';\nimport selectors from 'src/modules/branch/list/branchListSelectors';\nimport yupFilterSchemas from 'src/modules/shared/yup/yupFilterSchemas';\nimport FilterWrapper, {\n  FilterButtons,\n} from 'src/view/shared/styles/FilterWrapper';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport filterRenders from 'src/modules/shared/filter/filterRenders';\nimport FilterPreview from 'src/view/shared/filter/FilterPreview';\nimport FilterAccordion from 'src/view/shared/filter/FilterAccordion';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\nimport branchEnumerators from 'src/modules/branch/branchEnumerators';\n// import DatePickerRangeFormItem from 'src/view/shared/form/items/DatePickerRangeFormItem';\n\nconst schema = yup.object().shape({\n  branchkind: yupFilterSchemas.string(\n    i18n(\"entities.branch.fields.branchkind\")\n  ),\n  branchcategory: yupFilterSchemas.string(\n    i18n(\"entities.branch.fields.branchcategory\")\n  ),\n\n  // birthdateRange: yupFilterSchemas.dateRange(\n  //   i18n('entities.branch.fields.birthdateRange'),\n  // ),\n  // gender: yupFilterSchemas.enumerator(\n  //   i18n('entities.branch.fields.gender'),\n  // ),\n});\n\nconst emptyValues = {\n  branchcode: null,\n  branchcategory: null,\n  // birthdateRange: [],\n  // gender: null,\n};\n\nconst previewRenders = {\n  branchkind: {\n    label: i18n(\"entities.branch.fields.branchcode\"),\n    render: filterRenders.generic(),\n  },\n  // branchcategory: {\n  //   label: i18n(\"entities.branch.fields.branchcategory\"),\n  //   render: filterRenders.enumerator(\n  //     \"entities.branch.enumerators.branchcategory\"\n  //   ),\n  // },\n  // birthdateRange: {\n  //   label: i18n('entities.branch.fields.birthdateRange'),\n  //   render: filterRenders.dateRange(),\n  // },\n  // gender: {\n  //   label: i18n('entities.branch.fields.gender'),\n  //   render: filterRenders.enumerator('entities.branch.enumerators.gender',),\n  // },\n};\n\nfunction BranchListFilter(props) {\n  const rawFilter = useSelector(selectors.selectRawFilter);\n  const dispatch = useDispatch();\n  const [expanded, setExpanded] = useState(false);\n\n  const [initialValues] = useState(() => {\n    return {\n      ...emptyValues,\n      ...rawFilter,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: initialValues,\n    mode: 'all',\n  });\n\n  useEffect(() => {\n    dispatch(actions.doFetch(schema.cast(initialValues), rawFilter));\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  const onSubmit = (values) => {\n    const rawValues = form.getValues();\n    dispatch(actions.doFetch(values, rawValues));\n    setExpanded(false);\n  };\n\n  const onReset = () => {\n    Object.keys(emptyValues).forEach((key) => {\n      form.setValue(key, emptyValues[key]);\n    });\n    dispatch(actions.doReset());\n    setExpanded(false);\n  };\n\n  const onRemove = (key) => {\n    form.setValue(key, emptyValues[key]);\n    return form.handleSubmit(onSubmit)();\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterAccordion\n        expanded={expanded}\n        onChange={(event, isExpanded) => setExpanded(isExpanded)}\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <FilterPreview\n            values={rawFilter}\n            renders={previewRenders}\n            expanded={expanded}\n            onRemove={onRemove}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <FormProvider {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"branchcode\"\n                    label={i18n(\"entities.branch.fields.branchcode\")}\n                  />\n                </Grid>\n                {/* <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"branchcategory\"\n                    label={i18n(\"entities.branch.fields.branchcategory\")}\n                    options={branchEnumerators.branchcategory.map((value) => ({\n                      value,\n                      label: i18n(\n                        `entities.branch.enumerators.branchcategory.${value}`\n                      ),\n                    }))}\n                  />\n                </Grid> */}\n                {/* <Grid item lg={6} xs={12}>\n                  <DatePickerRangeFormItem\n                    name=\"birthdateRange\"\n                    label={i18n('entities.branch.fields.birthdateRange')}    \n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <SelectFormItem\n                    name=\"gender\"\n                    label={i18n('entities.branch.fields.gender')}\n                    options={branchEnumerators.gender.map(\n                      (value) => ({\n                        value,\n                        label: i18n(\n                          `entities.branch.enumerators.gender.${value}`,\n                        ),\n                      }),\n                    )}\n                  />\n                </Grid> */}\n              </Grid>\n\n              <FilterButtons>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n                  startIcon={<SearchIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.search\")}\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  onClick={onReset}\n                  disabled={props.loading}\n                  startIcon={<UndoIcon />}\n                  size=\"small\"\n                >\n                  {i18n(\"common.reset\")}\n                </Button>\n              </FilterButtons>\n            </form>\n          </FormProvider>\n        </AccordionDetails>\n      </FilterAccordion>\n    </FilterWrapper>\n  );\n}\n\nexport default BranchListFilter;","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterFields.tsx",["2349"],"import schemas from 'src/modules/shared/yup/yupImporterSchemas';\nimport { i18n } from 'src/i18n';import branchEnumerators from 'src/modules/branch/branchEnumerators';\nimport moment from 'moment';\n\nexport default [\n  {\n    name: \"organizationid\",\n    label: i18n(\"entities.branch.fields.organizationid\"),\n    schema: schemas.string(i18n(\"entities.branch.fields.organizationid\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"branchcode\",\n    label: i18n(\"entities.branch.fields.branchcode\"),\n    schema: schemas.string(i18n(\"entities.branch.fields.branchcode\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"branchkind\",\n    label: i18n(\"entities.branch.fields.branchkind\"),\n    schema: schemas.string(i18n(\"entities.branch.fields.branchkind\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"branchcategory\",\n    label: i18n(\"entities.branch.fields.branchcategory\"),\n    schema: schemas.enumerator(i18n(\"entities.branch.fields.branchcategory\"), {\n      options: branchEnumerators.branchcategory,\n    }),\n  },\n  {\n    name: \"description\",\n    label: i18n(\"entities.branch.fields.description\"),\n    schema: schemas.string(i18n(\"entities.branch.fields.description\"), {\n      required: true,\n      min: 2,\n      max: 520,\n    }),\n  },\n\n  {\n    name: \"status\",\n    label: i18n(\"entities.branch.fields.status\"),\n    schema: schemas.enumerator(i18n(\"entities.branch.fields.status\"), {\n      options: branchEnumerators.status,\n    }),\n  },\n];","/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/view/BranchViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/branch/view/BranchView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/view/branchViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/view/branchViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/DatePickerFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/destroy/branchDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/destroy/branchDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchPermissions.tsx",["2350"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass BranchPermissions {\n  static get values() {\n    return {\n\n      branchImport: {\n        id: 'branchImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      branchCreate: {\n        id: 'branchCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      branchEdit: {\n        id: 'branchEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      branchDestroy: {\n        id: 'branchDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      branchRead: {\n        id: 'branchRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      branchAutocomplete: {\n        id: 'branchAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default BranchPermissions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListExporterFields.tsx",["2351"],"import { i18n } from 'src/i18n';\nimport exporterRenders from 'src/modules/shared/exporter/exporterRenders';\n\nexport default [\n  {\n    name: \"id\",\n    label: i18n(\"entities.branch.fields.id\"),\n  },\n  {\n    name: \"organizationid\",\n    label: i18n(\"entities.branch.fields.organizationid\"),\n  },\n  {\n    name: \"description\",\n    label: i18n(\"entities.branch.fields.description\"),\n  },\n  {\n    name: \"branchcode\",\n    label: i18n(\"entities.branch.fields.branchcode\"),\n  },\n  {\n    name: \"branchkind\",\n    label: i18n(\"entities.branch.fields.branchkind\"),\n  },\n  {\n    name: \"branchcategory\",\n    label: i18n(\"entities.branch.fields.branchcategory\"),\n  },\n  {\n    name: \"status\",\n    label: i18n(\"entities.branch.fields.status\"),\n  },\n];\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/branchReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/importer/branchImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/destroy/branchDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/view/branchViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/form/branchFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/branch/list/branchListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/list/PatientListPage.tsx",["2352"],"import React from 'react';\nimport { i18n } from 'src/i18n';\nimport PatientListFilter from 'src/view/patient/list/PatientListFilter';\nimport PatientListTable from 'src/view/patient/list/PatientListTable';\nimport PatientListToolbar from 'src/view/patient/list/PatientListToolbar';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport Breadcrumb from 'src/view/shared/Breadcrumb';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\n\nfunction PatientListPage(props) {\n  return (\n    <>\n      <Breadcrumb\n        items={[\n          [i18n('dashboard.menu'), '/'],\n          [i18n('entities.patient.menu')],\n        ]}\n      />\n\n      <ContentWrapper>\n        <PageTitle>\n          {i18n('entities.patient.list.title')}\n        </PageTitle>\n\n        <PatientListToolbar />\n        {/* <PatientListFilter /> */}\n        <PatientListTable />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default PatientListPage;\n\n\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/form/PatientFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/importer/PatientImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/view/PatientViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/PersonalvitalsListPage.tsx",["2353","2354","2355","2356","2357"],"import React from 'react';\nimport { i18n } from 'src/i18n';\nimport PersonalvitalsListFilter from 'src/view/personalvitals/list/PersonalvitalsListFilter';\nimport PersonalvitalsListTable from 'src/view/personalvitals/list/PersonalvitalsListTable';\nimport PersonalvitalsListToolbar from 'src/view/personalvitals/list/PersonalvitalsListToolbar';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport Breadcrumb from 'src/view/shared/Breadcrumb';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\n\nfunction PersonalvitalsListPage(props) {\n  return (\n    <>\n        <PersonalvitalsListToolbar />\n        {/* <PersonalvitalsListFilter /> */}\n        <PersonalvitalsListTable />\n    </>\n  );\n}\n\nexport default PersonalvitalsListPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/form/PersonalvitalsFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/importer/PersonalvitalsImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/view/PersonalvitalsViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/list/PatientListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/list/PatientListTable.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/view/PatientView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/form/PatientForm.tsx",["2358"],"import { Button, TextField, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/auth/authActions';\nimport userservice from 'src/modules/user/userService';\nimport selectors from 'src/modules/auth/authSelectors';\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ImagesFormItem from 'src/view/shared/form/items/ImagesFormItem';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport Storage from 'src/security/storage';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport patientEnumerators from 'src/modules/patient/patientEnumerators';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\n\nconst schema = yup.object().shape({\n  firstName: yupFormSchemas.string(\n    i18n('user.fields.firstName'),\n    {\n      max: 80,\n    },\n  ),\n  lastName: yupFormSchemas.string(\n    i18n('user.fields.lastName'),\n    {\n      max: 175,\n    },\n  ),\n  allergies: yupFormSchemas.string(\n    i18n('entities.profile.fields.allergies'),\n    {\n      max: 175,\n    },\n  ),\n  phoneNumber: yupFormSchemas.string(\n    i18n('user.fields.phoneNumber'),\n    {\n      matches: /^[0-9]/,\n      max: 24,\n    },\n  ),\n  avatars: yupFormSchemas.images(\n    i18n('user.fields.avatars'),\n    {\n      max: 1,\n    },\n  ),\n});\n\nfunction ProfileFormPage(props) {\n  const dispatch = useDispatch();\n\n  const saveLoading = useSelector(\n    selectors.selectLoadingUpdateProfile,\n  );\n\n  const currentUser = useSelector(\n    selectors.selectCurrentUser,\n  );\n  \n  const record = currentUser || {};\n  let initialValues = record;\n\n  const getAllData = async() => {\n    await userservice.getUserProfile(currentUser.id).then(res => {\n      initialValues = {\n        firstName: record.firstName,\n        lastName: record.lastName,\n        middleName: record.middleName,\n        phoneNumber: record.phoneNumber,\n        email: record.email,\n        avatars: record.avatars || [],                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          \n        allergies: res.allergies,\n        address: res.address,\n        stateoforigin: res.stateoforigin,\n        stateofresidence: res.stateofresidence,    \n      };\n\n    })\n    return  initialValues;\n  } \n  \n\n  getAllData().then(res => initialValues = res);\n \n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues,\n  });\n\n  const onSubmit = (values) => {\n    dispatch(actions.doUpdateProfile(values));\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n          <Grid item lg={4} md={6} sm={12} xs={12}>\n          <RadioFormItem\n                name=\"title\"\n                options={patientEnumerators.title.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.profile.enumerators.title.${value}`,\n                    ),\n                  }),\n                )}\n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n                 name=\"firstName\"\n                 label={i18n('user.fields.firstName')}\n                 autoComplete=\"firstName\"\n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n              name=\"lastName\"\n              label={i18n('user.fields.lastName')}\n              autoComplete=\"lastName\"\n                required={true}\n              autoFocus\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n                name=\"middleName\"\n                label={i18n('user.fields.middleName')}  \n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n    <TextField\n      id=\"email\"\n      name=\"email\"\n      label={i18n('user.fields.email')}\n      value={currentUser.email}\n      fullWidth\n      margin=\"normal\"\n      InputProps={{\n        readOnly: true,\n      }}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      variant=\"outlined\"\n      size=\"small\"\n    />\n  </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n                name=\"phoneNumber\"\n                label={i18n('user.fields.phoneNumber')}\n                autoComplete=\"phoneNumber\"\n                prefix=\"+\" \n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <DatePickerFormItem\n                   name=\"birthdate\"\n                   label={i18n('entities.profile.fields.birthdate')}\n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n            <InputFormItem\n                 name=\"allergies\"\n                 label={i18n('entities.profile.fields.allergies')}  \n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n            <InputFormItem\n                name=\"address\"\n                label={i18n('entities.profile.fields.address')}  \n                required={true}\n              />\n            </Grid>\n              <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n                name=\"stateoforigin\"\n                label={i18n('entities.profile.fields.stateoforigin')}  \n                required={true}\n              />\n              </Grid>\n              <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n                name=\"stateofresidence\"\n                label={i18n('entities.profile.fields.stateofresidence')} \n                required={true}\n              />\n               </Grid>\n              <Grid item lg={4} md={6} sm={12} xs={12}>\n              <InputFormItem\n               name=\"cityofresidence\"\n               label={i18n('entities.profile.fields.cityofresidence')}   \n               required={true}\n              />\n              </Grid>\n              <Grid item lg={4} md={6} sm={12} xs={12}>\n              <RadioFormItem\n                name=\"gender\"\n                label={i18n('entities.profile.fields.gender')}\n                options={patientEnumerators.gender.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.profile.enumerators.gender.${value}`,\n                    ),\n                  }),\n                )}\n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <RadioFormItem\n                name=\"bloodgroup\"\n                label={i18n('entities.profile.fields.bloodgroup')}\n                options={patientEnumerators.bloodgroup.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.profile.enumerators.bloodgroup.${value}`,\n                    ),\n                  }),\n                )}\n                required={true}\n              />\n            </Grid>\n            <Grid item lg={4} md={6} sm={12} xs={12}>\n              <RadioFormItem\n                name=\"genotype\"\n                label={i18n('entities.profile.fields.genotype')}\n                options={patientEnumerators.genotype.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.profile.enumerators.genotype.${value}`,\n                    ),\n                  }),\n                )}\n                required={true}\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n    <ImagesFormItem\n      name=\"avatars\"\n      label={i18n('user.fields.avatars')}\n      storage={Storage.values.userAvatarsProfiles}\n      max={1}\n    />\n  </Grid>\n          </Grid>\n\n          <FormButtons>\n  <Button\n    variant=\"contained\"\n    color=\"primary\"\n    disabled={saveLoading}\n    type=\"button\"\n    onClick={form.handleSubmit(onSubmit)}\n    startIcon={<SaveIcon />}\n    size=\"small\"\n  >\n    {i18n('common.save')}\n  </Button>\n\n  <Button\n    disabled={saveLoading}\n    onClick={onReset}\n    type=\"button\"\n    startIcon={<UndoIcon />}\n    size=\"small\"\n  >\n    {i18n('common.reset')}\n  </Button>\n\n  {props.onCancel ? (\n    <Button\n      disabled={saveLoading}\n      onClick={() => props.onCancel()}\n      type=\"button\"\n      startIcon={<CloseIcon />}\n      size=\"small\"\n    >\n      {i18n('common.cancel')}\n    </Button>\n  ) : null}\n</FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default ProfileFormPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/view/PatientViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/PersonalvitalsListTable.tsx",["2359","2360","2361","2362","2363","2364","2365","2366"],"import { Box, Modal } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport personalvitalsSelectors from 'src/modules/personalvitals/personalvitalsSelectors';\nimport destroyActions from 'src/modules/personalvitals/destroy/personalvitalsDestroyActions';\nimport destroySelectors from 'src/modules/personalvitals/destroy/personalvitalsDestroySelectors';\nimport actions from 'src/modules/personalvitals/list/personalvitalsListActions';\nimport selectors from 'src/modules/personalvitals/list/personalvitalsListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\nimport SimpleModal from './UpdateVitalModal';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\n\n\nfunction PersonalvitalsListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    personalvitalsSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    personalvitalsSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <SimpleModal/>\n      <br />\n      <Box\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          overflowX: \"auto\",\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: \"5px\",\n            border: \"1px solid rgb(224, 224, 224)\",\n            borderCollapse: \"initial\",\n          }}\n        >\n          <TableHead>\n            <TableRow>\n              <TableCellCustom>\n              </TableCellCustom>\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"date\"}\n                label={i18n(\"entities.personalvitals.fields.date\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"temperature\"}\n                label={i18n(\"entities.personalvitals.fields.temperature\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"weight\"}\n                label={i18n(\"entities.personalvitals.fields.weight\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"height\"}\n                label={i18n(\"entities.personalvitals.fields.height\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"bmi\"}\n                label={i18n(\"entities.personalvitals.fields.bmi\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"bloodpressure\"}\n                label={i18n(\"entities.personalvitals.fields.bloodpressure\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"pulse\"}\n                label={i18n(\"entities.personalvitals.fields.pulse\")}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {i18n(\"table.noData\")}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\n                      {hasPermissionToEdit && (\n                        <Tooltip title={i18n(\"common.edit\")}>\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/personalvitals/${row.id}/edit`}\n                          >\n                            <VisibilityIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip title={i18n(\"common.destroy\")}>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => doOpenDestroyConfirmModal(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{row.date}</TableCell>\n                  <TableCell>{row.temperature}</TableCell>\n                  <TableCell>{row.weight}</TableCell>\n                  <TableCell>{row.height}</TableCell>\n                  <TableCell>{row.bmi}</TableCell>\n                  <TableCell>{row.bloodpressure}</TableCell>\n                  <TableCell>{row.pulse}</TableCell>\n\n                  \n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination onChange={doChangePagination} pagination={pagination} />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n(\"common.areYouSure\")}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n(\"common.yes\")}\n          cancelText={i18n(\"common.no\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default PersonalvitalsListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/PersonalvitalsListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/view/PersonalvitalsViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/form/PersonalvitalsForm.tsx",["2367","2368","2369","2370","2371","2372"],"import { AppBar, Button, Grid, TextField, Toolbar, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport HeightIcon from '@material-ui/icons/Height';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\nimport personalvitalsEnumerators from 'src/modules/personalvitals/personalvitalsEnumerators';\nimport moment from 'moment';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\nimport { AccountCircle } from '@material-ui/icons';\n\nconst schema = yup.object().shape({\n  temperature: yupFormSchemas.string(i18n('entities.personalvitals.fields.temperature'), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  \n  weight: yupFormSchemas.string(i18n('entities.personalvitals.fields.weight'), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  height: yupFormSchemas.string(i18n('entities.personalvitals.fields.height'), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  bmi: yupFormSchemas.string(i18n('entities.personalvitals.fields.bmi'), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  bloodpressure: yupFormSchemas.string(i18n('entities.personalvitals.fields.bloodpressure'), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  pulse: yupFormSchemas.string(i18n('entities.personalvitals.fields.pulse'), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n});\n\nfunction PersonalvitalsForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      tempearture: record.temperature,\n      weight: record.weight,\n      height: record.height,\n      bmi: record.bmi,\n      bloodpressure: record.bloodpressure,\n      pulse: record.pulse,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  return (\n          \n    <FormWrapper>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Update Vitals\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <br />\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n          <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextField\n                  name=\"Temperature\"\n                  label={i18n(\"entities.personalvitals.fields.temperature\")}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <WhatshotIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextField\n                  name=\"Weight\"\n                  label={i18n(\"entities.personalvitals.fields.weight\")}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <FitnessCenterIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextField\n                  name=\"Height\"\n                  label={i18n(\"entities.personalvitals.fields.height\")}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <HeightIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextField\n                  name=\"BMI\"\n                  label={i18n(\"entities.personalvitals.fields.bmi\")}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AirlineSeatFlatIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextField\n                  name=\"Bloodpressure\"\n                  label={i18n(\"entities.personalvitals.fields.bloodpressure\")}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <DirectionsRunIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextField\n                  name=\"Pulse\"\n                  label={i18n(\"entities.personalvitals.fields.pulse\")}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <FavoriteIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n            </Grid>\n        </Grid>\n          <FormButtons\n            style={{\n              flexDirection: modal ? \"row-reverse\" : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.save\")}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.reset\")}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n(\"common.cancel\")}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default PersonalvitalsForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/view/PersonalvitalsView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/personalvitals/list/UpdateVitalModal.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/destroy/patientDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/view/patientViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/form/patientFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/view/personalvitalsViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/destroy/personalvitalsDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/form/personalvitalsFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/form/personalvitalsFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/destroy/personalvitalsDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/view/personalvitalsViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/form/patientFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/view/patientViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/destroy/patientDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListExporterFields.tsx",["2373"],"import { i18n } from 'src/i18n';\nimport exporterRenders from 'src/modules/shared/exporter/exporterRenders';\n\nexport default [\n  {\n    name: \"id\",\n    label: i18n(\"entities.personalvitals.fields.id\"),\n  },\n  {\n    name: \"temperature\",\n    label: i18n(\"entities.personalvitals.fields.temprature\"),\n  },\n  {\n    name: \"weight\",\n    label: i18n(\"entities.personalvitals.fields.weight\"),\n  },\n  {\n    name: \"height\",\n    label: i18n(\"entities.personalvitals.fields.height\"),\n  },\n  {\n    name: \"bloodpressure\",\n    label: i18n(\"entities.personalvitals.fields.bloodpressure\"),\n  }\n];\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterFields.tsx",["2374","2375"],"import schemas from 'src/modules/shared/yup/yupImporterSchemas';\nimport { i18n } from 'src/i18n';import personalvitalsEnumerators from 'src/modules/personalvitals/personalvitalsEnumerators';\nimport moment from 'moment';\n\nexport default [\n  {\n    name: \"temperture\",\n    label: i18n(\"entities.personalvitals.fields.temperature\"),\n    schema: schemas.string(i18n(\"entities.personalvitals.fields.temperature\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"height\",\n    label: i18n(\"entities.personalvitals.fields.height\"),\n    schema: schemas.string(i18n(\"entities.personalvitals.fields.height\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"weight\",\n    label: i18n(\"entities.personalvitals.fields.weight\"),\n    schema: schemas.string(i18n(\"entities.personalvitals.fields.weight\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  },\n  {\n    name: \"bloodpressure\",\n    label: i18n(\"entities.personalvitals.fields.bloodpressure\"),\n    schema: schemas.string(i18n(\"entities.personalvitals.fields.bloodpressure\"), {\n      required: true,\n      min: 2,\n      max: 255,\n    }),\n  }\n];","/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/importer/patientImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/importer/personalvitalsImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/list/patientListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/list/personalvitalsListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/form/patientFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/view/patientViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/view/personalvitalsViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/form/personalvitalsFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/destroy/personalvitalsDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/destroy/patientDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/patient/patientPermissions.tsx",["2376"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass PatientPermissions {\n  static get values() {\n    return {\n\n      patientImport: {\n        id: 'patientImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      patientCreate: {\n        id: 'patientCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      patientEdit: {\n        id: 'patientEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      patientDestroy: {\n        id: 'patientDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      patientRead: {\n        id: 'patientRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      patientAutocomplete: {\n        id: 'patientAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default PatientPermissions;\n\n\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/personalvitals/personalvitalsPermissions.tsx",["2377"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass PersonalvitalsPermissions {\n  static get values() {\n    return {\n\n      personalvitalsImport: {\n        id: 'personalvitalsImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      personalvitalsCreate: {\n        id: 'personalvitalsCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      personalvitalsEdit: {\n        id: 'personalvitalsEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      personalvitalsDestroy: {\n        id: 'personalvitalsDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      personalvitalsRead: {\n        id: 'personalvitalsRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      personalvitalsAutocomplete: {\n        id: 'personalvitalsAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default PersonalvitalsPermissions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/setup/SetupFormPage.tsx",["2378","2379","2380","2381","2382"],"import React, { useEffect } from 'react';\nimport { i18n } from 'src/i18n';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\nimport Spinner from '../shared/Spinner';\nimport actions from 'src/modules/settings/settingsActions';\nimport selectors from 'src/modules/settings/settingsSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport admin_menus from '../admin_menus';\n\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 345,\n//   },\n//   media: {\n//     height: 140,\n//   },\n\n// });\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 140,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  jss28: {\n    flexGrow: 1,\n    width: '100%',\n    cursor: 'pointer',\n    margin: '0 auto',\n    borderRadius: '16px',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n    ' &:hover': {\n      boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n    }\n  },\n  jss29: {\n    fontWeight: 'bold',\n  }\n}));\nconst SetupFormPage = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const currentTenant = useSelector(\n    authSelectors.selectCurrentTenant,\n  );\n  const currentUser = useSelector(\n    authSelectors.selectCurrentUser,\n  );\n\n  const permissionChecker = new PermissionChecker(\n    currentTenant,\n    currentUser,\n  );\n\n  const selectedKeys = () => {\n    const url = props.url;\n\n    const match = admin_menus.find((option) => {\n      if (option.exact) {\n        return url === option.path;\n      }\n\n      return (\n        url === option.path ||\n        url.startsWith(option.path + '/')\n      );\n    });\n\n    if (match) {\n      return [match.path];\n    }\n\n    return [];\n  };\n\n  const match = (permission) => {\n    return permissionChecker.match(permission);\n  };\n\n  const CustomRouterLink = (props) => (\n    <div\n      style={{\n        flexGrow: 1,\n      }}\n    >\n      <Link\n        style={{\n          textDecoration: 'none',\n          color: 'inherit',\n        }}\n        {...props}\n      />\n    </div>\n  );\n\n  const settings = useSelector(selectors.selectSettings);\n\n  useEffect(() => {\n    dispatch(actions.doInit());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n\n      <ContentWrapper>\n        <PageTitle>\n          {i18n('entities.setup.menu')}\n        </PageTitle>\n        <div className={classes.root}>\n\n          <Grid container spacing={3}>\n            {admin_menus\n              .filter((menu) => match(menu.permissionRequired))\n              .map((menu) => (\n                \n                <Grid item spacing={2} sm={6} md={4} xs={12} lg={3}>\n                  <Card className={classes.jss28}>\n                    <CardActionArea>\n                    <CustomRouterLink key={menu.path} to={menu.path}>\n                      <CardMedia\n                        className={classes.media}\n                        image={menu.avater}\n                        title=\"\"\n                      />\n                      <CardContent>\n                          <Button size=\"small\" color=\"primary\">\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.jss29}>\n                              {menu.label}\n                            </Typography>\n                          </Button>\n                       \n\n                      </CardContent>\n                      </CustomRouterLink>\n                    </CardActionArea>\n\n                  </Card>\n                </Grid>\n\n              ))}\n          </Grid>\n\n          \n        </div>\n\n\n      </ContentWrapper>\n    </>\n  );\n};\n\nexport default SetupFormPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/admin_menus.tsx",["2383","2384","2385"],"import Permissions from 'src/security/permissions';\nimport { i18n } from 'src/i18n';\nimport React from 'react';\nimport CreditCardOutlinedIcon from '@material-ui/icons/CreditCardOutlined';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport config from 'src/config';\n\nconst permissions = Permissions.values;\n\nexport default [\n\n  {\n    path: '/allergies',\n    exact: true,\n    icon: <HistoryIcon />,\n    label: \"Allergies\",\n    avater:\"https://www.publicradiotulsa.org/sites/kwgs/files/styles/x_large/public/201812/medical-tests.jpg\",\n    permissionRequired: permissions.userRead,\n  },\n\n  {\n    path: '/drugs',\n    exact: true,\n    icon: <DashboardIcon />,\n    label: \"Drugs\",\n    avater:\"https://cdn2.howtostartanllc.com/images/business-ideas/business-idea-images/Pharmacy.jpg\",\n    permissionRequired: permissions.userRead,\n  },\n  {\n    path: '/medical',\n    exact: true,\n    icon: <PersonIcon />,\n    label: \"Medical Test\",\n    avater:\"https://www.publicradiotulsa.org/sites/kwgs/files/styles/x_large/public/201812/medical-tests.jpg\",\n    permissionRequired: permissions.userRead,\n  },\n  {\n    path: '/branch',\n    exact: true,\n    icon: <SettingsIcon />,\n    label: \"branch\",\n    avater:\"https://images.pexels.com/photos/236380/pexels-photo-236380.jpeg\",\n    permissionRequired: permissions.userRead,\n  },\n  {\n    path: '/organization',\n    exact: true,\n    icon: <DashboardIcon />,\n    label: \"Organization\",\n    avater:\"https://img-portal-prod.s3.amazonaws.com/uploads/image/attachment/1985/healthcare.png\",\n    permissionRequired: permissions.userRead,\n  },\n\n  {\n    path: '/audit-logs',\n    icon: <HistoryIcon />,\n    label: i18n('auditLog.menu'),\n    avater:\"https://img-portal-prod.s3.amazonaws.com/uploads/image/attachment/1985/healthcare.png\",\n    permissionRequired: permissions.auditLogRead,\n  },\n  {\n    path: '/settings',\n    icon: <SettingsIcon />,\n    label: i18n('settings.menu'),\n    avater:\"https://img-portal-prod.s3.amazonaws.com/uploads/image/attachment/1985/healthcare.png\",\n    permissionRequired: permissions.auditLogRead,\n  },\n\n\n\n/* \n\n  {\n    path: '/order',\n    permissionRequired: permissions.orderRead,\n    icon: <ChevronRightIcon />,\n    label: i18n('entities.order.menu'),\n  }, */\n].filter(Boolean);\n\n///hospital,register patien,login audit,change audit report \n","/var/www/html/Office/react project/KokoFrontEnd/src/view/report.tsx",["2386","2387","2388","2389","2390","2391","2392"],"/var/www/html/Office/react project/KokoFrontEnd/src/view/patient/PatientReportFormPage.tsx",["2393","2394","2395","2396","2397","2398","2399"],"import React, { useEffect } from 'react';\nimport { i18n } from 'src/i18n';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\nimport Spinner from '../shared/Spinner';\nimport actions from 'src/modules/settings/settingsActions';\nimport selectors from 'src/modules/settings/settingsSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport patientreport from '../patientreport';\n\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 345,\n//   },\n//   media: {\n//     height: 140,\n//   },\n  \n// });\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 140,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  jss28: {\n    flexGrow: 1,\n    width: '100%',\n    cursor: 'pointer',\n    margin: '0 auto',\n    borderRadius: '16px',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n   ' &:hover':{  \n      boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n    }\n }\n}));\nconst PatientpatientreportFormPage = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const currentTenant = useSelector(\n    authSelectors.selectCurrentTenant,\n  );\n  const currentUser = useSelector(\n    authSelectors.selectCurrentUser,\n  );\n\n  const permissionChecker = new PermissionChecker(\n    currentTenant,\n    currentUser,\n  );\n\n  const selectedKeys = () => {\n    const url = props.url;\n\n    const match = patientreport.find((option) => {\n      if (option.exact) {\n        return url === option.path;\n      }\n\n      return (\n        url === option.path ||\n        url.startsWith(option.path + '/')\n      );\n    });\n\n    if (match) {\n      return [match.path];\n    }\n\n    return [];\n  };\n\n  const match = (permission) => {\n    return permissionChecker.match(permission);\n  };\n\n  const CustomRouterLink = (props) => (\n    <div\n      style={{\n        flexGrow: 1,\n      }}\n    >\n      <Link\n        style={{\n          textDecoration: 'none',\n          color: 'inherit',\n        }}\n        {...props}\n      />\n    </div>\n  );\n\n  const settings = useSelector(selectors.selectSettings);\n\n  useEffect(() => {\n    dispatch(actions.doInit());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n    \n      <ContentWrapper>\n        <PageTitle>\n          {/* {i18n('entities.setup.title')} */}\n        </PageTitle>\n        <div className={classes.root}>\n      <Grid container spacing={3}>\n      {patientreport\n        //   .filter((menu) => match(menu.permissionRequired))\n          .map((menu) => (\n        <Grid item xs={4} >\n              <Card className={classes.jss28}>\n            <CardActionArea>\n            <CardMedia\n          className={classes.media}\n          image={menu.avater}\n          title=\"Contemplative Reptile\"\n        />\n            <CardContent>\n            <CustomRouterLink key={menu.path} to={menu.path}>\n              <Button size=\"small\" color=\"primary\">\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {menu.label}\n                </Typography>  \n              </Button>\n              </CustomRouterLink>\n                \n              </CardContent>\n            </CardActionArea>\n       \n          </Card>\n        </Grid>\n    \n      ))}\n        </Grid>\n    </div>\n      \n    \n      </ContentWrapper>\n    </>\n  );\n};\n\nexport default PatientpatientreportFormPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/patientreport.tsx",["2400","2401","2402","2403","2404","2405","2406"],"import Permissions from 'src/security/permissions';\nimport { i18n } from 'src/i18n';\nimport React from 'react';\nimport CreditCardOutlinedIcon from '@material-ui/icons/CreditCardOutlined';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PersonIcon from '@material-ui/icons/Person';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport config from 'src/config';\n\nconst permissions = Permissions.values;\n\nexport default [\n\n  {\n    path: '/healthcare',\n    exact: true,\n    icon: <HistoryIcon />,\n    label: \"Health Care\",\n    avater:\"https://img-portal-prod.s3.amazonaws.com/uploads/image/attachment/1985/healthcare.png\",\n    permissionRequired: permissions.userRead,\n  },\n\n  \n\n\n\n/* \n\n  {\n    path: '/order',\n    permissionRequired: permissions.orderRead,\n    icon: <ChevronRightIcon />,\n    label: i18n('entities.order.menu'),\n  }, */\n].filter(Boolean);\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/report/ReportListPage.tsx",["2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419","2420","2421"],"import React, { useEffect } from 'react';\nimport { i18n } from 'src/i18n';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\nimport Spinner from '../shared/Spinner';\nimport actions from 'src/modules/settings/settingsActions';\nimport selectors from 'src/modules/settings/settingsSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport report from '../report';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ReportHistory from '../report/component/ReportHistory';\n\n// const useStyles = makeStyles({\n//   root: {\n//     maxWidth: 345,\n//   },\n//   media: {\n//     height: 140,\n//   },\n  \n// });\nconst useStyles = makeStyles((theme) => ({\n  \n \n}));\nconst ReportListPage = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(actions.doInit());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n    \n      <ContentWrapper>\n        <PageTitle>\n          {/* {i18n('entities.setup.title')} */}\n        </PageTitle>\n     \n        <Grid spacing={2} container>\n    \n    <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n      <Card  style={{\n        minHeight: \"500px\",\n      }}>\n          <CardHeader title=\"Reports\">\n    </CardHeader>\n          <CardContent>\n               <ReportHistory />\n          </CardContent>\n      </Card>\n           \n\n        </Grid>\n\n     \n</Grid>\n      \n    \n      </ContentWrapper>\n    </>\n  );\n};\n\nexport default ReportListPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/report/component/ReportHistory.tsx",["2422","2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport { Box, Avatar } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Roles from 'src/security/roles';\nimport UserStatusView from 'src/view/user/view/UserStatusView';\n\nfunction ConsultationHistory() {\n \n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n\n  const doChangeSort = () => {};\n  const sorter = () => {};\n  const loading = false;\n  \n\n  const hasRows = true;\n\n  // const loading = useSelector();\n//  const rows = useSelector(selectors.selectRows);\n  const rows = [{id:'0',doctor:'Kenneth',title:'/images/1.jpg', cdate: '2021-01-05'}];\n\n  return (\n    <>\n      <Box\n        style={{\n          display: 'block',\n          width: '100%',\n          overflowX: 'auto',\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: '5px',\n            border: '1px solid rgb(224, 224, 224)',\n            borderCollapse: 'initial',\n          }}\n        >\n          <TableHead>\n            <TableRow>\n                      \n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'title'}\n                label={'Title'}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'desc'}\n                label={'Description'}\n              />\n\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'cdate'}\n                label={'Date'}\n              />\n\n              <TableCellCustom size=\"md\"></TableCellCustom>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    {i18n('table.noData')}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{row.title}</TableCell>      \n                  <TableCell>{row.doctor}</TableCell>\n                  <TableCell>{row.cdate}</TableCell>\n       \n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Tooltip title={i18n('common.view')}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/report/${row.id}`}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </Tooltip>\n                     \n                   \n                     \n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n    \n\n      {/* {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n('common.areYouSure')}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => setRecordIdToDestroy(null)}\n          okText={i18n('common.yes')}\n          cancelText={i18n('common.no')}\n        />\n      )} */}\n    </>\n  );\n}\n\nexport default ConsultationHistory;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/report/ReportDetailsPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/dashboard/DashboardPage.tsx",["2434","2435","2436","2437","2438","2439"],"import { Grid, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { i18n } from 'src/i18n';\nimport TodaysFocus from 'src/view/dashboard/DashboardTodaysFocus';\nimport NotificationList from 'src/view/dashboard/Notifications';\nimport GroupsOnline from '../../online/groupsOnline';\nimport PatientForm from 'src/view/patient/form/PatientForm';\nimport PersonalvitalsListPage from 'src/view/personalvitals/list/PersonalvitalsListPage';\nimport AdminWelcome from '../../layout/AdminMainAlert';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'src/modules/auth/authSelectors';\nimport Sales from 'src/view/Admin/Components/Sales';\nimport TrafficByDevice from '../Components/TrafficByDevice';\n\nconst useStyles = makeStyles((theme) => ({\n  chartWrapper: {\n    border: '1px solid rgb(224, 224, 224)',\n    borderRadius: '5px',\n    backgroundColor: '#fff',\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n\n}));\n\nfunction DashboardPage(props) {\n  const classes = useStyles();\n  const userText = useSelector(\n    authSelectors.selectCurrentUserNameOrEmailPrefix,\n  );\n\n  \n\n  return (\n    <>\n       <div>\n        \n        <AdminWelcome UserName={userText} />\n        </div>\n      <div\n        style={{\n          padding: 0,\n        }}\n      >\n      <Grid spacing={2} container>\n         {/*  <Grid item xl={12} lg={12} md={6} sm={12} xs={12}>\n            <div className={classes.chartWrapper}>\n                Here we will put a Greeting and a dismissable alert\n            </div>\n          </Grid> */}\n          \n  \n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12}>\n  \n          <Sales />\n \n          </Grid>\n\n          <Grid item md={3} sm={12} xs={12}   >\n        \n          <TrafficByDevice sx={{ height: '100%' }} />\n        \n          </Grid>\n          <Grid item  md={3} sm={12} xs={12}  >\n                \n                <GroupsOnline subtitle={\"Notifications\"}/>\n\n          </Grid>\n  </Grid>\n\n        <p\n          style={{\n            marginTop: '16px',\n            width: '100%',\n            textAlign: 'center',\n            color: 'grey',\n          }}\n        >\n         {/*  {i18n('dashboard.message')} */}\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default DashboardPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/AdminMainAlert.tsx",["2440","2441","2442","2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454"],"import * as React from 'react';\nimport { Box, Card, CardActions, Button, Typography, ButtonGroup, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport WalletIcon from '@material-ui/icons/PersonAdd';\nimport { Link } from 'react-router-dom';\nimport publishArticleImage from './styles/welcome_illustration.svg';\nimport CardWithIcon from '../components/CardWithIcon';\nimport Budget from '../Admin/Components/Budget';\nimport PatientCount from '../Admin/Components/PatientCount';\nimport HospitalCount from '../Admin/Components/HospitalCount';\n\nconst Accordion = withStyles({\n    root: {\n      border: '1px solid rgba(0, 0, 0, .125)',\n      boxShadow: 'none',\n      '&:not(:last-child)': {\n        borderBottom: 0,\n      },\n      '&:before': {\n        display: 'none',\n      },\n      '&$expanded': {\n        margin: 'auto',\n      },\n    },\n    expanded: {},\n  })(MuiAccordion);\n  \n  const AccordionSummary = withStyles({\n    root: {\n      backgroundColor: 'rgba(0, 0, 0, .03)',\n      borderBottom: '1px solid rgba(0, 0, 0, .125)',\n      marginBottom: -1,\n      minHeight: 56,\n      '&$expanded': {\n        minHeight: 56,\n      },\n    },\n    content: {\n      '&$expanded': {\n        margin: '12px 0',\n      },\n    },\n    expanded: {},\n  })(MuiAccordionSummary);\n  \n  const AccordionDetails = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n    },\n  }))(MuiAccordionDetails);\n  \n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // background:\n        //     theme.palette.type === 'dark'\n        //         ? '#535353'\n        //         : `linear-gradient(to right, #2196f3 0%, #2196f3 35%), linear-gradient(to bottom, #2196f3 0%, #2196f3 50%), #6f4ceb`,\n\n        // color: '#fff',\n        padding: 20,\n        marginTop: theme.spacing(2),\n        marginBottom: '1em',\n    },\n    media: {\n        background: `url(${publishArticleImage}) top right / cover`,\n        marginLeft: 'auto',\n    },\n    actions: {\n        [theme.breakpoints.down('md')]: {\n            padding: 0,\n            flexWrap: 'wrap',\n            '& a': {\n                marginTop: '1em',\n                marginLeft: '0!important',\n                marginRight: '1em',\n            },\n        },\n    },\n    Buttons: {\n        background: \"linear-gradient(0.07turn, #3f87a6, #ebf8e1, #2796f3)\",\n        border: 0,\n        borderRadius: 16,\n        boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n        color: \"#000000\",\n        height: 48,\n        padding: \"0 30px\",\n        \"&:hover\": {\n          background: \"#e0e0e0;\"\n        }\n      },\n      text:{\n        color:\"#ffffff\"\n    },\n   \n}));\n// style={{color:\"#fff\"}}\nfunction AdminWelcome(props) {\n    const [expanded, setExpanded] = React.useState('panel1');\n  \n    const handleChange = (panel) => (event, newExpanded) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n    const classes = useStyles();\n    return (\n      \n        <Card className={classes.root}>\n          <Grid container alignItems=\"center\" spacing={1}>\n  \n          <Grid item spacing={1} sm={6} md={4} xs={12} lg={3}>\n\n          <Budget />\n          </Grid>\n          <Grid item spacing={1} sm={6} md={4} xs={12} lg={3}>\n\n<PatientCount />\n</Grid>\n<Grid item spacing={1} sm={6} md={4} xs={12} lg={3}>\n\n<HospitalCount />\n</Grid>\n          <Grid item spacing={2} sm={6} md={4} xs={12} lg={3}>\n          <Budget />\n          </Grid>  \n  </Grid>\n              {/* <Grid\n          container      \n        >\n         \n           \n          \n            <Budget />\n         \n            <Budget /> */}\n            \n    \n  \n        {/* </Grid> */}\n        \n\n        {/* <Accordion square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\n          <Typography>Collapsible Group Item #1</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\n            elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\n        <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\n          <Typography>Collapsible Group Item #2</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\n            elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\n        <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\n          <Typography>Collapsible Group Item #3</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n            sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\n            elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n */}\n\n            {/* <Box display={{  lg: \"none\" }}>\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom className={classes.text}>\n                        Welcome {props.UserName}\n                    </Typography>\n\n            </Box>\n            <Box display=\"flex\">\n                <Box flex=\"1\"  display={{ xs: \"none\", lg: \"block\" }}>\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                        Welcome  {props.UserName} ,\n                    </Typography>\n                    <Box maxWidth=\"40em\">\n                        <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                            Complete your sign up\n                        </Typography>\n                    </Box>\n                    <CardActions className={classes.actions}>\n                        <Button\n                        className={classes.Buttons}\n                            variant=\"contained\"\n                            startIcon={<HomeIcon />}\n                            component={Link}\n                            to=\"/profile\"\n                        >\n                            Complete Profile\n                        </Button>\n                        <Button\n                         className={classes.Buttons}\n                            variant=\"contained\"\n                            startIcon={<CodeIcon />}\n                            component={Link}\n                            to=\"/personalvitals\"\n                        >\n                            Update Vitals\n                        </Button>\n                    </CardActions>\n                </Box>\n\n                <Box\n                    display={{ xs: 'none', sm: 'none', md: 'block' }}\n                    width=\"22cm\"\n                    overflow=\"hidden\" \n                />\n\n                \n                <CardWithIcon icon={WalletIcon} to={\"userID\"}  title={\"Wallet\"}\n            subtitle={\"N5,000\"} />\n            \n        \n\n                        \n            </Box> */}\n        </Card>\n    );\n};\n\nAdminWelcome.propTypes ={\n    UserName: PropTypes.string\n};\n\nexport default AdminWelcome;\n\n\n// className={classes.media}","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/Budget.js",["2455","2456","2457","2458","2459","2460"],"import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  ListItemAvatar,\n  Typography,makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport red from '@material-ui/core/colors/red';\nimport logo from \"../../../assets/img/budget-finance-paper-icon-simple-style-vector-26801190.jpg\";\n\nconst useStyles = makeStyles({\n\n  jss28: {\n      flexGrow: 1,\n      width: '80%',\n      cursor: 'pointer',\n      // margin: '0 auto',\n      borderRadius: '16px',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n      transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n      ' &:hover': {\n          boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n      }\n  },\n\n\n});\n\n\n\nconst primary = '#f50057'; // \n\nconst Budget = (props) => { \n  \nconst classes = useStyles();  \n  return (\n  \n  <Card \n \n    sx={{ height: '2%' }}\n    {...props}\n    className={classes.jss28}\n  >\n  <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            BUDGET\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            24,000\n          </Typography>\n        </Grid>\n        <Grid item style={{ flex: 9 }}> \n        <ListItemAvatar>\n            <img\n              alt='hello'\n              src={logo}             \n              style={{\n                height: 80,\n                width: 80\n              }}\n            />\n          </ListItemAvatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n)};\n\nexport default Budget;\n",["2461","2462"],"/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/PatientCount.js",["2463","2464","2465","2466","2467","2468"],"import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  ListItemAvatar,\n  Typography,makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport red from '@material-ui/core/colors/red';\nimport logo from \"../../../assets/img/patient-icon-medical-health-care-260nw-554075098.jpg\";\n\nconst useStyles = makeStyles({\n\n  jss28: {\n      flexGrow: 1,\n      width: '80%',\n      cursor: 'pointer',\n      // margin: '0 auto',\n      borderRadius: '16px',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n      transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n      ' &:hover': {\n          boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n      }\n  },\n\n\n});\n\n\n\nconst primary = '#f50057'; // \n\nconst PatientCount = (props) => { \n  \nconst classes = useStyles();  \n  return (\n  \n  <Card \n \n    sx={{ height: '2%' }}\n    {...props}\n    className={classes.jss28}\n  >\n  <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            Patient\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            4,000\n          </Typography>\n        </Grid>\n        <Grid item>\n        <ListItemAvatar>\n            <img\n              alt='hello'\n              src={logo}             \n              style={{\n                height: 80,\n                width: 80\n              }}\n            />\n          </ListItemAvatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n)};\n\nexport default PatientCount;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/HospitalCount.js",["2469","2470","2471","2472","2473","2474"],"import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  ListItemAvatar,\n  Typography,makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport red from '@material-ui/core/colors/red';\nimport logo from \"../../../assets/img/images.png\";\n\n\nconst useStyles = makeStyles({\n\n  jss28: {\n      flexGrow: 1,\n      width: '80%',\n      cursor: 'pointer',\n      // margin: '0 auto',\n      borderRadius: '16px',\n      boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n      transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n      ' &:hover': {\n          boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n      }\n  },\n\n\n});\n\n\n\nconst primary = '#f50057'; // \n\nconst HospitalCount = (props) => { \n  \nconst classes = useStyles();  \n  return (\n  \n  <Card \n \n    sx={{ height: '2%' }}\n    {...props}\n    className={classes.jss28}\n  >\n  <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            Hospital\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            2,000\n          </Typography>\n        </Grid>\n        <Grid item style={{ flex: 9 }}> \n        <ListItemAvatar>\n            <img\n              alt='hello'\n              src={logo}             \n              style={{\n                height: 80,\n                width: 80\n              }}\n            />\n          </ListItemAvatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n)};\n\nexport default HospitalCount;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/Sales.js",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/Admin/Components/TrafficByDevice.js",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListPage.tsx",["2475"],"import React from 'react';\nimport { i18n } from 'src/i18n';\nimport AppointmentListFilter from 'src/view/appointment/list/AppointmentListFilter';\nimport AppointmentListTable from 'src/view/appointment/list/AppointmentListTable';\nimport AppointmentListToolbar from 'src/view/appointment/list/AppointmentListToolbar';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport Breadcrumb from 'src/view/shared/Breadcrumb';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\n\nfunction AppointmentListPage(props) {\n  return (\n    <>\n      <Breadcrumb\n        items={[\n          [i18n('dashboard.menu'), '/'],\n          [i18n('entities.appointment.menu')],\n        ]}\n      />\n\n      <ContentWrapper>\n        <PageTitle>\n          {i18n('entities.appointment.list.title')}\n        </PageTitle>\n\n        <AppointmentListToolbar />\n        {/* <AppointmentListFilter /> */}\n        <AppointmentListTable />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default AppointmentListPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/form/AppointmentFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/importer/AppointmentImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/view/AppointmentViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListTable.tsx",["2476"],"import { Box, Button } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport appointmentSelectors from 'src/modules/appointment/appointmentSelectors';\nimport destroyActions from 'src/modules/appointment/destroy/appointmentDestroyActions';\nimport destroySelectors from 'src/modules/appointment/destroy/appointmentDestroySelectors';\nimport actions from 'src/modules/appointment/list/appointmentListActions';\nimport selectors from 'src/modules/appointment/list/appointmentListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\n\n\nfunction AppointmentListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    appointmentSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    appointmentSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  const button = (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      type=\"button\"   \n      size=\"small\"\n    >\n    Create Appointments\n    </Button>\n  );\n  \n\n  return (\n    <>\n      <Box\n        style={{\n          display: 'block',\n          width: '100%',\n          overflowX: 'auto',\n        }}\n      >\n          <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/appointment/new\"\n          size=\"small\"\n        >\n          Create Appointments\n        </Button>\n        <Table\n          style={{\n            borderRadius: '5px',\n            border: '1px solid rgb(224, 224, 224)',\n            borderCollapse: 'initial',\n          }}\n        >\n          \n          <TableHead>\n            <TableRow>\n              <TableCellCustom padding=\"checkbox\">\n                {hasRows && (\n                  <Checkbox\n                    checked={Boolean(isAllSelected)}\n                    onChange={() => doToggleAllSelected()}\n                    size=\"small\"\n                  />\n                )}\n              </TableCellCustom>\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'name'}\n                label={i18n(\n                  'entities.appointment.fields.name',\n                )}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'birthdate'}\n                label={i18n(\n                  'entities.appointment.fields.date',\n                )}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'gender'}\n                label={i18n(\n                  'entities.appointment.fields.time',\n                )}\n              />   \n                    <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'birthdate'}\n                label={i18n(\n                  'entities.appointment.fields.hospital',\n                )}\n              />   \n                    <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'birthdate'}\n                label={i18n(\n                  'entities.appointment.fields.comments',\n                )}\n              />         \n              <TableCellCustom size=\"md\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    {i18n('table.noData')}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedKeys.includes(\n                        row.id,\n                      )}\n                      onChange={() =>\n                        doToggleOneSelected(row.id)\n                      }\n                      size=\"small\"\n                    />\n                  </TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.date}</TableCell>\n                <TableCell>{row.time}</TableCell>\n                <TableCell>{row.hospital}</TableCell>\n                <TableCell>{row.comment}</TableCell>                 \n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Tooltip title={i18n('common.view')}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/appointment/${row.id}`}\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </Tooltip>\n                      {hasPermissionToEdit && (\n                        <Tooltip\n                          title={i18n('common.edit')}\n                        >\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/appointment/${row.id}/edit`}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip\n                          title={i18n('common.destroy')}\n                        >\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() =>\n                              doOpenDestroyConfirmModal(\n                                row.id,\n                              )\n                            }\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination\n        onChange={doChangePagination}\n        pagination={pagination}\n      />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n('common.areYouSure')}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n('common.yes')}\n          cancelText={i18n('common.no')}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AppointmentListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/list/AppointmentListFilter.tsx",["2477","2478","2479"],"import {\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Grid,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useEffect, useState } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/appointment/list/appointmentListActions';\nimport selectors from 'src/modules/appointment/list/appointmentListSelectors';\nimport yupFilterSchemas from 'src/modules/shared/yup/yupFilterSchemas';\nimport FilterWrapper, {\n  FilterButtons,\n} from 'src/view/shared/styles/FilterWrapper';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport filterRenders from 'src/modules/shared/filter/filterRenders';\nimport FilterPreview from 'src/view/shared/filter/FilterPreview';\nimport FilterAccordion from 'src/view/shared/filter/FilterAccordion';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\nimport appointmentEnumerators from 'src/modules/appointment/appointmentEnumerators';\nimport DatePickerRangeFormItem from 'src/view/shared/form/items/DatePickerRangeFormItem';\n\nconst schema = yup.object().shape({\n  name: yupFilterSchemas.string(\n    i18n('entities.appointment.fields.name'),\n  ),\n  hospital: yupFilterSchemas.dateRange(\n    i18n('entities.appointment.fields.hospital'),\n  )\n});\n\nconst emptyValues = {\n  name: null,\n  birthdateRange: [],\n  gender: null,\n}\n\nconst previewRenders = {\n  name: {\n    label: i18n('entities.appointment.fields.name'),\n    render: filterRenders.generic(),\n  },\n  hospital: {\n    label: i18n('entities.appointment.fields.hospital'),\n    render: filterRenders.generic(),\n  },\n\n}\n\nfunction AppointmentListFilter(props) {\n  const rawFilter = useSelector(selectors.selectRawFilter);\n  const dispatch = useDispatch();\n  const [expanded, setExpanded] = useState(false);\n\n  const [initialValues] = useState(() => {\n    return {\n      ...emptyValues,\n      ...rawFilter,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: initialValues,\n    mode: 'all',\n  });\n\n  useEffect(() => {\n    dispatch(actions.doFetch(schema.cast(initialValues), rawFilter));\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  const onSubmit = (values) => {\n    const rawValues = form.getValues();\n    dispatch(actions.doFetch(values, rawValues));\n    setExpanded(false);\n  };\n\n  const onReset = () => {\n    Object.keys(emptyValues).forEach((key) => {\n      form.setValue(key, emptyValues[key]);\n    });\n    dispatch(actions.doReset());\n    setExpanded(false);\n  };\n\n  const onRemove = (key) => {\n    form.setValue(key, emptyValues[key]);\n    return form.handleSubmit(onSubmit)();\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterAccordion\n        expanded={expanded}\n        onChange={(event, isExpanded) =>\n          setExpanded(isExpanded)\n        }\n      >\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <FilterPreview\n            values={rawFilter}\n            renders={previewRenders}\n            expanded={expanded}\n            onRemove={onRemove}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <FormProvider {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)}>\n              <Grid container spacing={2}>\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"name\"\n                    label={i18n('entities.appointment.fields.name')}      \n                  />\n                </Grid>\n                <Grid item lg={6} xs={12}>\n                  <InputFormItem\n                    name=\"hospital\"\n                    label={i18n('entities.appointment.fields.hospital')}      \n                  />\n                </Grid>\n                          </Grid>\n\n              <FilterButtons>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n                  startIcon={<SearchIcon />}\n                  size=\"small\"\n                >\n                  {i18n('common.search')}\n                </Button>\n\n                <Button\n                  type=\"button\"\n                  onClick={onReset}\n                  disabled={props.loading}\n                  startIcon={<UndoIcon />}\n                  size=\"small\"\n                >\n                  {i18n('common.reset')}\n                </Button>\n              </FilterButtons>\n            </form>\n          </FormProvider>\n        </AccordionDetails>\n      </FilterAccordion>\n    </FilterWrapper>\n  );\n}\n\nexport default AppointmentListFilter;",["2480","2481"],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/form/AppointmentForm.tsx",["2482","2483"],"import { Button, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useEffect, useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\nimport appointmentEnumerators from 'src/modules/appointment/appointmentEnumerators';\nimport moment from 'moment';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\nimport AppointmentCalendarPage from './AppointmentCalendarPage';\nimport swal from 'sweetalert';\n\n\n\nconst schema = yup.object().shape({\n  name: yupFormSchemas.string(\n    i18n('entities.appointment.fields.name'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  birthdate: yupFormSchemas.date(\n    i18n('entities.appointment.fields.birthdate'),\n    {},\n  ),\n  // gender: yupFormSchemas.enumerator(\n  //   i18n('entities.appointment.fields.gender'),\n  //   {\n  //     // \"options\": appointmentEnumerators.gender\n  //   },\n  // ),\n});\n\nfunction AppointmentForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      name: record.name,\n      birthdate: record.birthdate ? moment(record.birthdate, 'YYYY-MM-DD') : null,\n      gender: record.gender,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  // const swal = {\n  //   swal({\n  //     title: \"Good job!\",\n  //     text: \"You clicked the button!\",\n  //     icon: \"success\",\n  //     button: \"Aww yiss!\",\n  //   });\n  // }\n  useEffect(() => {\n    swal({\n      text: \"Provider Not Available ....\",\n      // content: el,\n      buttons: {\n        confirm: {\n          /*\n           * We need to initialize the value of the button to\n           * an empty string instead of \"true\":\n           */\n          value: \"DEFAULT_INPUT_TEXT\",\n        },\n      },\n    })\n \n  }, [])\n\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"name\"\n                label={i18n('entities.appointment.fields.name')}  \n                required={true}\n              autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <DatePickerFormItem\n                name=\"birthdate\"\n                label={i18n('entities.appointment.fields.birthdate')}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              {/* <RadioFormItem\n                name=\"gender\"\n                label={i18n('entities.appointment.fields.gender')}\n                options={appointmentEnumerators.gender.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.appointment.enumerators.gender.${value}`,\n                    ),\n                  }),\n                )}\n                required={false}\n              /> */}\n            </Grid>\n          </Grid>\n          <FormButtons\n            style={{\n              flexDirection: modal\n                ? 'row-reverse'\n                : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n('common.save')}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n('common.reset')}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n('common.cancel')}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n     \n        <AppointmentCalendarPage /> \n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default AppointmentForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/view/AppointmentView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/view/AppointmentViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/form/appointmentFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/form/appointmentFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/view/appointmentViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/view/appointmentViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/destroy/appointmentDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/destroy/appointmentDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentPermissions.tsx",["2484"],"import Roles from 'src/security/roles';\nimport Plans from 'src/security/plans';\nimport Storage from 'src/security/storage';\n\nconst storage = Storage.values;\nconst roles = Roles.values;\nconst plans = Plans.values;\n\nclass AppointmentPermissions {\n  static get values() {\n    return {\n\n      appointmentImport: {\n        id: 'appointmentImport',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      appointmentCreate: {\n        id: 'appointmentCreate',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      appointmentEdit: {\n        id: 'appointmentEdit',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      appointmentDestroy: {\n        id: 'appointmentDestroy',\n        allowedRoles: [roles.admin],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n        allowedStorage: [\n\n        ],\n      },\n      appointmentRead: {\n        id: 'appointmentRead',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n      appointmentAutocomplete: {\n        id: 'appointmentAutocomplete',\n        allowedRoles: [roles.admin, roles.custom],\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\n      },\n\n    };\n  }\n\n  static get asArray() {\n    return Object.keys(this.values).map((value) => {\n      return this.values[value];\n    });\n  }\n}\n\nexport default AppointmentPermissions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/view/appointmentViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/destroy/appointmentDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/importer/appointmentImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/form/appointmentFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/appointment/form/AppointmentCalendarPage.js",["2485","2486","2487","2488"],"import * as React from \"react\";\r\nimport {\r\n  ScheduleComponent,\r\n  Day,\r\n  Week,\r\n  WorkWeek,\r\n  Month,\r\n  Agenda,\r\n  Inject,\r\n} from \"@syncfusion/ej2-react-schedule\";\r\nimport { useState, useEffect } from \"react\";\r\nimport './App.css';\r\n\r\n\r\nconst AppointmentCalendarPage = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      Id: 1,\r\n      Subject: \"Explosion of Betelgeuse Star\",\r\n      StartTime: new Date(2018, 1, 15, 9, 30),\r\n      EndTime: new Date(2018, 1, 15, 11, 0),\r\n    },\r\n    {\r\n      Id: 2,\r\n      Subject: \"Thule Air Crash Report\",\r\n      StartTime: new Date(2018, 1, 12, 12, 0),\r\n      EndTime: new Date(2018, 1, 12, 14, 0),\r\n    },\r\n    {\r\n      Id: 3,\r\n      Subject: \"Blue Moon Eclipse\",\r\n      StartTime: new Date(2018, 1, 13, 9, 30),\r\n      EndTime: new Date(2018, 1, 13, 11, 0),\r\n    },\r\n    {\r\n      Id: 4,\r\n      Subject: \"Meteor Showers in 2018\",\r\n      StartTime: new Date(2018, 1, 14, 13, 0),\r\n      EndTime: new Date(2018, 1, 14, 14, 30),\r\n    },\r\n  ]);\r\n\r\n  const [values, setValues] = useState([]);\r\n  // const abortCont = new AbortController();\r\n  // useEffect(() => {\r\n  //   fetch(\"http://localhost:800/data\", {signal: abortCont.signal})\r\n  //     .then((res) => {\r\n  //       return res.json();\r\n  //     })\r\n  //     .then((result) => {\r\n  //       let data = result.map((item) => {\r\n  //         return(\r\n  //           {\r\n  //             Id: item.Id,\r\n  //             Subject: item.Subject,\r\n  //             StartTime: new Date(item.StartTime),\r\n  //             EndTime: new Date(item.EndTime),\r\n  //             // IsAllDay: item.IsAllDay,\r\n  //             // RecurrenceRule: item.RecurrenceRule\r\n  //           }\r\n  //         )})\r\n  //         setValues(data)\r\n  //     });\r\n\r\n  //     // return abortCont.abort()\r\n  // }, []);\r\n\r\n  console.log(values)\r\n  return (\r\n   \r\n    <ScheduleComponent height=\"550px\" selectedDate={new Date(2018, 1, 15)} eventSettings={{ dataSource: values }}\r\n    >\r\n      {console.log(values)}\r\n      <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n    </ScheduleComponent>\r\n  );\r\n};\r\n\r\nexport default AppointmentCalendarPage;\r\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/appointmentService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/appointment/list/appointmentListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/FamilyInfoForm.tsx",["2489","2490","2491"],"import { Button, Grid, IconButton, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Card from '@material-ui/core/Card';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport userservice from 'src/modules/user/userService';\nimport selectors from 'src/modules/auth/authSelectors';\nimport actions from 'src/modules/auth/authActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst schema = yup.object().shape({\n  \n  nok: yupFormSchemas.string(\n    i18n('entities.profile.fields.nok'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  noknumber: yupFormSchemas.string(\n    i18n('entities.profile.fields.noknumber'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  nokemail: yupFormSchemas.string(\n    i18n('entities.profile.fields.nokemail'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  nokaddress: yupFormSchemas.string(\n    i18n('entities.profile.fields.nokaddress'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n});\n\nfunction FamilyInfoForm(props) {\n  const dispatch = useDispatch();\n\n  const saveLoading = useSelector(\n    selectors.selectLoadingUpdateProfile,\n  );\n\n  const currentUser = useSelector(\n    selectors.selectCurrentUser,\n  );\n\n  // const record = currentUser || {};\n  let initialValues ;\n\n  const getAllData = async() => {\n    await userservice.getUserProfile(currentUser.id).then(res => {\n      initialValues = {\n        nok: res.nok,\n        noknumber: res.noknumber,\n        nokaddress: res.nokaddress,\n        nokemail: res.nokemailn            };\n\n    })\n    console.log(initialValues)\n    return  initialValues;\n  } \n  \n\n  getAllData().then(res => initialValues = res);\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues ,\n  });\n\n  const onSubmit = (values) => {\n    dispatch(actions.doUpdateProfile(values));\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n\n  const classes = useStyles();\n\n  return (\n    <div>\n        <FormWrapper>\n        <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n       \n        <Card elevation={10} style={{\n          padding: 20,\n          marginTop: 5,\n        }}>\n        <h2>Family Information</h2>\n            <Grid spacing={2} container>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"nok\"\n                    label={i18n('entities.profile.fields.nok')}  \n                    required={true}\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"noknumber\"\n                    label={i18n('entities.profile.fields.noknumber')}  \n                    required={true}\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"nokemail\"\n                    label={i18n('entities.profile.fields.nokemail')}  \n                    required={true}\n                  />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"nokaddress\"\n                    label={i18n('entities.profile.fields.nokaddress')}  \n                    required={true}\n                  />\n                </Grid>\n          </Grid>\n        </Card>\n            \n        <FormButtons>\n  <Button\n    variant=\"contained\"\n    color=\"primary\"\n    disabled={saveLoading}\n    type=\"button\"\n    onClick={form.handleSubmit(onSubmit)}\n    startIcon={<SaveIcon />}\n    size=\"small\"\n  >\n    {i18n('common.save')}\n  </Button>\n\n  <Button\n    disabled={saveLoading}\n    onClick={onReset}\n    type=\"button\"\n    startIcon={<UndoIcon />}\n    size=\"small\"\n  >\n    {i18n('common.reset')}\n  </Button>\n\n  {props.onCancel ? (\n    <Button\n      disabled={saveLoading}\n      onClick={() => props.onCancel()}\n      type=\"button\"\n      startIcon={<CloseIcon />}\n      size=\"small\"\n    >\n      {i18n('common.cancel')}\n    </Button>\n  ) : null}\n</FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n    </div>\n  );\n}\n\nexport default FamilyInfoForm;\n\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/OrganDonor.tsx",["2492","2493","2494","2495","2496"],"import { Button, Grid, IconButton, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Card from '@material-ui/core/Card';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\nimport patientEnumerators from 'src/modules/patient/patientEnumerators';\nimport selectors from 'src/modules/auth/authSelectors';\nimport actions from 'src/modules/auth/authActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ImagesFormItem from '../shared/form/items/ImagesFormItem';\nimport Storage from 'src/security/storage';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst schema = yup.object().shape({\n    donor: yupFormSchemas.enumerator(\n    i18n('entities.patient.fields.donor'),\n    {\n      \"options\": patientEnumerators.donor\n    },\n  ),\n  avatars: yupFormSchemas.images(\n    i18n('entities.profile.fields.avatars'),\n    {\n      max: 1,\n    },\n  ),\n  // title: yupFormSchemas.enumerator(\n  //   i18n('entities.patient.fields.title'),\n  //   {\n  //     \"options\": patientEnumerators.title\n  //   },\n  // ),\n  // LastName: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.lastname'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // FirstName: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.firstname'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // MiddleName: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.middlename'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Email: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.email'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Phonenumber: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.phonenumber'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Address: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.address'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Stateoforigin: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.stateoforigin'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Allergies: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.middlename'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Cityofresidence: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.cityofresidence'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // Stateofresidence: yupFormSchemas.string(\n  //   i18n('entities.patient.fields.stateofresidence'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // birthdate: yupFormSchemas.date(\n  //   i18n('entities.patient.fields.birthdate'),\n  //   {},\n  // ),\n  // gender: yupFormSchemas.enumerator(\n  //   i18n('entities.patient.fields.gender'),\n  //   {\n  //     \"options\": patientEnumerators.gender\n  //   },\n  // ),\n  // bloodgroup: yupFormSchemas.enumerator(\n  //   i18n('entities.patient.fields.bloodgroup'),\n  //   {\n  //     \"options\": patientEnumerators.bloodgroup\n  //   },\n  // ),\n  // genotype: yupFormSchemas.enumerator(\n  //   i18n('entities.patient.fields.genotype'),\n  //   {\n  //     \"options\": patientEnumerators.genotype\n  //   },\n  // ),\n});\n\nfunction DonorForm(props) {\n  // const [initialValues] = useState(() => {\n  //   const record = props.record || {};\n\n  //   return {\n  //     title: record.title,\n  //     lastname: record.lastname,\n  //     firstname: record.firstname,\n  //     middlename: record.middlename,\n  //     email: record.email,\n  //     phonenumber: record.phonenumber,\n  //     address: record.address,\n  //     stateoforigin: record.stateoforigin,\n  //     allergies: record.allergies,\n  //     birthdate: record.birthdate ? moment(record.birthdate, 'YYYY-MM-DD') : null,\n  //     gender: record.gender,\n  //     genotype: record.genotype,\n  //     bloodgroup: record.bloodgroup,\n  //     relative: record.relative,\n  //     nok: record.nok,\n  //     noknumber: record.noknumber,\n  //     cityofresidence: record.cityofresidence,\n  //     stateofresidence: record.stateofresidence,\n  //   };\n  // });\n\n  const dispatch = useDispatch();\n\n  const saveLoading = useSelector(\n    selectors.selectLoadingUpdateProfile,\n  );\n\n\n  const onSubmit = (values) => {\n    dispatch(actions.doUpdateProfile(values));\n  };\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all'\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div>\n        <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>            \n\n        <Card elevation={10} style={{\n          padding: 20,\n          marginTop: 5,\n        }}>\n        <h2>Organ Donor?</h2>\n            <Grid spacing={2} container>\n                <Grid item lg={4} md={6} sm={12} xs={12}>\n                <RadioFormItem\n                name=\"donor\"\n                label={i18n('entities.patient.fields.donor')}\n                options={patientEnumerators.donor.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.patient.enumerators.donor.${value}`,\n                    ),\n                  }),\n                )}\n                required={true}\n              />\n                </Grid>\n                <Grid item lg={4} md={6} sm={12} xs={12}>\n                {/* <div className={classes.root}>\n                        <input\n                          accept=\"image/*\"\n                          className={classes.input}\n                          id=\"contained-button-file\"\n                          multiple\n                          type=\"file\"\n                        />\n                      <label htmlFor=\"contained-button-file\">\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                          Upload Consent Document\n                        </Button>\n                      </label>\n                </div> */}\n                <ImagesFormItem\n      name=\"avatars\"\n      label={i18n('entities.profile.fields.up')}\n      storage={Storage.values.consentAttachments}\n      max={1}\n    />\n                </Grid>\n          </Grid>\n        </Card>\n          \n          <FormButtons\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n('common.save')}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n('common.cancel')}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n    </div>\n  );\n}\n\nexport default DonorForm;\n\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/RelatedPatients.tsx",["2497","2498","2499"],"import { Button, Grid, IconButton, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Card from '@material-ui/core/Card';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport userservice from 'src/modules/user/userService';\nimport selectors from 'src/modules/auth/authSelectors';\nimport actions from 'src/modules/auth/authActions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nconst schema = yup.object().shape({\n  \n  relative: yupFormSchemas.string(\n    i18n('entities.profile.fields.relative'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  relativenumber: yupFormSchemas.string(\n    i18n('entities.profile.fields.relativenumber'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  relativeemail: yupFormSchemas.string(\n    i18n('entities.profile.fields.relativeemail'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n  relativeaddress: yupFormSchemas.string(\n    i18n('entities.profile.fields.relativeaddress'),\n    {\n      \"required\": true,\n      \"min\": 2,\n      \"max\": 255\n    },\n  ),\n});\n\nfunction RelatedPatientForm(props) {\n  const dispatch = useDispatch();\n\n  const saveLoading = useSelector(\n    selectors.selectLoadingUpdateProfile,\n  );\n\n  const currentUser = useSelector(\n    selectors.selectCurrentUser,\n  );\n\n  // const record = currentUser || {};\n  let initialValues ;\n\n  const getAllData = async() => {\n    await userservice.getUserProfile(currentUser.id).then(res => {\n      initialValues = {\n        relative: res.relative,\n      relativenumber: res.relativenumber,\n      relativeaddress: res.relativeaddress,\n      relativeemail: res.relativeemail,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \n            };\n\n    })\n  \n    return  initialValues;\n  } \n  \n  getAllData().then(res => initialValues = res);\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues ,\n  });\n\n  const onSubmit = (values) => {\n    dispatch(actions.doUpdateProfile(values));\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n          <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n       \n        <Card elevation={10} style={{\n          padding: 20,\n          marginTop: 5,\n        }}>\n        <h2>Related Patients <span>(not required)</span> </h2>\n       \n            <Grid spacing={2} container>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"relative\"\n                    label={i18n('entities.profile.fields.relative')}  \n                  />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"relativenumber\"\n                    label={i18n('entities.profile.fields.relativenumber')}  \n                  />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"relativeemail\"\n                    label={i18n('entities.profile.fields.relativeemail')} \n                  />\n                </Grid>\n                <Grid item lg={6} md={6} sm={12} xs={12}>\n                  <InputFormItem\n                    name=\"relativeaddress\"\n                    label={i18n('entities.profile.fields.relativeaddress')}  \n                  />\n                </Grid>\n          </Grid>\n        </Card>\n            \n          <FormButtons\n           \n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n('common.save')}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n('common.reset')}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n('common.cancel')}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n    </div>\n  );\n}\n\nexport default RelatedPatientForm;\n\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/online/OnlineStatus.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/view/OnboardingViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/importer/OnboardingImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/form/OnboardingFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/list/OnboardingListPage.tsx",["2500"],"import React from 'react';\nimport { i18n } from 'src/i18n';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport Breadcrumb from 'src/view/shared/Breadcrumb';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  media: {\n    height: 140,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  jss28: {\n    flexGrow: 1,\n    width: '100%',\n    cursor: 'pointer',\n    margin: '0 auto',\n    borderRadius: '16px',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    transition: 'all 0.3s cubic-bezier(.25,.8,.25,1)',\n   ' &:hover':{  \n      boxShadow: '0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)',\n    }\n }\n}));\n\nfunction AppointmentListPage(props) {\n  const classes = useStyles();\n  const rows = [{id:'0',PageTile:'Default hospital',logo:'/images/usAsIS.png', path: '/defaulthospital'},{id:'1',PageTile:'Existing Hospital',logo:'/images/usAsIS.png', path: '/existinghospital'},{id:'1',PageTile:'Create Hospital',logo:'/images/usAsIS.png', path: '/createhospital'}];\n  const CustomRouterLink = (props) => (\n    <div\n      style={{\n        flexGrow: 1,\n      }}\n    >\n      <Link\n        style={{\n          textDecoration: 'none',\n          color: 'inherit',\n        }}\n        {...props}\n      />\n    </div>\n  );\n  return (\n    <>\n      <Breadcrumb\n        items={[\n          [i18n('dashboard.menu'), '/'],\n          [i18n('entities.onboarding.menu')],\n        ]}\n      />\n\n      <ContentWrapper>\n        <PageTitle>\n          {i18n('entities.onboarding.list.title')}\n        </PageTitle>\n\n        <div className={classes.root}>\n      <Grid container spacing={3}>\n      {\n      rows.map((row) => (\n        <Grid item xs={4} >\n              <Card className={classes.jss28}>\n            <CardActionArea>\n            <CustomRouterLink key={row.path} to={row.path}>\n            <CardMedia\n          className={classes.media}\n          image={row.logo}\n          title={row.PageTile}\n        />\n          \n            <CardContent>\n         \n              <Button size=\"small\" color=\"primary\">\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {row.PageTile}\n                </Typography>  \n              </Button>\n           \n                \n              </CardContent>\n              </CustomRouterLink>\n            </CardActionArea>\n       \n          </Card>\n        </Grid>\n     ))}\n  \n        </Grid>\n    </div>\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default AppointmentListPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/form/organizationFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/view/organizationViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/destroy/organizationDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/view/organizationViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/form/organizationFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/destroy/organizationDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/list/organizationListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/importer/organizationImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/importer/OrganizationImporterPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/view/OrganizationViewPage.tsx",["2501"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport actions from 'src/modules/organization/view/organizationViewActions';\nimport selectors from 'src/modules/organization/view/organizationViewSelectors';\nimport OrganizationView from 'src/view/organization/view/OrganizationView';\nimport OrganizationViewToolbar from 'src/view/organization/view/OrganizationViewToolbar';\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport Breadcrumb from 'src/view/shared/Breadcrumb';\nimport PageTitle from 'src/view/shared/styles/PageTitle';\n\n\nfunction OrganizationPage() {\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n\n  const loading = useSelector(selectors.selectLoading);\n  const record = useSelector(selectors.selectRecord);\n\n  useEffect(() => {\n    dispatch(actions.doFind(match.params.id));\n  }, [dispatch, match.params.id]); \n\n  return (\n    <>\n      {/* <Breadcrumb\n        items={[\n          [i18n(\"dashboard.menu\"), \"/\"],\n          [i18n(\"entities.organization.menu\"), \"/organization\"],\n          [i18n(\"entities.organization.view.title\")],\n        ]}\n      /> */}\n     \n      <ContentWrapper>\n        <PageTitle>{i18n(\"entities.organization.view.title\")}</PageTitle>\n\n        <OrganizationViewToolbar match={match} />\n        <OrganizationView loading={loading} record={record} />\n      </ContentWrapper>\n    </>\n  );\n}\n\nexport default OrganizationPage;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/form/OrganizationFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/view/OrganizationView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListTable.tsx",["2502","2503","2504","2505","2506"],"import { Box } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport organizationSelectors from 'src/modules/organization/organizationSelectors';\nimport destroyActions from 'src/modules/organization/destroy/organizationDestroyActions';\nimport destroySelectors from 'src/modules/organization/destroy/organizationDestroySelectors';\nimport actions from 'src/modules/organization/list/organizationListActions';\nimport selectors from 'src/modules/organization/list/organizationListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\n\n\nfunction OrganizationListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    organizationSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    organizationSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          display: \"block\",\n          width: \"100%\",\n          overflowX: \"auto\",\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: \"5px\",\n            border: \"1px solid rgb(224, 224, 224)\",\n            borderCollapse: \"initial\",\n          }}\n        >\n          <TableHead>\n            <TableRow>\n              {/* <TableCellCustom padding=\"checkbox\">\n                {hasRows && (\n                  <Checkbox\n                    checked={Boolean(isAllSelected)}\n                    onChange={() => doToggleAllSelected()}\n                    size=\"small\"\n                  />\n                )}\n              </TableCellCustom> */}\n              <TableCellCustom size=\"md\" />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"name\"}\n                label={i18n(\"entities.organization.fields.name\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"email\"}\n                label={i18n(\"entities.organization.fields.email\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"shortcode\"}\n                label={i18n(\"entities.organization.fields.shortcode\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"description\"}\n                label={i18n(\"entities.organization.fields.description\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"domain\"}\n                label={i18n(\"entities.organization.fields.domain\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"address1\"}\n                label={i18n(\"entities.organization.fields.address1\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"address2\"}\n                label={i18n(\"entities.organization.fields.address2\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"phoneno\"}\n                label={i18n(\"entities.organization.fields.phoneno\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"Regno\"}\n                label={i18n(\"entities.organization.fields.Regno\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"dateofestablishment\"}\n                label={i18n(\"entities.organization.fields.dateofestablishment\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"logo\"}\n                label={i18n(\"entities.organization.fields.logo\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"organisation_type\"}\n                label={i18n(\"entities.organization.fields.organisation_type\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"status\"}\n                label={i18n(\"entities.organization.fields.status\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"lga_code\"}\n                label={i18n(\"entities.organization.fields.lga_code\")}\n              />\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"state_code\"}\n                label={i18n(\"entities.organization.fields.state_code\")}\n              />\n\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={\"country_code\"}\n                label={i18n(\"entities.organization.fields.country_code\")}\n              />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {i18n(\"table.noData\")}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                  {/* <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedKeys.includes(row.id)}\n                      onChange={() => doToggleOneSelected(row.id)}\n                      size=\"small\"\n                    />\n                  </TableCell> */}\n                  <TableCell>\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\n                      <Tooltip title={i18n(\"common.view\")}>\n                        <IconButton\n                          component={Link}\n                          color=\"primary\"\n                          to={`/organization/${row.id}`}\n                        >\n                          <VisibilityIcon />\n                        </IconButton>\n                      </Tooltip>\n                      {hasPermissionToEdit && (\n                        <Tooltip title={i18n(\"common.edit\")}>\n                          <IconButton\n                            color=\"primary\"\n                            component={Link}\n                            to={`/organization/${row.id}/edit`}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                      {hasPermissionToDestroy && (\n                        <Tooltip title={i18n(\"common.destroy\")}>\n                          <IconButton\n                            color=\"primary\"\n                            onClick={() => doOpenDestroyConfirmModal(row.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.email}</TableCell>\n                  <TableCell>{row.shortcode}</TableCell>\n                  <TableCell>{row.description}</TableCell>\n                  <TableCell>{row.domain}</TableCell>\n                  <TableCell>{row.address1}</TableCell>\n                  <TableCell>{row.address2}</TableCell>\n                  <TableCell>{row.phoneno}</TableCell>\n                  <TableCell>{row.Regno}</TableCell>\n                  <TableCell>{row.dateofestablishment}</TableCell>\n                  <TableCell>{row.logo}</TableCell>\n                  <TableCell>\n                    {row.organisation_type\n                      ? i18n(\n                          `entities.organization.enumerators.organisation_type.${row.organisation_type}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.status\n                      ? i18n(\n                          `entities.organization.enumerators.status.${row.status}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.lga_code\n                      ? i18n(\n                          `entities.organization.enumerators.lga_code.${row.lga_code}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.state_code\n                      ? i18n(\n                          `entities.organization.enumerators.state_code.${row.state_code}`\n                        )\n                      : null}\n                  </TableCell>\n                  <TableCell>\n                    {row.country_code\n                      ? i18n(\n                          `entities.organization.enumerators.country_code.${row.country_code}`\n                        )\n                      : null}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n      <Pagination onChange={doChangePagination} pagination={pagination} />\n\n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n(\"common.areYouSure\")}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n(\"common.yes\")}\n          cancelText={i18n(\"common.no\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default OrganizationListTable;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/form/OrganizationForm.tsx",["2507"],"import { Button, Grid } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport React, { useState } from \"react\";\nimport { i18n } from \"src/i18n\";\nimport FormWrapper, { FormButtons } from \"src/view/shared/styles/FormWrapper\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport yupFormSchemas from \"src/modules/shared/yup/yupFormSchemas\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport InputFormItem from \"src/view/shared/form/items/InputFormItem\";\nimport RadioFormItem from \"src/view/shared/form/items/RadioFormItem\";\nimport moment from \"moment\";\nimport DatePickerFormItem from \"src/view/shared/form/items/DatePickerFormItem\";\nimport organizationEnumerators from \"src/modules/organization/organizationEnumerators\";\nimport SelectFormItem from \"src/view/shared/form/items/SelectFormItem\";\nimport ImagesUploader from \"src/view/shared/uploaders/ImagesUploader\";\n\nconst schema = yup.object().shape({\n\n  name: yupFormSchemas.string(i18n(\"entities.organization.fields.name\"), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  shortcode: yupFormSchemas.string(\n    i18n(\"entities.organization.fields.shortcode\"),\n    {\n      required: true,\n      min: 2,\n      max: 255,\n    }\n  ),\n  domain: yupFormSchemas.string(i18n(\"entities.organization.fields.domain\"), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  Regno: yupFormSchemas.string(i18n(\"entities.organization.fields.Regno\"), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  description: yupFormSchemas.string(\n    i18n(\"entities.organization.fields.description\"),\n    {\n      required: true,\n      min: 2,\n      max: 500,\n    }\n  ),\n  organisation_type: yupFormSchemas.enumerator(\n    i18n(\"entities.organization.fields.organisation_type\"),\n    {\n      options: organizationEnumerators.organisation_type,\n    }\n  ),\n  phoneno: yupFormSchemas.string(i18n(\"entities.organization.fields.phoneno\"), {\n    required: true,\n    min: 2,\n    max: 255,\n  }),\n  dateofestablishment: yupFormSchemas.date(\n    i18n(\"entities.organization.fields.dateofestablishment\"),\n    {}\n  ),\n  address1: yupFormSchemas.string(\n    i18n(\"entities.organization.fields.address1\"),\n    {\n      required: true,\n      min: 2,\n      max: 255,\n    }\n  ),\n  address2: yupFormSchemas.string(\n    i18n(\"entities.organization.fields.address2\"),\n    {\n      required: true,\n      min: 2,\n      max: 255,\n    }\n  ),\n  geoAddress: yupFormSchemas.string(\n    i18n(\"entities.organization.fields.geoAddress\"),\n    {\n      required: true,\n      min: 2,\n      max: 255,\n    }\n  ),\n  country_code: yupFormSchemas.enumerator(\n    i18n(\"entities.organization.fields.country_code\"),\n    {\n      options: organizationEnumerators.country_code,\n    }\n  ),\n  state_code: yupFormSchemas.enumerator(\n    i18n(\"entities.organization.fields.state_code\"),\n    {\n      options: organizationEnumerators.state_code,\n    }\n  ),\n  lga_code: yupFormSchemas.enumerator(\n    i18n(\"entities.organization.fields.lga_code\"),\n    {\n      options: organizationEnumerators.lga_code,\n    }\n  ),\n});\n\nfunction OrganizationForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      \n      name: record.name,\n      shortcode: record.shortcode,\n      domain: record.domain,\n      Regno: record.Regno,\n      description: record.description,\n      organisation_type: record.organisation_type,\n      phoneno: record.phoneno,\n      address1: record.address1,\n      address2: record.address2,\n      geoAddress: record.geoAddress,\n      dateofestablishment: record.dateofestablishment\n        ? moment(record.dateofestablishment, \"YYYY-MM-DD\")\n        : null,\n      country_code: record.country_code,\n      state_code: record.state_code,\n      lga_code: record.lga_code,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: \"all\",\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              {i18n(\"entities.organization.fields.logo\")}\n              <ImagesUploader  />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"name\"\n                label={i18n(\"entities.organization.fields.name\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"shortcode\"\n                label={i18n(\"entities.organization.fields.shortcode\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"domain\"\n                label={i18n(\"entities.organization.fields.domain\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"Regno\"\n                label={i18n(\"entities.organization.fields.Regno\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"description\"\n                label={i18n(\"entities.organization.fields.description\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"organisation_type\"\n                label={i18n(\"entities.organization.fields.organisation_type\")}\n                options={organizationEnumerators.organisation_type.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.organization.enumerators.organisation_type.${value}`\n                    ),\n                  })\n                )}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"phoneno\"\n                label={i18n(\"entities.organization.fields.phoneno\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <DatePickerFormItem\n                name=\"dateofestablishment\"\n                label={i18n(\"entities.organization.fields.dateofestablishment\")}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"address1\"\n                label={i18n(\"entities.organization.fields.address1\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"address2\"\n                label={i18n(\"entities.organization.fields.address2\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"geoAddress\"\n                label={i18n(\"entities.organization.fields.geoAddress\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"country_code\"\n                label={i18n(\"entities.organization.fields.country_code\")}\n                options={organizationEnumerators.country_code.map((value) => ({\n                  value,\n                  label: i18n(\n                    `entities.organization.enumerators.country_code.${value}`\n                  ),\n                }))}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"state_code\"\n                label={i18n(\"entities.organization.fields.state_code\")}\n                options={organizationEnumerators.state_code.map((value) => ({\n                  value,\n                  label: i18n(\n                    `entities.organization.enumerators.state_code.${value}`\n                  ),\n                }))}\n                required={false}\n              />\n            </Grid>\n            <Grid item lg={6} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"lga_code\"\n                label={i18n(\"entities.organization.fields.lga_code\")}\n                options={organizationEnumerators.lga_code.map((value) => ({\n                  value,\n                  label: i18n(\n                    `entities.organization.enumerators.lga_code.${value}`\n                  ),\n                }))}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <FormButtons\n            style={{\n              flexDirection: modal ? \"row-reverse\" : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.save\")}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.reset\")}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n(\"common.cancel\")}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default OrganizationForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/form/organizationFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/view/organizationViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/view/OrganizationViewToolbar.tsx",["2508","2509","2510","2511","2512","2513"],"import { Button } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport HistoryIcon from '@material-ui/icons/History';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\nimport auditLogSelectors from 'src/modules/auditLog/auditLogSelectors';\nimport organizationSelectors from 'src/modules/organization/organizationSelectors';\nimport destroyActions from 'src/modules/organization/destroy/organizationDestroyActions';\nimport destroySelectors from 'src/modules/organization/destroy/organizationDestroySelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport ToolbarWrapper from 'src/view/shared/styles/ToolbarWrapper';\n\nfunction OrganizationViewToolbar(props) {\n  const [\n    destroyConfirmVisible,\n    setDestroyConfirmVisible,\n  ] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const id = props.match.params.id;\n\n  const hasPermissionToAuditLogs = useSelector(\n    auditLogSelectors.selectPermissionToRead,\n  );\n  const hasPermissionToEdit = useSelector(\n    organizationSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    organizationSelectors.selectPermissionToDestroy,\n  );\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const doOpenDestroyConfirmModal = () => {\n    setDestroyConfirmVisible(true);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setDestroyConfirmVisible(false);\n  };\n\n  const doDestroy = () => {\n    doCloseDestroyConfirmModal();\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  return (\n    <ToolbarWrapper>\n      {hasPermissionToEdit && (\n        <Button\n          component={Link}\n          to={`/organization/${id}/edit`}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n          startIcon={<EditIcon />}\n          size=\"small\"\n        >\n          {i18n('common.edit')}\n        </Button>\n      )}\n\n      {/* {hasPermissionToDestroy && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n          startIcon={<DeleteIcon />}\n          disabled={destroyLoading}\n          onClick={doOpenDestroyConfirmModal}\n          size=\"small\"\n        >\n          {i18n('common.destroy')}\n        </Button>\n      )} */}\n\n      {/* {hasPermissionToAuditLogs && (\n        <Button\n          component={Link}\n          to={`/audit-logs?entityId=${encodeURIComponent(\n            id,\n          )}`}\n          startIcon={<HistoryIcon />}\n          size=\"small\"\n        >\n          {i18n('auditLog.menu')}\n        </Button>\n      )} */}\n\n      {destroyConfirmVisible && (\n        <ConfirmModal\n          title={i18n('common.areYouSure')}\n          onConfirm={() => doDestroy()}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n('common.yes')}\n          cancelText={i18n('common.no')}\n        />\n      )}\n    </ToolbarWrapper>\n  );\n}\n\nexport default OrganizationViewToolbar;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/organization/list/OrganizationListFilter.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/destroy/organizationDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/organization/organizationPermissions.tsx",["2514"],"import Roles from 'src/security/roles';\r\nimport Plans from 'src/security/plans';\r\nimport Storage from 'src/security/storage';\r\n\r\nconst storage = Storage.values;\r\nconst roles = Roles.values;\r\nconst plans = Plans.values;\r\n\r\nclass OrganizationPermissions {\r\n  static get values() {\r\n    return {\r\n\r\n      organizationImport: {\r\n        id: 'organizationImport',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n      },\r\n      organizationCreate: {\r\n        id: 'organizationCreate',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n        allowedStorage: [\r\n\r\n        ],\r\n      },\r\n      organizationEdit: {\r\n        id: 'organizationEdit',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n        allowedStorage: [\r\n\r\n        ],\r\n      },\r\n      organizationDestroy: {\r\n        id: 'organizationDestroy',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n        allowedStorage: [\r\n\r\n        ],\r\n      },\r\n      organizationRead: {\r\n        id: 'organizationRead',\r\n        allowedRoles: [roles.admin, roles.custom],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n      },\r\n      organizationAutocomplete: {\r\n        id: 'organizationAutocomplete',\r\n        allowedRoles: [roles.admin, roles.custom],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n      },\r\n\r\n    };\r\n  }\r\n\r\n  static get asArray() {\r\n    return Object.keys(this.values).map((value) => {\r\n      return this.values[value];\r\n    });\r\n  }\r\n}\r\n\r\nexport default OrganizationPermissions;\r\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/WalletComponent.tsx",["2515","2516","2517","2518","2519","2520","2521","2522","2523","2524","2525","2526"],"/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/Components/ExistingHospital.tsx",["2527","2528"],"import Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Check from \"@material-ui/icons/Check\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { StepIconProps } from \"@material-ui/core/StepIcon\";\nimport { createStyles, makeStyles, Theme, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport ExistinghospitalForm from \"src/view/existinghospital/form/ExistinghospitalForm\";\nimport ProviderForm from \"src/view/provider/form/ProviderForm\";\nimport Breadcrumb from \"src/view/shared/Breadcrumb\";\nimport PageTitle from \"src/view/shared/styles/PageTitle\";\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport { i18n } from 'src/i18n';\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: \"calc(-50% + 16px)\",\n    right: \"calc(50% + 16px)\",\n  },\n  active: {\n    \"& $line\": {\n      borderColor: \"#784af4\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      borderColor: \"#784af4\",\n    },\n  },\n  line: {\n    borderColor: \"#eaeaf0\",\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: \"#eaeaf0\",\n    display: \"flex\",\n    height: 22,\n    alignItems: \"center\",\n  },\n  active: {\n    color: \"#784af4\",\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: \"50%\",\n    backgroundColor: \"currentColor\",\n  },\n  completed: {\n    color: \"#784af4\",\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props: StepIconProps) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? (\n        <Check className={classes.completed} />\n      ) : (\n        <div className={classes.circle} />\n      )}\n    </div>\n  );\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n  },\n  completed: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n  },\n});\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons: { [index: string]: React.ReactElement } = {\n    1: <PersonIcon />,\n    2: <PersonAddIcon />,\n    3: <GroupAddIcon />,\n    4: <RedeemIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"Existing Hospital\", \"Profesional Information\"];\n}\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return <ExistinghospitalForm />;\n    case 1:\n      return <ProviderForm />;\n    case 2:\n      return ('');\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n    <Breadcrumb\n      items={[\n        [i18n('entities.onboarding.dashboard'), '/onboarding'],\n        [i18n('entities.existinghospital.label')],\n      ]}\n    />\n\n    <ContentWrapper>\n      <PageTitle>\n        {i18n('entities.existinghospital.label')}    {i18n('entities.onboarding.list.title')}\n      </PageTitle>\n\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                {activeStep === steps.length-3? \"Finish\" : \"Back\"}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n    </ContentWrapper>\n    </>\n  );\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/existinghospital/form/ExistinghospitalForm.tsx",["2529","2530","2531","2532"],"import { Button, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport RadioFormItem from 'src/view/shared/form/items/RadioFormItem';\nimport existinghospitalEnumerators from 'src/modules/existinghospital/existinghospitalEnumerators';\nimport moment from 'moment';\nimport DatePickerFormItem from 'src/view/shared/form/items/DatePickerFormItem';\nimport SelectFormItem from 'src/view/shared/form/items/SelectFormItem';\n\nconst schema = yup.object().shape({\n  // name: yupFormSchemas.string(\n  //   i18n('entities.existinghospital.fields.name'),\n  //   {\n  //     \"required\": true,\n  //     \"min\": 2,\n  //     \"max\": 255\n  //   },\n  // ),\n  // birthdate: yupFormSchemas.date(\n  //   i18n('entities.existinghospital.fields.birthdate'),\n  //   {},\n  // ),\n  name: yupFormSchemas.enumerator(\n    i18n('entities.existinghospital.fields.name'),\n    {\n      \"options\": existinghospitalEnumerators.name\n    },\n  ),\n});\n\nfunction ExistinghospitalForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      // name: record.name,\n      // birthdate: record.birthdate ? moment(record.birthdate, 'YYYY-MM-DD') : null,\n      name: record.name,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    console.log(props)\n    props.onSubmit(props.record?.id, values);\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  const { saveLoading, modal } = props;\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            {/* <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"name\"\n                label={i18n('entities.existinghospital.fields.name')}  \n                required={true}\n              autoFocus\n              />\n            </Grid> */}\n            {/* <Grid item lg={7} md={8} sm={12} xs={12}>\n              <DatePickerFormItem\n                name=\"birthdate\"\n                label={i18n('entities.existinghospital.fields.birthdate')}\n                required={false}\n              />\n            </Grid> */}\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <SelectFormItem\n                name=\"name\"\n                label={i18n('entities.existinghospital.fields.name')}\n                options={existinghospitalEnumerators.name.map(\n                  (value) => ({\n                    value,\n                    label: i18n(\n                      `entities.existinghospital.enumerators.name.${value}`,\n                    ),\n                  }),\n                )}\n                required={false}\n              />\n            </Grid>\n          </Grid>\n          <FormButtons\n            style={{\n              flexDirection: modal\n                ? 'row-reverse'\n                : undefined,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n('common.save')}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n('common.reset')}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n('common.cancel')}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default ExistinghospitalForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/existinghospital/existinghospitalEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/provider/form/ProviderForm.tsx",["2533"],"import { Button, Grid } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SaveIcon from '@material-ui/icons/Save';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport React, { useState } from 'react';\nimport { i18n } from 'src/i18n';\nimport FormWrapper, {\n  FormButtons,\n} from 'src/view/shared/styles/FormWrapper';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport * as yup from 'yup';\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\nimport TextAreaFormItem from 'src/view/shared/form/items/TextAreaFormItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'src/modules/auth/authSelectors';\nimport actions from 'src/modules/provider/providerActions';\n\nconst schema = yup.object().shape({\n  medical_no: yupFormSchemas.string(\n    i18n('entities.provider.fields.medical_no'),\n    {\n      max: 80,\n    },\n  ),\n  practice_area: yupFormSchemas.string(\n    i18n('entities.provider.fields.practice_area'),\n    {\n      max: 175,\n    },\n  ),\n});\n\nfunction ProviderForm(props) {\n  const dispatch = useDispatch();\n\n  const saveLoading = useSelector(\n    selectors.selectLoadingCreateProvider,\n  );\n\n  const currentUser = useSelector(\n    selectors.selectCurrentUser,\n  );\n\n  \n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      medical_no: record.medical_no,\n      practice_area: record.practice_area,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: 'all',\n    defaultValues: initialValues as any,\n  });\n\n  const onSubmit = (values) => {\n    dispatch(actions.doCreateProvider(values));\n  };\n\n  const onReset = () => {\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  return (\n    <FormWrapper>\n      <FormProvider {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <Grid spacing={2} container>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <InputFormItem\n                name=\"medical_no\"\n                label={i18n(\"entities.provider.fields.medical_no\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n            <Grid item lg={7} md={8} sm={12} xs={12}>\n              <TextAreaFormItem\n                name=\"practice_area\"\n                label={i18n(\"entities.provider.fields.practice_area\")}\n                required={true}\n                autoFocus\n              />\n            </Grid>\n          </Grid>\n          <FormButtons\n          \n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saveLoading}\n              type=\"button\"\n              onClick={form.handleSubmit(onSubmit)}\n              startIcon={<SaveIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.save\")}\n            </Button>\n\n            <Button\n              disabled={saveLoading}\n              onClick={onReset}\n              type=\"button\"\n              startIcon={<UndoIcon />}\n              size=\"small\"\n            >\n              {i18n(\"common.reset\")}\n            </Button>\n\n            {props.onCancel ? (\n              <Button\n                disabled={saveLoading}\n                onClick={() => props.onCancel()}\n                type=\"button\"\n                startIcon={<CloseIcon />}\n                size=\"small\"\n              >\n                {i18n(\"common.cancel\")}\n              </Button>\n            ) : null}\n          </FormButtons>\n        </form>\n      </FormProvider>\n    </FormWrapper>\n  );\n}\n\nexport default ProviderForm;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/shared/form/items/TextAreaFormItem.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/Components/defaulthospital.tsx",["2534","2535"],"import Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Check from \"@material-ui/icons/Check\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { StepIconProps } from \"@material-ui/core/StepIcon\";\nimport { createStyles, makeStyles, Theme, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport ProviderForm from \"src/view/provider/form/ProviderForm\";\nimport Breadcrumb from \"src/view/shared/Breadcrumb\";\nimport PageTitle from \"src/view/shared/styles/PageTitle\";\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport { i18n } from 'src/i18n';\n\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: \"calc(-50% + 16px)\",\n    right: \"calc(50% + 16px)\",\n  },\n  active: {\n    \"& $line\": {\n      borderColor: \"#784af4\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      borderColor: \"#784af4\",\n    },\n  },\n  line: {\n    borderColor: \"#eaeaf0\",\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: \"#eaeaf0\",\n    display: \"flex\",\n    height: 22,\n    alignItems: \"center\",\n  },\n  active: {\n    color: \"#784af4\",\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: \"50%\",\n    backgroundColor: \"currentColor\",\n  },\n  completed: {\n    color: \"#784af4\",\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props: StepIconProps) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? (\n        <Check className={classes.completed} />\n      ) : (\n        <div className={classes.circle} />\n      )}\n    </div>\n  );\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n  },\n  completed: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n  },\n});\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons: { [index: string]: React.ReactElement } = {\n    1: <PersonIcon />,\n    2: <PersonAddIcon />,\n    3: <GroupAddIcon />,\n    4: <RedeemIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"Medical Infomation\"];\n}\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return <ProviderForm />;\n    case 1:\n      return \"\";\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n    <Breadcrumb\n      items={[\n        [i18n('entities.onboarding.dashboard'), '/onboarding'],\n        [i18n('entities.defaulthospital.menu')],\n      ]}\n    />\n\n    <ContentWrapper>\n      <PageTitle>\n      {i18n('entities.defaulthospital.label')}     {i18n('entities.onboarding.list.title')}\n      </PageTitle>\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 3 ? \"Finish\" : \"Back\"}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n    </ContentWrapper>\n    </>\n  );\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/onboarding/Components/createhospital.tsx",["2536","2537"],"import Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Check from \"@material-ui/icons/Check\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport RedeemIcon from \"@material-ui/icons/Redeem\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { StepIconProps } from \"@material-ui/core/StepIcon\";\nimport { createStyles, makeStyles, Theme, withStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport ProviderForm from \"src/view/provider/form/ProviderForm\";\nimport OrganizationFormPage from \"src/view/organization/form/OrganizationFormPage\";\nimport Breadcrumb from \"src/view/shared/Breadcrumb\";\nimport PageTitle from \"src/view/shared/styles/PageTitle\";\nimport ContentWrapper from 'src/view/layout/styles/ContentWrapper';\nimport { i18n } from 'src/i18n';\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: \"calc(-50% + 16px)\",\n    right: \"calc(50% + 16px)\",\n  },\n  active: {\n    \"& $line\": {\n      borderColor: \"#784af4\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      borderColor: \"#784af4\",\n    },\n  },\n  line: {\n    borderColor: \"#eaeaf0\",\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: \"#eaeaf0\",\n    display: \"flex\",\n    height: 22,\n    alignItems: \"center\",\n  },\n  active: {\n    color: \"#784af4\",\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: \"50%\",\n    backgroundColor: \"currentColor\",\n  },\n  completed: {\n    color: \"#784af4\",\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props: StepIconProps) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? (\n        <Check className={classes.completed} />\n      ) : (\n        <div className={classes.circle} />\n      )}\n    </div>\n  );\n}\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  active: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n  },\n  completed: {\n    backgroundImage:\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n  },\n});\n\nfunction ColorlibStepIcon(props: StepIconProps) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons: { [index: string]: React.ReactElement } = {\n    1: <PersonIcon />,\n    2: <PersonAddIcon />,\n    3: <GroupAddIcon />,\n    4: <RedeemIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\nfunction getSteps() {\n  return [\"Create a new Hospital\", \"Professional Infomation\"];\n}\nfunction getStepContent(step: number) {\n  switch (step) {\n   \n    case 0:\n      return <OrganizationFormPage />;\n    case 1:\n      return <ProviderForm />;\n    case 2:\n      return \"\";\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n    <Breadcrumb\n      items={[\n        [i18n('entities.onboarding.dashboard'), '/onboarding'],\n        [i18n('entities.organization.menu')],\n      ]}\n    />\n\n    <ContentWrapper>\n      <PageTitle>\n        {i18n('entities.organization.list.title')}    {i18n('entities.onboarding.list.title')}\n      </PageTitle>\n    <div className={classes.root}>\n      <Stepper\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </Typography>\n            <div>\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 3 ? \"Finish\" : \"Back\"}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>\n             \n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n    </ContentWrapper>\n    </>\n  );\n}\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/auth/VerifyOnboardingPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/provider/providerActions.tsx",["2538","2539","2540","2541","2542","2543"],"import service from 'src/modules/provider/providerService';\nimport Errors from 'src/modules/shared/error/errors';\nimport Message from 'src/view/shared/message';\nimport { i18n } from 'src/i18n';\nimport { getHistory } from 'src/modules/store';\nimport { AuthToken } from 'src/modules/auth/authToken';\nimport AuthCurrentTenant from 'src/modules/auth/authCurrentTenant';\nimport selectors from 'src/modules/auth/authSelectors';\nimport { tenantSubdomain } from '../tenant/tenantSubdomain';\nimport { OnlineStatus } from '../online/OnlineStatus';\n\nconst prefix = 'Provider';\n\nconst providerActions = {\n  ERROR_MESSAGE_CLEARED: `${prefix}_ERROR_MESSAGE_CLEARED`,\n\n  AUTH_INIT_SUCCESS: `${prefix}_INIT_SUCCESS`,\n  AUTH_INIT_ERROR: `${prefix}_INIT_ERROR`,\n\n  AUTH_START: `${prefix}_START`,\n  AUTH_SUCCESS: `${prefix}_SUCCESS`,\n  AUTH_ERROR: `${prefix}_ERROR`,\n  PROVIDER_CREATE_SUCCESS: `${prefix}_CREATED_SUCCESS`,\n  PROVIDER_PROFILE_ERROR: `${prefix}_PROFILE_ERROR`,\n\n\n  doCreateProvider: (data) => async (\n    dispatch,\n  ) => {\n    try {\n      dispatch({ type: providerActions.AUTH_START });\n\n      await service.create(\n       data\n      );\n      dispatch({\n        type: providerActions.PROVIDER_CREATE_SUCCESS,\n            });\n            Message.success(i18n('entities.provider.create.success'));\n          } catch (error) {\n            Errors.handle(error);\n      \n            dispatch({\n              type: providerActions.PROVIDER_PROFILE_ERROR,\n            });\n          }\n  },\n\n\n};\n\nexport default providerActions;\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/provider/providerService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/WalletListModal.tsx",["2544","2545"],"\nimport React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nimport { Button } from '@material-ui/core';\nimport { i18n } from 'src/i18n';\n\nimport ColoredChip from 'src/view/shared/ColoredChip';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport TabsWrappedLabel from './TabsWrappedLabel';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: 'absolute',\n      width: 300,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n\n      \n    },\n  }),\n);\n\nexport function WalletListModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, \n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n        <TabsWrappedLabel />\n    </div>\n  );\n\n  return (\n    <div>\n                <Button\n                   \n                   startIcon={<AccountBalanceWalletIcon style={{ color: \"white\", fontSize: 50 }}/>}\n                   \n                  type=\"submit\"\n                  size=\"small\" onClick={handleOpen}>\n      </Button>\n      <label> Top Up</label>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}\n\nexport default WalletListModal;\n","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/TabsWrappedLabel.tsx",["2546","2547","2548","2549","2550","2551"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ModalEnterAmount from './ModalEnterAmount';\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`wrapped-tabpanel-${index}`}\n      aria-labelledby={`wrapped-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `wrapped-tab-${index}`,\n    'aria-controls': `wrapped-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function TabsWrappedLabel() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('one');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      \n      <ModalEnterAmount/>\n\n    </div>\n  );\n}","/var/www/html/Office/react project/KokoFrontEnd/src/view/layout/WalletComponent/ModalEnterAmount.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletEnumerators.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/list/WalletListPage.tsx",["2552"],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/list/WalletListTranscationDisplay.tsx",["2553","2554","2555","2556","2557","2558"],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/list/WalletListTable.tsx",["2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569","2570","2571","2572","2573","2574","2575","2576","2577","2578","2579","2580","2581"],"import { Box, Button } from '@material-ui/core';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { i18n } from 'src/i18n';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport walletSelectors from 'src/modules/wallet/walletSelectors';\nimport destroyActions from 'src/modules/wallet/destroy/walletDestroyActions';\nimport destroySelectors from 'src/modules/wallet/destroy/walletDestroySelectors';\nimport actions from 'src/modules/wallet/list/walletListActions';\nimport selectors from 'src/modules/wallet/list/walletListSelectors';\nimport ConfirmModal from 'src/view/shared/modals/ConfirmModal';\nimport Pagination from 'src/view/shared/table/Pagination';\nimport Spinner from 'src/view/shared/Spinner';\nimport TableCellCustom from 'src/view/shared/table/TableCellCustom';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nfunction WalletListTable(props) {\n  const [\n    recordIdToDestroy,\n    setRecordIdToDestroy,\n  ] = useState(null);\n  const dispatch = useDispatch();\n\n  const findLoading = useSelector(selectors.selectLoading);\n\n  const destroyLoading = useSelector(\n    destroySelectors.selectLoading,\n  );\n\n  const useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n      textAlign: 'center',\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  \n      moveText: {\n        textAlign: 'left',\n      }\n    \n  \n  });\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  const loading = findLoading || destroyLoading;\n\n  const rows = useSelector(selectors.selectRows);\n  const pagination = useSelector(\n    selectors.selectPagination,\n  );\n  const selectedKeys = useSelector(\n    selectors.selectSelectedKeys,\n  );\n  const hasRows = useSelector(selectors.selectHasRows);\n  const sorter = useSelector(selectors.selectSorter);\n  const isAllSelected = useSelector(\n    selectors.selectIsAllSelected,\n  );\n  const hasPermissionToEdit = useSelector(\n    walletSelectors.selectPermissionToEdit,\n  );\n  const hasPermissionToDestroy = useSelector(\n    walletSelectors.selectPermissionToDestroy,\n  );\n\n  const doOpenDestroyConfirmModal = (id) => {\n    setRecordIdToDestroy(id);\n  };\n\n  const doCloseDestroyConfirmModal = () => {\n    setRecordIdToDestroy(null);\n  };\n\n  const doChangeSort = (field) => {\n    const order =\n      sorter.field === field && sorter.order === 'asc'\n        ? 'desc'\n        : 'asc';\n\n    dispatch(\n      actions.doChangeSort({\n        field,\n        order,\n      }),\n    );\n  };\n  \n\n  const doChangePagination = (pagination) => {\n    dispatch(actions.doChangePagination(pagination));\n  };\n\n  const doDestroy = (id) => {\n    doCloseDestroyConfirmModal();\n\n    dispatch(destroyActions.doDestroy(id));\n  };\n\n  const doToggleAllSelected = () => {\n    dispatch(actions.doToggleAllSelected());\n  };\n\n  const doToggleOneSelected = (id) => {\n    dispatch(actions.doToggleOneSelected(id));\n  };\n\n  return (\n    <>\n      <Box\n        style={{\n          display: 'block',\n          width: '100%',\n          overflowX: 'auto',\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: '5px',\n            border: '1px solid rgb(224, 224, 224)',\n            borderCollapse: 'initial',\n          }}\n        >\n          <TableHead>\n            <TableRow>\n            \n\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'datetimerange'}\n                label={i18n(\n                  'entities.wallet.fields.datetimerange',\n                )}\n              />\n\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'name'}\n                label={i18n(\n                  'entities.wallet.fields.name',\n                )}\n              />\n\n\n              <TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'birthdate'}\n                label={i18n(\n                  'entities.wallet.fields.walletbalance',\n                )}\n              />\n              \n\n<TableCellCustom\n                onSort={doChangeSort}\n                hasRows={hasRows}\n                sorter={sorter}\n                name={'status'}\n                label={i18n(\n                  'entities.wallet.fields.status',\n                )}\n              />\n        \n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    {i18n('table.noData')}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                 \n               \n                  <TableCell>{row.datetimerange}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.walletbalance}</TableCell>\n                \n                <TableCell>{row.status}</TableCell>             \n                \n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n\n\n      \n\n      <Pagination\n        onChange={doChangePagination}\n        pagination={pagination}\n      />\n\n      \n\n<Box\n        style={{\n          display: 'block',\n          width: '100%',\n          overflowX: 'auto',\n        }}\n      >\n        <Table\n          style={{\n            borderRadius: '5px',\n            border: '1px solid rgb(224, 224, 224)',\n            borderCollapse: 'initial',\n          }}\n        >\n          <TableBody>\n            {loading && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <Spinner />\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading && !hasRows && (\n              <TableRow>\n                <TableCell colSpan={100}>\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    {i18n('table.noData')}\n                  </div>\n                </TableCell>\n              </TableRow>\n            )}\n            {!loading &&\n              rows.map((row) => (\n                <TableRow key={row.id}>\n                 \n               \n                  <TableCell>&nbsp;</TableCell>\n                  <TableCell>\n                  <Typography color=\"secondary\" gutterBottom>\n                &nbsp;&nbsp; <label htmlFor=\"\">Start a chance to win koko fp points</label>\n              \n              </Typography>\n                    \n                     \n                  \n                  </TableCell>\n                  <TableCell>   <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n                \n                  size=\"small\"\n                  component={Link}\n                  to=\"\"\n                >\n                  {i18n('common.playgame')}\n                </Button></TableCell>\n                \n                <TableCell> <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={props.loading}\n               \n                  size=\"small\"\n                  component={Link}\n                  to=\"\"\n                >\n                  {i18n('common.watchgame')}\n                </Button></TableCell>             \n                \n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </Box>\n \n        \n      {recordIdToDestroy && (\n        <ConfirmModal\n          title={i18n('common.areYouSure')}\n          onConfirm={() => doDestroy(recordIdToDestroy)}\n          onClose={() => doCloseDestroyConfirmModal()}\n          okText={i18n('common.yes')}\n          cancelText={i18n('common.no')}\n        />\n      )}\n    </>\n  );\n}\n\nexport default WalletListTable;\n\n\n\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/destroy/walletDestroyActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/destroy/walletDestroySelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletPermissions.tsx",["2582"],"import Roles from 'src/security/roles';\r\nimport Plans from 'src/security/plans';\r\nimport Storage from 'src/security/storage';\r\n\r\nconst storage = Storage.values;\r\nconst roles = Roles.values;\r\nconst plans = Plans.values;\r\n\r\nclass WalletPermissions {\r\n  static get values() {\r\n    return {\r\n\r\n      walletImport: {\r\n        id: 'walletImport',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n      },\r\n      walletCreate: {\r\n        id: 'walletCreate',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n        allowedStorage: [\r\n\r\n        ],\r\n      },\r\n      walletEdit: {\r\n        id: 'walletEdit',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n        allowedStorage: [\r\n\r\n        ],\r\n      },\r\n      walletDestroy: {\r\n        id: 'walletDestroy',\r\n        allowedRoles: [roles.admin],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n        allowedStorage: [\r\n\r\n        ],\r\n      },\r\n      walletRead: {\r\n        id: 'walletRead',\r\n        allowedRoles: [roles.admin, roles.custom],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n      },\r\n      walletAutocomplete: {\r\n        id: 'walletAutocomplete',\r\n        allowedRoles: [roles.admin, roles.custom],\r\n        allowedPlans: [plans.free, plans.growth, plans.enterprise],\r\n      },\r\n\r\n    };\r\n  }\r\n\r\n  static get asArray() {\r\n    return Object.keys(this.values).map((value) => {\r\n      return this.values[value];\r\n    });\r\n  }\r\n}\r\n\r\nexport default WalletPermissions;\r\n\r\n\r\n\r\n","/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletService.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListExporterFields.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/form/WalletFormPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/view/WalletViewPage.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/form/WalletForm.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/view/WalletViewToolbar.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/form/walletFormSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/form/walletFormActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/view/walletViewActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/view/walletViewSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/view/wallet/view/WalletView.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/walletReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/form/walletFormReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/view/walletViewReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/list/walletListReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/destroy/walletDestroyReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterReducers.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterActions.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterSelectors.tsx",[],"/var/www/html/Office/react project/KokoFrontEnd/src/modules/wallet/importer/walletImporterFields.tsx",[],{"ruleId":"2583","replacedBy":"2584"},{"ruleId":"2585","replacedBy":"2586"},{"ruleId":"2587","severity":1,"message":"2588","line":60,"column":11,"nodeType":"2589","messageId":"2590","endLine":60,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2591","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2592","line":9,"column":8,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2593","line":38,"column":9,"nodeType":"2589","messageId":"2590","endLine":38,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2594","line":1,"column":17,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2595","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":12},{"ruleId":"2587","severity":1,"message":"2596","line":13,"column":8,"nodeType":"2589","messageId":"2590","endLine":13,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2597","line":20,"column":3,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":10},{"ruleId":"2587","severity":1,"message":"2598","line":2,"column":54,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":65},{"ruleId":"2587","severity":1,"message":"2599","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2600","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2601","line":11,"column":23,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2602","line":61,"column":9,"nodeType":"2589","messageId":"2590","endLine":61,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2603","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2594","line":5,"column":10,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2604","line":21,"column":8,"nodeType":"2589","messageId":"2590","endLine":21,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2605","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2606","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2607","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2608","line":9,"column":8,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2609","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2610","line":79,"column":11,"nodeType":"2589","messageId":"2590","endLine":79,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2611","line":116,"column":11,"nodeType":"2589","messageId":"2590","endLine":116,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2612","line":1,"column":26,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":38},{"ruleId":"2587","severity":1,"message":"2613","line":1,"column":134,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":139},{"ruleId":"2587","severity":1,"message":"2614","line":76,"column":11,"nodeType":"2589","messageId":"2590","endLine":76,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2615","line":1,"column":10,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2616","line":1,"column":18,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2612","line":1,"column":43,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":55},{"ruleId":"2587","severity":1,"message":"2617","line":1,"column":57,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":68},{"ruleId":"2587","severity":1,"message":"2618","line":1,"column":76,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":86},{"ruleId":"2587","severity":1,"message":"2619","line":1,"column":122,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":131},{"ruleId":"2587","severity":1,"message":"2613","line":1,"column":133,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":138},{"ruleId":"2587","severity":1,"message":"2620","line":3,"column":10,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2621","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2622","line":8,"column":13,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2623","line":9,"column":10,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2624","line":10,"column":17,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2625","line":65,"column":7,"nodeType":"2589","messageId":"2590","endLine":65,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2612","line":1,"column":39,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":51},{"ruleId":"2587","severity":1,"message":"2618","line":1,"column":59,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":69},{"ruleId":"2587","severity":1,"message":"2613","line":1,"column":94,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":99},{"ruleId":"2587","severity":1,"message":"2625","line":51,"column":7,"nodeType":"2589","messageId":"2590","endLine":51,"endColumn":19},{"ruleId":"2583","replacedBy":"2626"},{"ruleId":"2585","replacedBy":"2627"},{"ruleId":"2587","severity":1,"message":"2628","line":25,"column":9,"nodeType":"2589","messageId":"2590","endLine":25,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2629","line":3,"column":10,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2630","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2631","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2632","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2628","line":29,"column":9,"nodeType":"2589","messageId":"2590","endLine":29,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2633","line":19,"column":8,"nodeType":"2589","messageId":"2590","endLine":19,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2629","line":20,"column":10,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2634","line":27,"column":7,"nodeType":"2589","messageId":"2590","endLine":27,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2635","line":73,"column":10,"nodeType":"2589","messageId":"2590","endLine":73,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2636","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2601","line":2,"column":23,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2637","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2638","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2639","line":16,"column":8,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2640","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2641","line":20,"column":8,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2642","line":21,"column":8,"nodeType":"2589","messageId":"2590","endLine":21,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2643","line":22,"column":8,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2644","line":27,"column":5,"nodeType":"2589","messageId":"2590","endLine":27,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2645","line":28,"column":5,"nodeType":"2589","messageId":"2590","endLine":28,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2646","line":1,"column":16,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2636","line":2,"column":23,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2647","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2648","line":31,"column":11,"nodeType":"2589","messageId":"2590","endLine":31,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2649","line":32,"column":11,"nodeType":"2589","messageId":"2590","endLine":32,"endColumn":19},{"ruleId":"2650","severity":1,"message":"2651","line":67,"column":5,"nodeType":"2652","messageId":"2653","endLine":67,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2654","line":17,"column":10,"nodeType":"2589","messageId":"2590","endLine":17,"endColumn":12},{"ruleId":"2587","severity":1,"message":"2655","line":20,"column":11,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2638","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2656","line":47,"column":9,"nodeType":"2589","messageId":"2590","endLine":47,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":52,"column":9,"nodeType":"2589","messageId":"2590","endLine":52,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2658","line":94,"column":9,"nodeType":"2589","messageId":"2590","endLine":94,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":98,"column":9,"nodeType":"2589","messageId":"2590","endLine":98,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2660","line":26,"column":8,"nodeType":"2589","messageId":"2590","endLine":26,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2661","line":27,"column":8,"nodeType":"2589","messageId":"2590","endLine":27,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2662","line":28,"column":8,"nodeType":"2589","messageId":"2590","endLine":28,"endColumn":31},{"ruleId":"2587","severity":1,"message":"2638","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2656","line":47,"column":9,"nodeType":"2589","messageId":"2590","endLine":47,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":52,"column":9,"nodeType":"2589","messageId":"2590","endLine":52,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2658","line":94,"column":9,"nodeType":"2589","messageId":"2590","endLine":94,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":98,"column":9,"nodeType":"2589","messageId":"2590","endLine":98,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2663","line":17,"column":8,"nodeType":"2589","messageId":"2590","endLine":17,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2664","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2662","line":28,"column":8,"nodeType":"2589","messageId":"2590","endLine":28,"endColumn":31},{"ruleId":"2587","severity":1,"message":"2665","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2663","line":17,"column":8,"nodeType":"2589","messageId":"2590","endLine":17,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2664","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2662","line":28,"column":8,"nodeType":"2589","messageId":"2590","endLine":28,"endColumn":31},{"ruleId":"2587","severity":1,"message":"2638","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2656","line":47,"column":9,"nodeType":"2589","messageId":"2590","endLine":47,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":52,"column":9,"nodeType":"2589","messageId":"2590","endLine":52,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2658","line":94,"column":9,"nodeType":"2589","messageId":"2590","endLine":94,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":98,"column":9,"nodeType":"2589","messageId":"2590","endLine":98,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2663","line":17,"column":8,"nodeType":"2589","messageId":"2590","endLine":17,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2664","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2663","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2663","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2610","line":22,"column":11,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2610","line":22,"column":11,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2667","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2610","line":22,"column":11,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2638","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2656","line":47,"column":9,"nodeType":"2589","messageId":"2590","endLine":47,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":52,"column":9,"nodeType":"2589","messageId":"2590","endLine":52,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2658","line":94,"column":9,"nodeType":"2589","messageId":"2590","endLine":94,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":98,"column":9,"nodeType":"2589","messageId":"2590","endLine":98,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2660","line":26,"column":8,"nodeType":"2589","messageId":"2590","endLine":26,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2668","line":27,"column":8,"nodeType":"2589","messageId":"2590","endLine":27,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2663","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2667","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2669","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2629","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2670","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":32},{"ruleId":"2587","severity":1,"message":"2671","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2633","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2672","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2624","line":10,"column":17,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2673","line":1,"column":15,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2638","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2639","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2674","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2656","line":50,"column":9,"nodeType":"2589","messageId":"2590","endLine":50,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":55,"column":9,"nodeType":"2589","messageId":"2590","endLine":55,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2658","line":97,"column":9,"nodeType":"2589","messageId":"2590","endLine":97,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":101,"column":9,"nodeType":"2589","messageId":"2590","endLine":101,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2675","line":21,"column":8,"nodeType":"2589","messageId":"2590","endLine":21,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2665","line":22,"column":8,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2676","line":23,"column":8,"nodeType":"2589","messageId":"2590","endLine":23,"endColumn":33},{"ruleId":"2587","severity":1,"message":"2663","line":24,"column":8,"nodeType":"2589","messageId":"2590","endLine":24,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2664","line":25,"column":8,"nodeType":"2589","messageId":"2590","endLine":25,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2677","line":26,"column":10,"nodeType":"2589","messageId":"2590","endLine":26,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2667","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2676","line":2,"column":40,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":65},{"ruleId":"2587","severity":1,"message":"2663","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2678","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2679","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2680","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2656","line":77,"column":9,"nodeType":"2589","messageId":"2590","endLine":77,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2681","line":118,"column":9,"nodeType":"2589","messageId":"2590","endLine":118,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2605","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2608","line":9,"column":8,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2609","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2629","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2605","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2682","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2606","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2683","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2608","line":9,"column":8,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2609","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2629","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2678","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2679","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2680","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2656","line":74,"column":9,"nodeType":"2589","messageId":"2590","endLine":74,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2684","line":95,"column":9,"nodeType":"2589","messageId":"2590","endLine":95,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2681","line":115,"column":9,"nodeType":"2589","messageId":"2590","endLine":115,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2629","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2605","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2682","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2606","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2683","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2608","line":9,"column":8,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2609","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2629","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2678","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2685","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2636","line":8,"column":10,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2686","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2687","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2688","line":14,"column":8,"nodeType":"2589","messageId":"2590","endLine":14,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2679","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2689","line":16,"column":8,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2680","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2620","line":19,"column":10,"nodeType":"2589","messageId":"2590","endLine":19,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2690","line":20,"column":8,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2691","line":21,"column":8,"nodeType":"2589","messageId":"2590","endLine":21,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2692","line":22,"column":8,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2628","line":40,"column":9,"nodeType":"2589","messageId":"2590","endLine":40,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2636","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2601","line":2,"column":23,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2637","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2615","line":7,"column":15,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2638","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2639","line":16,"column":8,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2640","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2641","line":20,"column":8,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2642","line":21,"column":8,"nodeType":"2589","messageId":"2590","endLine":21,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2643","line":22,"column":8,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2644","line":27,"column":5,"nodeType":"2589","messageId":"2590","endLine":27,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2645","line":28,"column":5,"nodeType":"2589","messageId":"2590","endLine":28,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2629","line":3,"column":10,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2693","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2630","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":24},{"ruleId":"2587","severity":1,"message":"2631","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2632","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2628","line":30,"column":9,"nodeType":"2589","messageId":"2590","endLine":30,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2694","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2679","line":2,"column":21,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":32},{"ruleId":"2587","severity":1,"message":"2689","line":2,"column":34,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":40},{"ruleId":"2587","severity":1,"message":"2688","line":2,"column":42,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":52},{"ruleId":"2587","severity":1,"message":"2598","line":2,"column":54,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":65},{"ruleId":"2587","severity":1,"message":"2695","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2604","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2599","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2620","line":12,"column":10,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2600","line":14,"column":8,"nodeType":"2589","messageId":"2590","endLine":14,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2696","line":19,"column":7,"nodeType":"2589","messageId":"2590","endLine":19,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2697","line":36,"column":9,"nodeType":"2589","messageId":"2590","endLine":36,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2698","line":54,"column":9,"nodeType":"2589","messageId":"2590","endLine":54,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2699","line":109,"column":12,"nodeType":"2589","messageId":"2590","endLine":109,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2700","line":111,"column":11,"nodeType":"2589","messageId":"2590","endLine":111,"endColumn":23},{"ruleId":"2701","severity":1,"message":"2615","line":2,"column":3,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":9},{"ruleId":"2701","severity":1,"message":"2694","line":3,"column":3,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":6},{"ruleId":"2701","severity":1,"message":"2702","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":25},{"ruleId":"2701","severity":1,"message":"2703","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":17},{"ruleId":"2701","severity":1,"message":"2704","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":11},{"ruleId":"2701","severity":1,"message":"2705","line":35,"column":7,"nodeType":"2589","messageId":"2590","endLine":35,"endColumn":14},{"ruleId":"2583","replacedBy":"2584"},{"ruleId":"2585","replacedBy":"2586"},{"ruleId":"2701","severity":1,"message":"2615","line":2,"column":3,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":9},{"ruleId":"2701","severity":1,"message":"2694","line":3,"column":3,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":6},{"ruleId":"2701","severity":1,"message":"2702","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":25},{"ruleId":"2701","severity":1,"message":"2703","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":17},{"ruleId":"2701","severity":1,"message":"2704","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":11},{"ruleId":"2701","severity":1,"message":"2705","line":35,"column":7,"nodeType":"2589","messageId":"2590","endLine":35,"endColumn":14},{"ruleId":"2701","severity":1,"message":"2615","line":2,"column":3,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":9},{"ruleId":"2701","severity":1,"message":"2694","line":3,"column":3,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":6},{"ruleId":"2701","severity":1,"message":"2702","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":25},{"ruleId":"2701","severity":1,"message":"2703","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":17},{"ruleId":"2701","severity":1,"message":"2704","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":11},{"ruleId":"2701","severity":1,"message":"2705","line":36,"column":7,"nodeType":"2589","messageId":"2590","endLine":36,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2706","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":29},{"ruleId":"2587","severity":1,"message":"2707","line":102,"column":9,"nodeType":"2589","messageId":"2590","endLine":102,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2660","line":26,"column":8,"nodeType":"2589","messageId":"2590","endLine":26,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2708","line":27,"column":8,"nodeType":"2589","messageId":"2590","endLine":27,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2662","line":28,"column":8,"nodeType":"2589","messageId":"2590","endLine":28,"endColumn":31},{"ruleId":"2583","replacedBy":"2709"},{"ruleId":"2585","replacedBy":"2710"},{"ruleId":"2587","severity":1,"message":"2665","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2708","line":16,"column":8,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":30},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2701","severity":1,"message":"2594","line":11,"column":20,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":29},{"ruleId":"2701","severity":1,"message":"2711","line":16,"column":10,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":14},{"ruleId":"2701","severity":1,"message":"2712","line":16,"column":16,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":23},{"ruleId":"2701","severity":1,"message":"2713","line":43,"column":18,"nodeType":"2589","messageId":"2590","endLine":43,"endColumn":27},{"ruleId":"2587","severity":1,"message":"2618","line":1,"column":24,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2624","line":10,"column":17,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2628","line":116,"column":9,"nodeType":"2589","messageId":"2590","endLine":116,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2618","line":1,"column":24,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2714","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2624","line":6,"column":17,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2675","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2628","line":200,"column":9,"nodeType":"2589","messageId":"2590","endLine":200,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2618","line":1,"column":24,"nodeType":"2589","messageId":"2590","endLine":1,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2624","line":6,"column":17,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2628","line":114,"column":9,"nodeType":"2589","messageId":"2590","endLine":114,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2679","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2633","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2638","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2656","line":47,"column":9,"nodeType":"2589","messageId":"2590","endLine":47,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":52,"column":9,"nodeType":"2589","messageId":"2590","endLine":52,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2658","line":94,"column":9,"nodeType":"2589","messageId":"2590","endLine":94,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":98,"column":9,"nodeType":"2589","messageId":"2590","endLine":98,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2665","line":13,"column":8,"nodeType":"2589","messageId":"2590","endLine":13,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2640","line":2,"column":8,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2607","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2715","line":26,"column":9,"nodeType":"2589","messageId":"2590","endLine":26,"endColumn":33},{"ruleId":"2587","severity":1,"message":"2716","line":32,"column":9,"nodeType":"2589","messageId":"2590","endLine":32,"endColumn":31},{"ruleId":"2587","severity":1,"message":"2717","line":35,"column":9,"nodeType":"2589","messageId":"2590","endLine":35,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2718","line":39,"column":9,"nodeType":"2589","messageId":"2590","endLine":39,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2674","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2719","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2720","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2721","line":13,"column":8,"nodeType":"2589","messageId":"2590","endLine":13,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2722","line":14,"column":8,"nodeType":"2589","messageId":"2590","endLine":14,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2723","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2724","line":16,"column":8,"nodeType":"2589","messageId":"2590","endLine":16,"endColumn":32},{"ruleId":"2587","severity":1,"message":"2725","line":19,"column":10,"nodeType":"2589","messageId":"2590","endLine":19,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2726","line":51,"column":7,"nodeType":"2589","messageId":"2590","endLine":51,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2727","line":117,"column":7,"nodeType":"2589","messageId":"2590","endLine":117,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2699","line":126,"column":10,"nodeType":"2589","messageId":"2590","endLine":126,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2728","line":149,"column":9,"nodeType":"2589","messageId":"2590","endLine":149,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2634","line":23,"column":7,"nodeType":"2589","messageId":"2590","endLine":23,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2635","line":69,"column":10,"nodeType":"2589","messageId":"2590","endLine":69,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2675","line":14,"column":8,"nodeType":"2589","messageId":"2590","endLine":14,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2665","line":15,"column":8,"nodeType":"2589","messageId":"2590","endLine":15,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2663","line":17,"column":8,"nodeType":"2589","messageId":"2590","endLine":17,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2664","line":18,"column":8,"nodeType":"2589","messageId":"2590","endLine":18,"endColumn":26},{"ruleId":"2587","severity":1,"message":"2729","line":42,"column":9,"nodeType":"2589","messageId":"2590","endLine":42,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2634","line":23,"column":7,"nodeType":"2589","messageId":"2590","endLine":23,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2635","line":69,"column":10,"nodeType":"2589","messageId":"2590","endLine":69,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2634","line":23,"column":7,"nodeType":"2589","messageId":"2590","endLine":23,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2635","line":69,"column":10,"nodeType":"2589","messageId":"2590","endLine":69,"endColumn":23},{"ruleId":"2587","severity":1,"message":"2730","line":5,"column":10,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2731","line":6,"column":10,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2732","line":7,"column":8,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2685","line":8,"column":8,"nodeType":"2589","messageId":"2590","endLine":8,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2733","line":9,"column":10,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2734","line":10,"column":10,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2629","line":7,"column":10,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2735","line":9,"column":8,"nodeType":"2589","messageId":"2590","endLine":9,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2736","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2737","line":5,"column":8,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":12},{"ruleId":"2587","severity":1,"message":"2738","line":6,"column":8,"nodeType":"2589","messageId":"2590","endLine":6,"endColumn":11},{"ruleId":"2587","severity":1,"message":"2739","line":39,"column":10,"nodeType":"2589","messageId":"2590","endLine":39,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2740","line":55,"column":10,"nodeType":"2589","messageId":"2590","endLine":55,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2700","line":57,"column":9,"nodeType":"2589","messageId":"2590","endLine":57,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2629","line":2,"column":10,"nodeType":"2589","messageId":"2590","endLine":2,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2689","line":3,"column":3,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":9},{"ruleId":"2587","severity":1,"message":"2620","line":7,"column":10,"nodeType":"2589","messageId":"2590","endLine":7,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2727","line":116,"column":7,"nodeType":"2589","messageId":"2590","endLine":116,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2699","line":125,"column":10,"nodeType":"2589","messageId":"2590","endLine":125,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2741","line":154,"column":9,"nodeType":"2589","messageId":"2590","endLine":154,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2742","line":162,"column":9,"nodeType":"2589","messageId":"2590","endLine":162,"endColumn":17},{"ruleId":"2587","severity":1,"message":"2638","line":3,"column":8,"nodeType":"2589","messageId":"2590","endLine":3,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2618","line":4,"column":8,"nodeType":"2589","messageId":"2590","endLine":4,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2597","line":10,"column":8,"nodeType":"2589","messageId":"2590","endLine":10,"endColumn":15},{"ruleId":"2587","severity":1,"message":"2640","line":11,"column":8,"nodeType":"2589","messageId":"2590","endLine":11,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2639","line":12,"column":8,"nodeType":"2589","messageId":"2590","endLine":12,"endColumn":16},{"ruleId":"2587","severity":1,"message":"2674","line":13,"column":8,"nodeType":"2589","messageId":"2590","endLine":13,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2743","line":20,"column":8,"nodeType":"2589","messageId":"2590","endLine":20,"endColumn":14},{"ruleId":"2587","severity":1,"message":"2744","line":21,"column":8,"nodeType":"2589","messageId":"2590","endLine":21,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2745","line":22,"column":8,"nodeType":"2589","messageId":"2590","endLine":22,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2746","line":23,"column":8,"nodeType":"2589","messageId":"2590","endLine":23,"endColumn":25},{"ruleId":"2587","severity":1,"message":"2747","line":24,"column":8,"nodeType":"2589","messageId":"2590","endLine":24,"endColumn":19},{"ruleId":"2587","severity":1,"message":"2748","line":25,"column":8,"nodeType":"2589","messageId":"2590","endLine":25,"endColumn":13},{"ruleId":"2587","severity":1,"message":"2749","line":52,"column":9,"nodeType":"2589","messageId":"2590","endLine":52,"endColumn":18},{"ruleId":"2587","severity":1,"message":"2750","line":75,"column":35,"nodeType":"2589","messageId":"2590","endLine":75,"endColumn":39},{"ruleId":"2587","severity":1,"message":"2751","line":77,"column":9,"nodeType":"2589","messageId":"2590","endLine":77,"endColumn":20},{"ruleId":"2587","severity":1,"message":"2752","line":81,"column":9,"nodeType":"2589","messageId":"2590","endLine":81,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2656","line":91,"column":9,"nodeType":"2589","messageId":"2590","endLine":91,"endColumn":21},{"ruleId":"2587","severity":1,"message":"2657","line":96,"column":9,"nodeType":"2589","messageId":"2590","endLine":96,"endColumn":22},{"ruleId":"2587","severity":1,"message":"2753","line":99,"column":9,"nodeType":"2589","messageId":"2590","endLine":99,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2716","line":102,"column":9,"nodeType":"2589","messageId":"2590","endLine":102,"endColumn":31},{"ruleId":"2587","severity":1,"message":"2718","line":106,"column":9,"nodeType":"2589","messageId":"2590","endLine":106,"endColumn":34},{"ruleId":"2587","severity":1,"message":"2658","line":139,"column":9,"nodeType":"2589","messageId":"2590","endLine":139,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2659","line":143,"column":9,"nodeType":"2589","messageId":"2590","endLine":143,"endColumn":28},{"ruleId":"2587","severity":1,"message":"2666","line":5,"column":7,"nodeType":"2589","messageId":"2590","endLine":5,"endColumn":14},"no-native-reassign",["2754"],"no-negated-in-lhs",["2755"],"@typescript-eslint/no-unused-vars","'invitationToken' is assigned a value but never used.","Identifier","unusedVar","'Alerts' is defined but never used.","'Welcome' is defined but never used.","'userText' is assigned a value but never used.","'useEffect' is defined but never used.","'swal' is defined but never used.","'I18nFlags' is defined but never used.","'Tooltip' is defined but never used.","'ButtonGroup' is defined but never used.","'WalletIcon' is defined but never used.","'CardWithIcon' is defined but never used.","'useDispatch' is defined but never used.","'IsOnline' is assigned a value but never used.","'I18nSelect' is defined but never used.","'CodeIcon' is defined but never used.","'CreditCardOutlinedIcon' is defined but never used.","'PersonIcon' is defined but never used.","'HistoryIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'config' is defined but never used.","'params' is assigned a value but never used.","'tenantId' is assigned a value but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'dummy' is assigned a value but never used.","'Avatar' is defined but never used.","'Badge' is defined but never used.","'FormControl' is defined but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'Link' is defined but never used.","'yupFormSchemas' is defined but never used.","'yup' is defined but never used.","'yupResolver' is defined but never used.","'useState' is defined but never used.","'handleSubmit' is assigned a value but never used.",["2754"],["2755"],"'classes' is assigned a value but never used.","'i18n' is defined but never used.","'NotificationList' is defined but never used.","'PatientForm' is defined but never used.","'PersonalvitalsListPage' is defined but never used.","'Breadcrumb' is defined but never used.","'QontoConnector' is assigned a value but never used.","'QontoStepIcon' is defined but never used.","'useSelector' is defined but never used.","'Pagination' is defined but never used.","'Checkbox' is defined but never used.","'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'ConfirmModal' is defined but never used.","'Roles' is defined but never used.","'UserStatusView' is defined but never used.","'recordIdToDestroy' is assigned a value but never used.","'setRecordIdToDestroy' is assigned a value but never used.","'Grid' is defined but never used.","'generalSelectors' is defined but never used.","'theme' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'FC' is defined but never used.","'Props' is defined but never used.","'selectedKeys' is assigned a value but never used.","'isAllSelected' is assigned a value but never used.","'doToggleAllSelected' is assigned a value but never used.","'doToggleOneSelected' is assigned a value but never used.","'SelectFormItem' is defined but never used.","'drugsEnumerators' is defined but never used.","'DatePickerRangeFormItem' is defined but never used.","'moment' is defined but never used.","'DatePickerFormItem' is defined but never used.","'RadioFormItem' is defined but never used.","'storage' is assigned a value but never used.","'exporterRenders' is defined but never used.","'branchEnumerators' is defined but never used.","'PatientListFilter' is defined but never used.","'PersonalvitalsListFilter' is defined but never used.","'ContentWrapper' is defined but never used.","'PageTitle' is defined but never used.","'Modal' is defined but never used.","'SearchIcon' is defined but never used.","'InputFormItem' is defined but never used.","'personalvitalsEnumerators' is defined but never used.","'AccountCircle' is defined but never used.","'Spinner' is defined but never used.","'CardActions' is defined but never used.","'Paper' is defined but never used.","'settings' is assigned a value but never used.","'DashboardIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'match' is assigned a value but never used.","'selectors' is defined but never used.","'CardActionArea' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'PermissionChecker' is defined but never used.","'authSelectors' is defined but never used.","'report' is defined but never used.","'TodaysFocus' is defined but never used.","'Box' is defined but never used.","'HomeIcon' is defined but never used.","'Accordion' is assigned a value but never used.","'AccordionSummary' is assigned a value but never used.","'AccordionDetails' is assigned a value but never used.","'expanded' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-unused-vars","'ArrowDownwardIcon' is defined but never used.","'MoneyIcon' is defined but never used.","'red' is defined but never used.","'primary' is assigned a value but never used.","'AppointmentListFilter' is defined but never used.","'button' is assigned a value but never used.","'appointmentEnumerators' is defined but never used.",["2754"],["2755"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setValues' is assigned a value but never used.","'UndoIcon' is defined but never used.","'hasPermissionToAuditLogs' is assigned a value but never used.","'hasPermissionToDestroy' is assigned a value but never used.","'destroyLoading' is assigned a value but never used.","'doOpenDestroyConfirmModal' is assigned a value but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'AccountBalanceWalletIcon' is defined but never used.","'FormProvider' is defined but never used.","'emptyValues' is assigned a value but never used.","'userId' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'getHistory' is defined but never used.","'AuthToken' is defined but never used.","'AuthCurrentTenant' is defined but never used.","'tenantSubdomain' is defined but never used.","'OnlineStatus' is defined but never used.","'ColoredChip' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'onReset' is assigned a value but never used.","'onRemove' is assigned a value but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Slide' is defined but never used.","'useStyles' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleListItemClick' is assigned a value but never used.","'hasPermissionToEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]